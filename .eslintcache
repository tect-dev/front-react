[{"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js":"3","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js":"4","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\post.js":"5","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js":"6","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js":"7","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js":"8","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js":"9","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js":"10","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js":"11","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js":"12","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js":"13","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js":"14","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js":"15","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js":"16","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js":"17","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js":"18","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyAPI.js":"19","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js":"20","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js":"21","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js":"22","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerWriteBlock.js":"23","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteBlock.js":"24","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js":"25","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\MarkdownPreviewBlock.js":"26","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js":"27","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js":"28","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js":"29","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js":"30","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js":"31","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Header.js":"32","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js":"33"},{"size":1036,"mtime":1609756956753,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1609380482516,"results":"36","hashOfConfig":"35"},{"size":1533,"mtime":1609941917704,"results":"37","hashOfConfig":"35"},{"size":531,"mtime":1609756956810,"results":"38","hashOfConfig":"35"},{"size":2944,"mtime":1609756956815,"results":"39","hashOfConfig":"35"},{"size":1230,"mtime":1609756956794,"results":"40","hashOfConfig":"35"},{"size":165,"mtime":1609756956825,"results":"41","hashOfConfig":"35"},{"size":5584,"mtime":1609756956820,"results":"42","hashOfConfig":"35"},{"size":3912,"mtime":1609756956800,"results":"43","hashOfConfig":"35"},{"size":2893,"mtime":1609940056343,"results":"44","hashOfConfig":"35"},{"size":209,"mtime":1609931649334,"results":"45","hashOfConfig":"35"},{"size":165,"mtime":1609756956805,"results":"46","hashOfConfig":"35"},{"size":204,"mtime":1609931644412,"results":"47","hashOfConfig":"35"},{"size":209,"mtime":1609931647063,"results":"48","hashOfConfig":"35"},{"size":690,"mtime":1609931774205,"results":"49","hashOfConfig":"35"},{"size":1556,"mtime":1609931763016,"results":"50","hashOfConfig":"35"},{"size":1789,"mtime":1609931770549,"results":"51","hashOfConfig":"35"},{"size":1228,"mtime":1609946513495,"results":"52","hashOfConfig":"35"},{"size":1214,"mtime":1609756956758,"results":"53","hashOfConfig":"35"},{"size":10913,"mtime":1609756956763,"results":"54","hashOfConfig":"35"},{"size":322,"mtime":1609930236587,"results":"55","hashOfConfig":"35"},{"size":10365,"mtime":1609921795217,"results":"56","hashOfConfig":"35"},{"size":2099,"mtime":1609756956716,"results":"57","hashOfConfig":"35"},{"size":2841,"mtime":1609756956742,"results":"58","hashOfConfig":"35"},{"size":213,"mtime":1609756956737,"results":"59","hashOfConfig":"35"},{"size":1362,"mtime":1609756956732,"results":"60","hashOfConfig":"35"},{"size":259,"mtime":1609756956743,"results":"61","hashOfConfig":"35"},{"size":248,"mtime":1609933267529,"results":"62","hashOfConfig":"35"},{"size":1418,"mtime":1609756956767,"results":"63","hashOfConfig":"35"},{"size":364,"mtime":1609933514033,"results":"64","hashOfConfig":"35"},{"size":1050,"mtime":1609932524798,"results":"65","hashOfConfig":"35"},{"size":5327,"mtime":1609940196771,"results":"66","hashOfConfig":"35"},{"size":1960,"mtime":1609937497651,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"a3abpd",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js",[],["145","146"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js",["147"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\post.js",["148"],"// postingAPI.함수이름 으로 사용하게 모든 함수를 임포트(import * as postingAPI)\r\nimport * as dummyAPI from '../lib/dummyAPI';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  posts: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n  post: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\n// action types\r\nconst GET_POSTS_TRY = 'post/GET_POSTS_TRY';\r\nconst GET_POSTS_SUCCESS = 'post/GET_POSTS_SUCCESS';\r\nconst GET_POSTS_FAIL = 'post/GET_POSTS_FAIL';\r\n\r\nconst GET_POST_TRY = 'post/GET_POST_TRY';\r\nconst GET_POST_SUCCESS = 'post/GET_POST_SUCCESS';\r\nconst GET_POST_FAIL = 'post/GET_POST_FAIL';\r\n\r\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\r\nexport const getPosts = () => async (dispatch) => {\r\n  dispatch({ type: GET_POSTS_TRY }); // 요청이 시작됨\r\n  try {\r\n    const res = await axios.get('/posts'); //api 요청을 보내고, 성공하면 성공에 대한 타입을 dispatch. 에러가 발생하면 에러에 대한 dispatch\r\n    // 디버깅을 위해 setTimeout 을 설정해뒀다.\r\n    setTimeout(() => {\r\n      dispatch({ type: GET_POSTS_SUCCESS, posts: res.data });\r\n    }, 500);\r\n  } catch (e) {\r\n    dispatch({ type: GET_POSTS_FAIL, error: e });\r\n  }\r\n};\r\n\r\nexport const getPostById = (id) => async (dispatch) => {\r\n  dispatch({ type: GET_POST_TRY });\r\n  try {\r\n    const res = await axios.get(`/posts/${id}`);\r\n    console.log('res.data: ', res.data);\r\n    setTimeout(() => {\r\n      dispatch({ type: GET_POST_SUCCESS, post: res.data });\r\n    }, 500);\r\n  } catch (e) {\r\n    console.log('error: ', e);\r\n    dispatch({ type: GET_POST_FAIL, error: e });\r\n  }\r\n};\r\n\r\nexport default function post(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS_TRY:\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          loading: false,\r\n          data: action.posts,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_POSTS_FAIL:\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error,\r\n        },\r\n      };\r\n\r\n    case GET_POST_TRY:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          loading: false,\r\n          data: action.post,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js",["149","150"],"// define ACTION type\r\n\r\nconst LOG_IN_TRY = 'auth/LOG_IN_TRY';\r\nconst LOG_IN_SUCCESS = 'auth/LOG_IN_SUCCESS';\r\nconst LOG_IN_FAIL = 'auth/LOG_IN_FAIL';\r\nconst CREATE_USER_SUCCESS = 'auth/CREATE_USER_SUCCESS';\r\n\r\nconst initialState = { loginState: false, userInfo: {} };\r\n\r\n// 액션타입을 redux 파일 안에 정의하고, 정의한 액션타입을 다른 파일에서 사용하기 위해\r\n// 액션 생성함수를 정의하고, 생성함수를 export 할 것이다.\r\nexport const loginSuccess = () => {\r\n  return { type: LOG_IN_SUCCESS };\r\n};\r\n\r\n// 1초 뒤에 loginSuccess() 를 디스패치 한다. 딜레이된 로그인석세스를 디스패치->다시한번 로그인석세스를 1초뒤 디스패치.\r\nexport const loginSuccessDelayed = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(loginSuccess());\r\n  }, 1000);\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        userInfo: { userNickname: 'testname', userUID: 'qwerasdfzxcvnmvclkjh' },\r\n        loginState: true,\r\n      };\r\n    case LOG_IN_FAIL:\r\n      return {\r\n        ...state,\r\n        loginState: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js",["151","152","153","154","155","156"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js",["157","158","159"],"import React, { useEffect } from 'react';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport { useSelector } from 'react-redux';\r\nimport QuestionWriteBlock from '../../components/question/QuestionWriteBlock';\r\n\r\nexport default function QuestionWritePage({ history }) {\r\n  //useEffect(() => {\r\n  //  return () => {\r\n  //    history.block('페이지를 떠나시는건가요?');\r\n  //  };\r\n  //}, [history]);\r\n  const { loginState, userInfo } = useSelector((state) => {\r\n    return { loginState: state.auth.loginState, userInfo: state.auth.userInfo };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <QuestionWriteBlock />\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js",["160","161"],"import { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readQuestionByUID } from '../../redux/readPost';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport AnswerWriteBlock from '../../components/question/AnswerWriteBlock';\r\n\r\nexport default function QuestionDetailPage({ match }) {\r\n  const questionID = match.params.questionID;\r\n  const { loading, data, error } = useSelector((state) => {\r\n    return state.readPost.question;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const getPostAsync = useCallback(() => {\r\n  //  dispatch(readQuestionByUID(questionID));\r\n  //}, [dispatch]);\r\n  const getQuestionAsync = useCallback(() => {\r\n    dispatch(readQuestionByUID(questionID));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    console.log('match.params: ', match.params);\r\n    console.log('questionID: ', questionID);\r\n    getQuestionAsync();\r\n  }, [dispatch]);\r\n\r\n  if (loading)\r\n    return (\r\n      <MainLayout>\r\n        <div>로딩중...</div>\r\n      </MainLayout>\r\n    );\r\n\r\n  if (error) {\r\n    return (\r\n      <MainLayout>\r\n        <div>error...</div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n  if (!data)\r\n    return (\r\n      <>\r\n        <MainLayout>no data</MainLayout>\r\n      </>\r\n    );\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div>params: {questionID}</div>\r\n        <h2>title: {data.questionBody.title}</h2>\r\n        <div>본문: {data.questionBody.content}</div>\r\n\r\n        <AnswerWriteBlock questionUID={questionID} />\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js",["162","163"],"import { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport { readQuestionList } from '../../redux/readPost';\r\nimport { Link } from 'react-router-dom';\r\nimport QuestionBlock from '../../components/question/QuestionBlock';\r\n\r\nexport default function QuestionListPage() {\r\n  const { loading, data, error } = useSelector((state) => {\r\n    return state.readPost.questionList;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // useCallback : 함수의 불필요한 리렌더링을 막기 위한 hooks.\r\n  // react 는 컴포넌트가 리렌더링되면 함수도 새로 생기는데, 반복적으로 사용하는 함수를 리렌더링 하지 않고 재사용하기 위함.\r\n  const getQuestionListAsync = useCallback(() => {\r\n    dispatch(readQuestionList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(async () => {\r\n    getQuestionListAsync();\r\n  }, [dispatch]);\r\n\r\n  if (loading)\r\n    return (\r\n      <MainLayout>\r\n        <div>로딩중...</div>\r\n      </MainLayout>\r\n    );\r\n  if (error)\r\n    return (\r\n      <MainLayout>\r\n        <div>error...</div>\r\n      </MainLayout>\r\n    );\r\n\r\n  if (!data)\r\n    return (\r\n      <MainLayout>\r\n        <div>no data</div>\r\n      </MainLayout>\r\n    );\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <h2>question List</h2>\r\n        <Link to={'/question/write'}>글쓰기</Link>\r\n        {data\r\n          ? data.map((element) => {\r\n              return (\r\n                <>\r\n                  <QuestionBlock\r\n                    questionUID={element._id}\r\n                    title={element.questionBody.title}\r\n                  />\r\n                </>\r\n              );\r\n            })\r\n          : ''}\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js",["164"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyAPI.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js",["165","166","167","168","169","170"],"import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport styles from '../../styles/Techtree.module.css';\r\n\r\nexport default function ForceGraph({ techtreeData, category }) {\r\n  const containerRef = React.useRef(null);\r\n\r\n  const nodeHoverTooltip = (node) => {\r\n    return `<div>     \r\n      <p><b>${node.name}</b></p>\r\n      <p>최근 5년<br />마일리지 커트라인<br />${node.recentMileage}</p>\r\n    </div>`;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    let destroyFn;\r\n\r\n    if (containerRef.current) {\r\n      const { destroy } = runForceGraph(\r\n        containerRef.current,\r\n        techtreeData,\r\n        category,\r\n        nodeHoverTooltip\r\n      );\r\n      destroyFn = destroy;\r\n    }\r\n\r\n    return destroyFn;\r\n  }, []);\r\n\r\n  return <div ref={containerRef} className={styles.container} />;\r\n}\r\n\r\nfunction runForceGraph(container, techtreeData, category, nodeHoverTooltip) {\r\n  // linksData 대신, 객체 전체를 받아야지 이게 어느 과목인지도 확인할 수 있음.\r\n  const links = techtreeData.links.map((d) => Object.assign({}, d));\r\n  const nodes = techtreeData.nodes.map((d) => Object.assign({}, d));\r\n\r\n  const containerRect = container.getBoundingClientRect();\r\n  const height = 1000; //containerRect.height;\r\n  const width = 900; //containerRect.width;\r\n\r\n  let xScale = d3.scaleLinear().domain([0, width]).range([0, width]);\r\n  let yScale = d3.scaleLinear().domain([0, height]).range([0, height]);\r\n\r\n  //const circleColor = () => { return \"#fff\"; };\r\n  //const circleFill = \"#fff\"\r\n  const circleSelctedFill = '#00bebe';\r\n  // 학년별로 색깔을 달리하면, 애초에 테크트리를 제시하는 의미가 없잖아.\r\n  // 내가 3학년인데 고체물리 들어도 되나? 이런걸 보고싶은건데.\r\n  function getRandom00BEBE() {\r\n    const colorSet1 = ['#66b7ce', '#6771dc', '#a367db', '#db67ce', '#00bebe'];\r\n    const colorSet2 = [\r\n      '#66b7ce',\r\n      '#00bebe',\r\n      'rgb(0, 170, 170)',\r\n      'rgb(0, 140, 190)',\r\n      'rgb(0, 190, 170)',\r\n    ];\r\n    const randomFactor = Math.floor(Math.random() * 5 - 0.001);\r\n    return colorSet2[randomFactor];\r\n    //return linear-gradient(135deg, orange 60%, cyan)\r\n    //return rgb(randomFactor, 165+randomFactor, 165+randomFactor)\r\n  }\r\n  const circleStrokeColor1 = getRandom00BEBE(); //\"#94D7FF\"\r\n  const circleStrokeColor2 = getRandom00BEBE(); //\"#5DE87C\"\r\n  const circleStrokeColor3 = getRandom00BEBE(); //\"#FFF872\"\r\n  const circleStrokeColor4 = getRandom00BEBE(); //\"#FF669A\"\r\n\r\n  const drag = (simulation) => {\r\n    const dragstarted = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const dragged = (d) => {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    };\r\n\r\n    const dragended = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    return d3\r\n      .drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended);\r\n  };\r\n\r\n  const simulation = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      'link',\r\n      d3.forceLink(links).id((d) => d.id)\r\n    )\r\n    .force('charge', d3.forceManyBody().strength(-1050))\r\n    .force('link', d3.forceLink(links).distance(200))\r\n    .force('x', d3.forceX())\r\n    .force('y', d3.forceY());\r\n\r\n  var zoom = d3.zoom().scaleExtent([0.3, 8]).on('zoom', zoomed);\r\n\r\n  const svg = d3\r\n    .select(container)\r\n    .call(zoom)\r\n    .append('svg')\r\n    .attr('viewBox', [-width / 2, -height / 3, width, height * 0.75]);\r\n\r\n  var x2 = xScale.copy(); // reference.\r\n  var y2 = yScale.copy();\r\n\r\n  function zoomed() {\r\n    xScale = d3.event.transform.rescaleX(x2);\r\n    yScale = d3.event.transform.rescaleY(y2);\r\n    tick();\r\n  }\r\n\r\n  svg\r\n    .append('defs')\r\n    .append('marker')\r\n    .attr('id', 'arrowhead')\r\n    .attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a coordinate system 10 wide and 10 high starting on (0,-5)\r\n    .attr('refX', 23) // x coordinate for the reference point of the marker. If circle is bigger, this need to be bigger.\r\n    .attr('refY', 0)\r\n    .attr('orient', 'auto')\r\n    .attr('markerWidth', 10)\r\n    .attr('markerHeight', 10)\r\n    .attr('xoverflow', 'visible')\r\n    .append('svg:path')\r\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n    .attr('fill', '#999')\r\n    .style('stroke', 'none')\r\n    .attr('stroke-width', 1)\r\n    .attr('id', 'vis');\r\n\r\n  const link = svg\r\n    .append('g')\r\n    .attr('stroke', '#999')\r\n    .attr('stroke-opacity', 0.6)\r\n    .selectAll('line')\r\n    .data(links)\r\n    .join('line')\r\n    .attr('class', (d) => {\r\n      return `link${d.index}`;\r\n    })\r\n    .attr('stroke-width', 2)\r\n    .attr('marker-end', 'url(#arrowhead)');\r\n\r\n  const node = svg\r\n    .append('g')\r\n    .attr('stroke-width', 2)\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .join('circle')\r\n    //.attr('class',(d)=>{return `${d.name}`})\r\n    .attr('class', (d) => {\r\n      return `node${d.index}`;\r\n    })\r\n    .attr('r', 30)\r\n    .style('fill', function (d) {\r\n      return getRandom00BEBE();\r\n    })\r\n    .style('stroke', '#fff')\r\n    .call(drag(simulation));\r\n\r\n  function matchColorForGroup(d) {\r\n    switch (d.group) {\r\n      case 1:\r\n        return circleStrokeColor1;\r\n      case 2:\r\n        return circleStrokeColor2;\r\n      case 3:\r\n        return circleStrokeColor3;\r\n      case 4:\r\n        return circleStrokeColor4;\r\n      default:\r\n        return '#00bebe';\r\n    }\r\n  }\r\n\r\n  const label = svg\r\n    .append('g')\r\n    .attr('class', 'labels')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dominant-baseline', 'central')\r\n    .attr('class', (d) => {\r\n      return d.index;\r\n    })\r\n    //.attr(\"class\", )\r\n    .text((d) => {\r\n      return d.label;\r\n    })\r\n    .style('font-weight', 'bold')\r\n    .style('fill', '#fff')\r\n    .call(drag(simulation));\r\n\r\n  // Add the tooltip element to the graph\r\n  const tooltip = d3.select(container).append('div');\r\n\r\n  const addTooltip = (hoverTooltip, node, x, y) => {\r\n    //  tooltip // tooltip is just div. how add transition?\r\n    //  .transition()\r\n    //    .duration(200)\r\n    tooltip\r\n      .html(hoverTooltip(node))\r\n      .attr('class', 'tooltip')\r\n      .style('left', `${x + 40}px`)\r\n      .style('top', `${y - 120}px`)\r\n      .style('opacity', 0.99);\r\n  };\r\n\r\n  const removeTooltip = () => {\r\n    tooltip\r\n      //  .transition()\r\n      //  .duration(200)\r\n      .style('opacity', 0);\r\n  };\r\n\r\n  node\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\r\n      fadeExceptSelected(d);\r\n      node.style('cursor', 'pointer');\r\n    })\r\n    .on('mouseout', (d) => {\r\n      removeTooltip();\r\n      node.style('opacity', '1');\r\n      link.style('opacity', '1');\r\n      //  container.querySelectorAll('circle').forEach((element)=>{\r\n      //  element.style.fill=matchColorForGroup(element)\r\n      //  })\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`;\r\n    });\r\n\r\n  label\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\r\n      fadeExceptSelected(d);\r\n      label.style('cursor', 'pointer');\r\n    })\r\n    .on('mouseout', () => {\r\n      removeTooltip();\r\n      node.style('opacity', '1');\r\n      link.style('opacity', '1');\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`;\r\n    });\r\n\r\n  function fadeExceptSelected(selectedNode) {\r\n    node.style('opacity', '0.2');\r\n    link.style('opacity', '0.1');\r\n    //const displayedNodes = []\r\n    //const displayedLinks = []\r\n\r\n    links.map((linkElement) => {\r\n      // linkElement 에 source, target은 node 객체 값이 들어가있음.\r\n      if (linkElement.source.id === selectedNode.id) {\r\n        //selectedNode.style(\"opacity\" ,\"0.1\")\r\n        container.querySelector(\r\n          `circle.node${linkElement.target.id}`\r\n        ).style.opacity = '1';\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1';\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.target.id])\r\n        //console.log(\"to: \",nodes[linkElement.target.id])\r\n      } else if (linkElement.target.id === selectedNode.id) {\r\n        container.querySelector(\r\n          `circle.node${linkElement.source.id}`\r\n        ).style.opacity = '1';\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1';\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.source.id])\r\n        //console.log(\"from: \",nodes[linkElement.source.id])\r\n      } else {\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n      }\r\n      //console.log(displayedNodes)\r\n      //displayedNodes.map((element)=>{\r\n      //container.querySelector(`circle.${node.name}`).style.opacity=\"0.1\"\r\n      //node.select(element).style('opacity',\"1\")\r\n      //})\r\n\r\n      // 전부다 투명하게 만들고 나머지 투명도를 복귀하는건 안됨.\r\n      // 자신이 보여줄것 제외하고 그외 나머지를 투명하게 하는식으로 해야지\r\n      // dom 트리상의 문제가 없음.\r\n      //node.select(`circle.${selectedNode.name}`).style('opacity',1)\r\n    });\r\n  }\r\n\r\n  function tick() {\r\n    //update link positions\r\n    link\r\n      .attr('x1', function (d) {\r\n        return xScale(d.source.x);\r\n      })\r\n      .attr('y1', function (d) {\r\n        return yScale(d.source.y);\r\n      })\r\n      .attr('x2', function (d) {\r\n        return xScale(d.target.x);\r\n      })\r\n      .attr('y2', function (d) {\r\n        return yScale(d.target.y);\r\n      });\r\n\r\n    // update node positions\r\n    node.attr('cx', (d) => xScale(d.x)).attr('cy', (d) => yScale(d.y));\r\n\r\n    // update label positions\r\n    label.attr('x', (d) => xScale(d.x)).attr('y', (d) => yScale(d.y));\r\n  }\r\n\r\n  simulation.on('tick', tick);\r\n\r\n  return {\r\n    destroy: () => {\r\n      simulation.stop();\r\n    },\r\n    nodes: () => {\r\n      return svg.node();\r\n    },\r\n  };\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerWriteBlock.js",["171","172","173","174"],"import React, { useEffect, useCallback } from 'react';\r\nimport { uid } from 'uid';\r\n\r\nimport { useInput } from '../../hooks/hooks';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createAnswer } from '../../redux/createPost';\r\nimport MarkdownPreviewBlock from './MarkdownPreviewBlock';\r\n\r\nexport default function AnswerWriteBlock({ questionUID }) {\r\n  const { loginState, userInfo } = useSelector((state) => {\r\n    return { loginState: state.auth.loginState, userInfo: state.auth.userInfo };\r\n  });\r\n\r\n  const [content, onChangeContent] = useInput();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!content) {\r\n        return alert('게시글을 작성하세요.');\r\n      }\r\n      const formData = new FormData();\r\n      const uid24 = uid(24);\r\n      formData.append('postID', uid24);\r\n      formData.append('contentType', 'answer');\r\n      formData.append('itIsAnswerOf', questionUID);\r\n      formData.append('content', content);\r\n      formData.append('authorID', '123456789012345678901234');\r\n      formData.append('authorNickname', '임시닉네임');\r\n      formData.append('hashtags', []);\r\n\r\n      //if (userInfo.userUID) {\r\n      //  formData.append('authorID', userInfo.userUID);\r\n      //  formData.append('authorNickname', userInfo.userUID);\r\n      //} else {\r\n      //  formData.append('authorID', '비회원 글쓰기');\r\n      //  formData.append('authorNickname', '임시닉네임');\r\n      //}\r\n      dispatch(createAnswer(formData));\r\n    },\r\n    [content]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitForm}>\r\n        <div>\r\n          <label for=\"content\">content:</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={onChangeContent}\r\n          ></textarea>\r\n        </div>\r\n        <div id=\"preview\">\r\n          <MarkdownPreviewBlock content={content} />\r\n        </div>\r\n        <div class=\"button\">\r\n          <button type=\"submit\">Send your message</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteBlock.js",["175","176","177"],"import React, { useCallback, useState } from 'react';\r\nimport { uid } from 'uid';\r\n\r\nimport { useInput } from '../../hooks/hooks';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createQuestion } from '../../redux/createPost';\r\nimport MarkdownPreviewBlock from './MarkdownPreviewBlock';\r\n\r\nexport default function QuestionWriteBlock() {\r\n  const { loginState, userInfo } = useSelector((state) => {\r\n    return { loginState: state.auth.loginState, userInfo: state.auth.userInfo };\r\n  });\r\n  const [title, onChangeTitle] = useInput();\r\n  //const [content, onChangeContent] = useInput('$\\\\frac{v^{2}}{2}$');\r\n  const [content, setContent] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeContent = useCallback((e) => {\r\n    setContent(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmitForm = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (!title || !content) {\r\n        return alert('게시글을 작성하세요.');\r\n      }\r\n      const formData = new FormData();\r\n      const uid24 = uid(24);\r\n      formData.append('postID', uid24);\r\n      formData.append('contentType', 'question');\r\n      formData.append('title', title);\r\n      formData.append('content', content);\r\n      formData.append('authorID', '123456789012345678901234');\r\n      formData.append('authorNickname', '임시닉네임');\r\n      formData.append('hashtags', []);\r\n\r\n      //if (userInfo.userUID) {\r\n      //  formData.append('authorID', userInfo.userUID);\r\n      //  formData.append('authorNickname', userInfo.userUID);\r\n      //} else {\r\n      //  formData.append('authorID', '비회원 글쓰기');\r\n      //  formData.append('authorNickname', '임시닉네임');\r\n      //}\r\n      dispatch(createQuestion(formData));\r\n    },\r\n    [title, content]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitForm}>\r\n        <div>\r\n          <label for=\"title\">title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={onChangeTitle}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"content\">content:</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={onChangeContent}\r\n          ></textarea>\r\n        </div>\r\n        <div id=\"preview\">\r\n          <div>{content} : content in write block</div>\r\n          <MarkdownPreviewBlock content={content} />\r\n          {\r\n            //unified()\r\n            //  .use(parse)\r\n            //  .use(math)\r\n            //  .use(remark2rehype)\r\n            //  .use(katex)\r\n            //  .use(remark2react)\r\n            //  .processSync(content).result\r\n          }\r\n        </div>\r\n        <div class=\"button\">\r\n          <button type=\"submit\">Send your message</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\MarkdownPreviewBlock.js",["178"],"import { useState, useEffect } from 'react';\r\nimport unified from 'unified';\r\nimport parse from 'remark-parse';\r\nimport breaks from 'remark-breaks';\r\nimport math from 'remark-math';\r\nimport remark2rehype from 'remark-rehype';\r\nimport katex from 'rehype-katex';\r\nimport stringify from 'rehype-stringify';\r\nimport raw from 'rehype-raw';\r\nimport slug from 'remark-slug';\r\nimport { htmlFilter } from '../../lib/functions';\r\n\r\nexport default function MarkdownPreviewBlock({ content }) {\r\n  const [html, setHtml] = useState(content);\r\n\r\n  useEffect(() => {\r\n    setHtml(\r\n      // html 필터를 쓰면 latex 렌더링이 이상하게 된다!\r\n      // 근데 html 필터를 안써도 * 이나 블록인용문 같은건 제대로 렌더링 안됨.\r\n      //htmlFilter(\r\n      unified()\r\n        .use(breaks)\r\n        .use(parse)\r\n        .use(slug)\r\n        .use(remark2rehype)\r\n        .use(raw)\r\n        .use(math)\r\n        .use(katex)\r\n        .use(stringify)\r\n        .processSync(content)\r\n        .toString()\r\n      //)\r\n    );\r\n  }, [content]);\r\n\r\n  //unified()\r\n  //  .use(parse)\r\n  //  .use(math)\r\n  //  .use(remark2rehype)\r\n  //  .use(katex)\r\n  //  .use(remark2react)\r\n  //  .processSync(content).result\r\n\r\n  return (\r\n    <>\r\n      <div dangerouslySetInnerHTML={{ __html: html }} />\r\n      {/*<div>{content} : content in Preview</div>*/}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js",["179"],"import { Link } from 'react-router-dom';\r\nimport \"../../styles/layout/Footer.scss\"\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          {/* <div>기업 푸터</div>\r\n          <div>일반: 전화번호, 이메일, 계좌정보 </div>\r\n          <div>고객센터 : 전화, 팩스, 이메일, 카카오톡ID(혹은 링크) 상담가능 일시</div>\r\n          <div>법인 : 상호, 대표, 주소, 개인정보관리 책임자, 사업자 등록번호, 통신판매업 신고</div>\r\n          <div> 계좌번호 목록</div>\r\n          <div>회사소개, 개인정보보호정책/처리방침, 이용약관, 사이트맵</div>\r\n          <div>SNS 링크</div>\r\n          <div>별도의 Contact us도 필요한가</div> */}\r\n        </div>\r\n      </footer>\r\n      {/* <ul>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-links\">\r\n            About Tect.dev\r\n          </Link>\r\n        </li>\r\n      </ul> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Header.js",["180","181","182","183","184","185","186","187","188"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":23,"column":63,"nodeType":"195","endLine":26,"endColumn":9},{"ruleId":"196","severity":1,"message":"197","line":2,"column":13,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"200","line":3,"column":7,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"201","line":6,"column":7,"nodeType":"198","messageId":"199","endLine":6,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":59,"column":15,"nodeType":"204","endLine":59,"endColumn":71},{"ruleId":"202","severity":1,"message":"203","line":65,"column":15,"nodeType":"204","endLine":65,"endColumn":72},{"ruleId":"202","severity":1,"message":"203","line":71,"column":15,"nodeType":"204","endLine":71,"endColumn":75},{"ruleId":"202","severity":1,"message":"203","line":77,"column":15,"nodeType":"204","endLine":77,"endColumn":69},{"ruleId":"202","severity":1,"message":"203","line":83,"column":15,"nodeType":"204","endLine":83,"endColumn":74},{"ruleId":"202","severity":1,"message":"203","line":89,"column":15,"nodeType":"204","endLine":89,"endColumn":68},{"ruleId":"196","severity":1,"message":"205","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"206","line":12,"column":11,"nodeType":"198","messageId":"199","endLine":12,"endColumn":21},{"ruleId":"196","severity":1,"message":"207","line":12,"column":23,"nodeType":"198","messageId":"199","endLine":12,"endColumn":31},{"ruleId":"208","severity":1,"message":"209","line":20,"column":6,"nodeType":"210","endLine":20,"endColumn":16,"suggestions":"211"},{"ruleId":"208","severity":1,"message":"212","line":26,"column":6,"nodeType":"210","endLine":26,"endColumn":16,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"214","line":21,"column":13,"nodeType":"215","endLine":23,"endColumn":4},{"ruleId":"208","severity":1,"message":"216","line":23,"column":6,"nodeType":"210","endLine":23,"endColumn":16,"suggestions":"217"},{"ruleId":"202","severity":1,"message":"203","line":14,"column":15,"nodeType":"204","endLine":14,"endColumn":130},{"ruleId":"208","severity":1,"message":"218","line":29,"column":6,"nodeType":"210","endLine":29,"endColumn":8,"suggestions":"219"},{"ruleId":"196","severity":1,"message":"220","line":39,"column":9,"nodeType":"198","messageId":"199","endLine":39,"endColumn":22},{"ruleId":"196","severity":1,"message":"221","line":48,"column":9,"nodeType":"198","messageId":"199","endLine":48,"endColumn":26},{"ruleId":"196","severity":1,"message":"222","line":52,"column":11,"nodeType":"198","messageId":"199","endLine":52,"endColumn":20},{"ruleId":"196","severity":1,"message":"223","line":171,"column":12,"nodeType":"198","messageId":"199","endLine":171,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":267,"column":29,"nodeType":"215","messageId":"226","endLine":267,"endColumn":31},{"ruleId":"196","severity":1,"message":"205","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"206","line":10,"column":11,"nodeType":"198","messageId":"199","endLine":10,"endColumn":21},{"ruleId":"196","severity":1,"message":"207","line":10,"column":23,"nodeType":"198","messageId":"199","endLine":10,"endColumn":31},{"ruleId":"208","severity":1,"message":"227","line":43,"column":5,"nodeType":"210","endLine":43,"endColumn":14,"suggestions":"228"},{"ruleId":"196","severity":1,"message":"206","line":10,"column":11,"nodeType":"198","messageId":"199","endLine":10,"endColumn":21},{"ruleId":"196","severity":1,"message":"207","line":10,"column":23,"nodeType":"198","messageId":"199","endLine":10,"endColumn":31},{"ruleId":"208","severity":1,"message":"229","line":48,"column":5,"nodeType":"210","endLine":48,"endColumn":21,"suggestions":"230"},{"ruleId":"196","severity":1,"message":"231","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":20},{"ruleId":"196","severity":1,"message":"232","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":14},{"ruleId":"196","severity":1,"message":"233","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":22},{"ruleId":"196","severity":1,"message":"234","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":17},{"ruleId":"196","severity":1,"message":"235","line":6,"column":19,"nodeType":"198","messageId":"199","endLine":6,"endColumn":25},{"ruleId":"196","severity":1,"message":"207","line":13,"column":23,"nodeType":"198","messageId":"199","endLine":13,"endColumn":31},{"ruleId":"196","severity":1,"message":"236","line":22,"column":9,"nodeType":"198","messageId":"199","endLine":22,"endColumn":16},{"ruleId":"196","severity":1,"message":"237","line":28,"column":9,"nodeType":"198","messageId":"199","endLine":28,"endColumn":24},{"ruleId":"196","severity":1,"message":"238","line":29,"column":9,"nodeType":"198","messageId":"199","endLine":29,"endColumn":24},{"ruleId":"196","severity":1,"message":"239","line":32,"column":10,"nodeType":"198","messageId":"199","endLine":32,"endColumn":16},{"ruleId":"196","severity":1,"message":"240","line":32,"column":18,"nodeType":"198","messageId":"199","endLine":32,"endColumn":27},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'dummyAPI' is defined but never used.","Identifier","unusedVar","'LOG_IN_TRY' is assigned a value but never used.","'CREATE_USER_SUCCESS' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'loginState' is assigned a value but never used.","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'questionID'. Either include it or remove the dependency array.","ArrayExpression",["243"],"React Hook useEffect has missing dependencies: 'getQuestionAsync', 'match.params', and 'questionID'. Either include them or remove the dependency array.",["244"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getQuestionListAsync'. Either include it or remove the dependency array.",["245"],"React Hook React.useEffect has missing dependencies: 'category' and 'techtreeData'. Either include them or remove the dependency array.",["246"],"'containerRect' is assigned a value but never used.","'circleSelctedFill' is assigned a value but never used.","'colorSet1' is assigned a value but never used.","'matchColorForGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useCallback has missing dependencies: 'dispatch' and 'questionUID'. Either include them or remove the dependency array.",["247"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["248"],"'htmlFilter' is defined but never used.","'Link' is defined but never used.","'loginSuccess' is defined but never used.","'FaTimes' is defined but never used.","'FaBars' is defined but never used.","'onLogin' is assigned a value but never used.","'handleMenuClick' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [dispatch, questionID]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, getQuestionAsync, match.params, questionID]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, getQuestionListAsync]",{"range":"265","text":"266"},"Update the dependencies array to be: [category, techtreeData]",{"range":"267","text":"268"},"Update the dependencies array to be: [content, dispatch, questionUID]",{"range":"269","text":"270"},"Update the dependencies array to be: [title, content, dispatch]",{"range":"271","text":"272"},[767,777],"[dispatch, questionID]",[930,940],"[dispatch, getQuestionAsync, match.params, questionID]",[827,837],"[dispatch, getQuestionListAsync]",[705,707],"[category, techtreeData]",[1515,1524],"[content, dispatch, questionUID]",[1715,1731],"[title, content, dispatch]"]