[{"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js":"2","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js":"4","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js":"5","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js":"6","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js":"7","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js":"8","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js":"9","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionEditPage.js":"10","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js":"11","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js":"12","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js":"13","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js":"14","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js":"15","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js":"16","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js":"17","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js":"18","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js":"19","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js":"20","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js":"21","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownRenderingBlock.js":"22","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js":"23","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js":"24","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js":"25","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerSection.js":"26","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js":"27","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteSection.js":"28","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionSection.js":"29","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Navbar.js":"30","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js":"31","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js":"32","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismPlugin.js":"33","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismThemes.js":"34","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\CommentListBlock.js":"35","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownEditorBlock.js":"36","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js":"37","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\katexWhiteList.js":"38","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\firebase.js":"39","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Spinner.js":"40"},{"size":1036,"mtime":1610584948723,"results":"41","hashOfConfig":"42"},{"size":1953,"mtime":1610584948689,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1609380482516,"results":"44","hashOfConfig":"42"},{"size":494,"mtime":1610584948767,"results":"45","hashOfConfig":"42"},{"size":204,"mtime":1610584948742,"results":"46","hashOfConfig":"42"},{"size":2942,"mtime":1610584948743,"results":"47","hashOfConfig":"42"},{"size":209,"mtime":1610584948753,"results":"48","hashOfConfig":"42"},{"size":2790,"mtime":1610631193708,"results":"49","hashOfConfig":"42"},{"size":794,"mtime":1610584948755,"results":"50","hashOfConfig":"42"},{"size":3561,"mtime":1610584948754,"results":"51","hashOfConfig":"42"},{"size":5584,"mtime":1610584948775,"results":"52","hashOfConfig":"42"},{"size":1648,"mtime":1610584948753,"results":"53","hashOfConfig":"42"},{"size":5898,"mtime":1610584948767,"results":"54","hashOfConfig":"42"},{"size":1228,"mtime":1610584948760,"results":"55","hashOfConfig":"42"},{"size":1230,"mtime":1610625800943,"results":"56","hashOfConfig":"42"},{"size":209,"mtime":1610584948748,"results":"57","hashOfConfig":"42"},{"size":165,"mtime":1610584948780,"results":"58","hashOfConfig":"42"},{"size":4315,"mtime":1610584948767,"results":"59","hashOfConfig":"42"},{"size":641,"mtime":1610584948690,"results":"60","hashOfConfig":"42"},{"size":10913,"mtime":1610584948735,"results":"61","hashOfConfig":"42"},{"size":345,"mtime":1610584948709,"results":"62","hashOfConfig":"42"},{"size":4231,"mtime":1610584948691,"results":"63","hashOfConfig":"42"},{"size":10365,"mtime":1610584948697,"results":"64","hashOfConfig":"42"},{"size":322,"mtime":1610584948702,"results":"65","hashOfConfig":"42"},{"size":259,"mtime":1610584948712,"results":"66","hashOfConfig":"42"},{"size":2156,"mtime":1610584948710,"results":"67","hashOfConfig":"42"},{"size":1266,"mtime":1610596604918,"results":"68","hashOfConfig":"42"},{"size":4243,"mtime":1610593499315,"results":"69","hashOfConfig":"42"},{"size":2769,"mtime":1610584948711,"results":"70","hashOfConfig":"42"},{"size":5722,"mtime":1610625799124,"results":"71","hashOfConfig":"42"},{"size":1069,"mtime":1610584948703,"results":"72","hashOfConfig":"42"},{"size":1463,"mtime":1610584948736,"results":"73","hashOfConfig":"42"},{"size":2550,"mtime":1610584948736,"results":"74","hashOfConfig":"42"},{"size":15690,"mtime":1610584948737,"results":"75","hashOfConfig":"42"},{"size":414,"mtime":1610584948690,"results":"76","hashOfConfig":"42"},{"size":544,"mtime":1610584948691,"results":"77","hashOfConfig":"42"},{"size":3940,"mtime":1610630446583,"results":"78","hashOfConfig":"42"},{"size":1058,"mtime":1610584948736,"results":"79","hashOfConfig":"42"},{"size":571,"mtime":1610621496100,"results":"80","hashOfConfig":"42"},{"size":239,"mtime":1610630880158,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"a3abpd",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js",[],["174","175"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js",["176","177","178","179","180","181"],"import React from 'react';\r\nimport MainLayout from '../components/layout/MainLayout';\r\nimport '../styles/page/HomePage.scss'\r\n\r\nimport ForceGraph from '../components/home/ForceGraph';\r\nimport SubjectBlock from '../components/home/SubjectBlock';\r\nimport { dummyTechtree } from '../lib/dummyTechtree';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div className=\"homepage-container\">\r\n          <main className=\"techtree-container\">\r\n            <ForceGraph techtreeData={dummyTechtree.cs} category={'cs'} />\r\n          </main>\r\n          <aside className=\"subjects-sidebar\">\r\n            <div\r\n              onClick={() => {\r\n                console.log('physics clicked');\r\n              }}\r\n              className=\"block\"\r\n            >\r\n              <SubjectBlock\r\n                iconSize=\"70\"\r\n                url=\"physics\"\r\n                displayedName=\"physics\"\r\n              />\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img\r\n                src=\"/icons/math.svg\"\r\n                alt=\"mathematicsIcon\"\r\n                height=\"70\"\r\n                width=\"70\"\r\n              />\r\n              <br />\r\n              Mathematics\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img\r\n                src=\"/icons/economics.svg\"\r\n                alt=\"economicsIcon\"\r\n                height=\"70\"\r\n                width=\"70\"\r\n              />\r\n              <br />\r\n              economics\r\n            </div>\r\n\r\n            <div\r\n              onClick={() => {\r\n                console.log('cs clicked');\r\n              }}\r\n              className=\"block\"\r\n            >\r\n              <img src=\"/icons/computer.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Computer Science\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/chemistry.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Chemistry\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/biochemistry.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Biochemistry\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/russia.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Russia\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/electricity.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Electrical Engineering\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/earth.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Earth System\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js",["182","183"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js",["184","185","186","187","188","189","190","191","192"],"import React, { useEffect, useCallback, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\nimport { useInput } from '../../hooks/hooks';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MarkdownRenderingBlock from '../../components/MarkdownRenderingBlock';\r\nimport QuestionWriteSection from '../../components/question/QuestionWriteSection';\r\nimport { uid } from 'uid';\r\n\r\nexport default function QuestionWritePage({ history }) {\r\n  //useEffect(() => {\r\n  //  return () => {\r\n  //    history.block('페이지를 떠나시는건가요?');\r\n  //  };\r\n  //}, [history]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <section>\r\n        <QuestionWriteSection />\r\n      </section>\r\n    </MainLayout>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionEditPage.js",["193","194","195","196","197","198","199","200"],"import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useInput } from '../../hooks/hooks';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MarkdownRenderingBlock from '../../components/MarkdownRenderingBlock';\r\nimport QuestionWriteSection from '../../components/question/QuestionWriteSection';\r\nimport { uid } from 'uid';\r\n\r\nexport default function QuestionWritePage({ history }) {\r\n  const { data, content } = useSelector((state) => {\r\n    return {\r\n      data: state.readPost.question.data,\r\n      content: state.createPost.content,\r\n    };\r\n  });\r\n  //useEffect(() => {\r\n  //  return () => {\r\n  //    history.block('페이지를 떠나시는건가요?');\r\n  //  };\r\n  //}, [history]);\r\n\r\n  const [title, onChangeTitle] = useInput(data.question.questionBody.title);\r\n\r\n  const [hashtagText, setHashtagText] = useState('');\r\n  const [hashtagList, setHashtagList] = useState([]);\r\n\r\n  const splitPoint = /\\,/g;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (hashtagList.length > 10) {\r\n      setHashtagText(hashtagText.substr(0, hashtagText.length - 1));\r\n      hashtagList.pop();\r\n      alert('태그의 갯수가 너무 많아요!');\r\n    }\r\n  }, [hashtagList]);\r\n  const onChangeHashtagText = useCallback(\r\n    (e) => {\r\n      setHashtagText(e.target.value);\r\n      let splitedArray = e.target.value.split(splitPoint);\r\n      const editedArray = splitedArray\r\n        .map((element) => {\r\n          return element.replace(/[^가-힣|a-z|A-Z|0-9]/g, '');\r\n        })\r\n        .filter((string) => string.length > 0);\r\n\r\n      setHashtagList(editedArray);\r\n    },\r\n    [hashtagText]\r\n  );\r\n\r\n  const onSubmitForm = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (!title || !content) {\r\n        return alert('제목과 본문을 작성해 주세요.');\r\n      }\r\n      const formData = new FormData();\r\n      const uid24 = uid(24);\r\n      formData.append('postID', uid24);\r\n      formData.append('contentType', 'question');\r\n      formData.append('title', title);\r\n      formData.append('content', content);\r\n      formData.append('authorID', '123456789012345678901234');\r\n      formData.append('authorNickname', '임시닉네임');\r\n      // 해시태그는 띄어쓰기 없이, 전부 소문자로, 특수문자없이 서버단으로 보낸다.\r\n      // 클라이언트에서 사용자의 입력은 자유롭게 받되, 서버로 보낼때 문자열을 다듬어서 보내준다.\r\n      formData.append('hashtags', hashtagList);\r\n\r\n      //if (userInfo.userUID) {\r\n      //  formData.append('authorID', userInfo.userUID);\r\n      //  formData.append('authorNickname', userInfo.userUID);\r\n      //} else {\r\n      //  formData.append('authorID', '비회원 글쓰기');\r\n      //  formData.append('authorNickname', '임시닉네임');\r\n      //}\r\n\r\n      // 여기서 디스패치 하는 함수를, 상위 컴포넌트에서 props 로 받아오게 하자.\r\n      // 그래야지 question, article 등등 범용성있게 쓸수있음.\r\n      // props 로 받아온 타입에서, 타입따라 코드가 조금씩 달라지게 해야할듯. 리턴쪽에서.\r\n    },\r\n    [title, content]\r\n  );\r\n\r\n  return (\r\n    <MainLayout>\r\n      <section>\r\n        <QuestionWriteSection initialContent={data.question} />\r\n      </section>\r\n      <section>\r\n        <div id=\"preview\">\r\n          <div>Preview</div>\r\n          <MarkdownRenderingBlock content={content} />\r\n        </div>\r\n      </section>\r\n    </MainLayout>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js",["201","202"],"import { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readQuestionByUID } from '../../redux/readPost';\r\nimport { Link } from 'react-router-dom';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport QuestionSection from '../../components/question/QuestionSection';\r\nimport AnswerSection from '../../components/question/AnswerSection';\r\n\r\n//import WriteBlock from '../../components/WriteBlock';\r\n\r\nexport default function QuestionDetailPage({ match }) {\r\n  const questionID = match.params.questionID;\r\n  const { loading, data, error } = useSelector((state) => {\r\n    return state.readPost.question;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getQuestionAsync = useCallback(() => {\r\n    dispatch(readQuestionByUID(questionID));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    getQuestionAsync();\r\n  }, [dispatch]);\r\n\r\n  if (loading)\r\n    return (\r\n      <MainLayout>\r\n        <div>로딩중...</div>\r\n      </MainLayout>\r\n    );\r\n\r\n  if (error) {\r\n    console.log(error);\r\n    return (\r\n      <MainLayout>\r\n        <div>error...</div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n  if (!data)\r\n    return (\r\n      <>\r\n        <MainLayout>no data</MainLayout>\r\n      </>\r\n    );\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div>params: {questionID}</div>\r\n        <div>\r\n          <Link to={`/user/${data.question.questionBody.authorID}`}>\r\n            authorNickname: {data.question.questionBody.authorNickname}\r\n          </Link>\r\n        </div>\r\n        <QuestionSection data={data} />\r\n        <AnswerSection data={data} />\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js",["203"],"import React from 'react';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport \"../../styles/page/user/ProfilePage.scss\"\r\n\r\nexport default function ProfilePage({ match }) {\r\n  const { userUID } = match.params;\r\n\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div className=\"profile-container\">\r\n          <div className=\"profile-upside\">\r\n            <div className=\"profile-photo\">\r\n              <img src=\"https://media.vlpt.us/images/ghkdwltjq98/profile/b7b493c6-69ef-4886-aec6-16d03800306e/social.png?w=120\"/> \r\n            </div>\r\n            <div className=\"intro-container\">\r\n              <div>{userUID} 닉네임</div>\r\n              <div>이메일</div>\r\n              <div>연락처</div>\r\n              <div>가입일시</div>\r\n              <div>마지막 접속일</div>\r\n              <div>인증 연동</div>\r\n              <div>포인트</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-downside\">\r\n            <div className=\"profile-card\">Questions (0)</div>\r\n            <div className=\"profile-card\">Answers (0)</div>\r\n            <div className=\"profile-card\">Free Posts (0)</div>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js",["204","205"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownRenderingBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js",["206","207","208","209","210","211"],"import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport styles from '../../styles/Techtree.module.css';\r\n\r\nexport default function ForceGraph({ techtreeData, category }) {\r\n  const containerRef = React.useRef(null);\r\n\r\n  const nodeHoverTooltip = (node) => {\r\n    return `<div>     \r\n      <p><b>${node.name}</b></p>\r\n      <p>최근 5년<br />마일리지 커트라인<br />${node.recentMileage}</p>\r\n    </div>`;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    let destroyFn;\r\n\r\n    if (containerRef.current) {\r\n      const { destroy } = runForceGraph(\r\n        containerRef.current,\r\n        techtreeData,\r\n        category,\r\n        nodeHoverTooltip\r\n      );\r\n      destroyFn = destroy;\r\n    }\r\n\r\n    return destroyFn;\r\n  }, []);\r\n\r\n  return <div ref={containerRef} className={styles.container} />;\r\n}\r\n\r\nfunction runForceGraph(container, techtreeData, category, nodeHoverTooltip) {\r\n  // linksData 대신, 객체 전체를 받아야지 이게 어느 과목인지도 확인할 수 있음.\r\n  const links = techtreeData.links.map((d) => Object.assign({}, d));\r\n  const nodes = techtreeData.nodes.map((d) => Object.assign({}, d));\r\n\r\n  const containerRect = container.getBoundingClientRect();\r\n  const height = 1000; //containerRect.height;\r\n  const width = 900; //containerRect.width;\r\n\r\n  let xScale = d3.scaleLinear().domain([0, width]).range([0, width]);\r\n  let yScale = d3.scaleLinear().domain([0, height]).range([0, height]);\r\n\r\n  //const circleColor = () => { return \"#fff\"; };\r\n  //const circleFill = \"#fff\"\r\n  const circleSelctedFill = '#00bebe';\r\n  // 학년별로 색깔을 달리하면, 애초에 테크트리를 제시하는 의미가 없잖아.\r\n  // 내가 3학년인데 고체물리 들어도 되나? 이런걸 보고싶은건데.\r\n  function getRandom00BEBE() {\r\n    const colorSet1 = ['#66b7ce', '#6771dc', '#a367db', '#db67ce', '#00bebe'];\r\n    const colorSet2 = [\r\n      '#66b7ce',\r\n      '#00bebe',\r\n      'rgb(0, 170, 170)',\r\n      'rgb(0, 140, 190)',\r\n      'rgb(0, 190, 170)',\r\n    ];\r\n    const randomFactor = Math.floor(Math.random() * 5 - 0.001);\r\n    return colorSet2[randomFactor];\r\n    //return linear-gradient(135deg, orange 60%, cyan)\r\n    //return rgb(randomFactor, 165+randomFactor, 165+randomFactor)\r\n  }\r\n  const circleStrokeColor1 = getRandom00BEBE(); //\"#94D7FF\"\r\n  const circleStrokeColor2 = getRandom00BEBE(); //\"#5DE87C\"\r\n  const circleStrokeColor3 = getRandom00BEBE(); //\"#FFF872\"\r\n  const circleStrokeColor4 = getRandom00BEBE(); //\"#FF669A\"\r\n\r\n  const drag = (simulation) => {\r\n    const dragstarted = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const dragged = (d) => {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    };\r\n\r\n    const dragended = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    return d3\r\n      .drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended);\r\n  };\r\n\r\n  const simulation = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      'link',\r\n      d3.forceLink(links).id((d) => d.id)\r\n    )\r\n    .force('charge', d3.forceManyBody().strength(-1050))\r\n    .force('link', d3.forceLink(links).distance(200))\r\n    .force('x', d3.forceX())\r\n    .force('y', d3.forceY());\r\n\r\n  var zoom = d3.zoom().scaleExtent([0.3, 8]).on('zoom', zoomed);\r\n\r\n  const svg = d3\r\n    .select(container)\r\n    .call(zoom)\r\n    .append('svg')\r\n    .attr('viewBox', [-width / 2, -height / 3, width, height * 0.75]);\r\n\r\n  var x2 = xScale.copy(); // reference.\r\n  var y2 = yScale.copy();\r\n\r\n  function zoomed() {\r\n    xScale = d3.event.transform.rescaleX(x2);\r\n    yScale = d3.event.transform.rescaleY(y2);\r\n    tick();\r\n  }\r\n\r\n  svg\r\n    .append('defs')\r\n    .append('marker')\r\n    .attr('id', 'arrowhead')\r\n    .attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a coordinate system 10 wide and 10 high starting on (0,-5)\r\n    .attr('refX', 23) // x coordinate for the reference point of the marker. If circle is bigger, this need to be bigger.\r\n    .attr('refY', 0)\r\n    .attr('orient', 'auto')\r\n    .attr('markerWidth', 10)\r\n    .attr('markerHeight', 10)\r\n    .attr('xoverflow', 'visible')\r\n    .append('svg:path')\r\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n    .attr('fill', '#999')\r\n    .style('stroke', 'none')\r\n    .attr('stroke-width', 1)\r\n    .attr('id', 'vis');\r\n\r\n  const link = svg\r\n    .append('g')\r\n    .attr('stroke', '#999')\r\n    .attr('stroke-opacity', 0.6)\r\n    .selectAll('line')\r\n    .data(links)\r\n    .join('line')\r\n    .attr('class', (d) => {\r\n      return `link${d.index}`;\r\n    })\r\n    .attr('stroke-width', 2)\r\n    .attr('marker-end', 'url(#arrowhead)');\r\n\r\n  const node = svg\r\n    .append('g')\r\n    .attr('stroke-width', 2)\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .join('circle')\r\n    //.attr('class',(d)=>{return `${d.name}`})\r\n    .attr('class', (d) => {\r\n      return `node${d.index}`;\r\n    })\r\n    .attr('r', 30)\r\n    .style('fill', function (d) {\r\n      return getRandom00BEBE();\r\n    })\r\n    .style('stroke', '#fff')\r\n    .call(drag(simulation));\r\n\r\n  function matchColorForGroup(d) {\r\n    switch (d.group) {\r\n      case 1:\r\n        return circleStrokeColor1;\r\n      case 2:\r\n        return circleStrokeColor2;\r\n      case 3:\r\n        return circleStrokeColor3;\r\n      case 4:\r\n        return circleStrokeColor4;\r\n      default:\r\n        return '#00bebe';\r\n    }\r\n  }\r\n\r\n  const label = svg\r\n    .append('g')\r\n    .attr('class', 'labels')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dominant-baseline', 'central')\r\n    .attr('class', (d) => {\r\n      return d.index;\r\n    })\r\n    //.attr(\"class\", )\r\n    .text((d) => {\r\n      return d.label;\r\n    })\r\n    .style('font-weight', 'bold')\r\n    .style('fill', '#fff')\r\n    .call(drag(simulation));\r\n\r\n  // Add the tooltip element to the graph\r\n  const tooltip = d3.select(container).append('div');\r\n\r\n  const addTooltip = (hoverTooltip, node, x, y) => {\r\n    //  tooltip // tooltip is just div. how add transition?\r\n    //  .transition()\r\n    //    .duration(200)\r\n    tooltip\r\n      .html(hoverTooltip(node))\r\n      .attr('class', 'tooltip')\r\n      .style('left', `${x + 40}px`)\r\n      .style('top', `${y - 120}px`)\r\n      .style('opacity', 0.99);\r\n  };\r\n\r\n  const removeTooltip = () => {\r\n    tooltip\r\n      //  .transition()\r\n      //  .duration(200)\r\n      .style('opacity', 0);\r\n  };\r\n\r\n  node\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\r\n      fadeExceptSelected(d);\r\n      node.style('cursor', 'pointer');\r\n    })\r\n    .on('mouseout', (d) => {\r\n      removeTooltip();\r\n      node.style('opacity', '1');\r\n      link.style('opacity', '1');\r\n      //  container.querySelectorAll('circle').forEach((element)=>{\r\n      //  element.style.fill=matchColorForGroup(element)\r\n      //  })\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`;\r\n    });\r\n\r\n  label\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\r\n      fadeExceptSelected(d);\r\n      label.style('cursor', 'pointer');\r\n    })\r\n    .on('mouseout', () => {\r\n      removeTooltip();\r\n      node.style('opacity', '1');\r\n      link.style('opacity', '1');\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`;\r\n    });\r\n\r\n  function fadeExceptSelected(selectedNode) {\r\n    node.style('opacity', '0.2');\r\n    link.style('opacity', '0.1');\r\n    //const displayedNodes = []\r\n    //const displayedLinks = []\r\n\r\n    links.map((linkElement) => {\r\n      // linkElement 에 source, target은 node 객체 값이 들어가있음.\r\n      if (linkElement.source.id === selectedNode.id) {\r\n        //selectedNode.style(\"opacity\" ,\"0.1\")\r\n        container.querySelector(\r\n          `circle.node${linkElement.target.id}`\r\n        ).style.opacity = '1';\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1';\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.target.id])\r\n        //console.log(\"to: \",nodes[linkElement.target.id])\r\n      } else if (linkElement.target.id === selectedNode.id) {\r\n        container.querySelector(\r\n          `circle.node${linkElement.source.id}`\r\n        ).style.opacity = '1';\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1';\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.source.id])\r\n        //console.log(\"from: \",nodes[linkElement.source.id])\r\n      } else {\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1';\r\n      }\r\n      //console.log(displayedNodes)\r\n      //displayedNodes.map((element)=>{\r\n      //container.querySelector(`circle.${node.name}`).style.opacity=\"0.1\"\r\n      //node.select(element).style('opacity',\"1\")\r\n      //})\r\n\r\n      // 전부다 투명하게 만들고 나머지 투명도를 복귀하는건 안됨.\r\n      // 자신이 보여줄것 제외하고 그외 나머지를 투명하게 하는식으로 해야지\r\n      // dom 트리상의 문제가 없음.\r\n      //node.select(`circle.${selectedNode.name}`).style('opacity',1)\r\n    });\r\n  }\r\n\r\n  function tick() {\r\n    //update link positions\r\n    link\r\n      .attr('x1', function (d) {\r\n        return xScale(d.source.x);\r\n      })\r\n      .attr('y1', function (d) {\r\n        return yScale(d.source.y);\r\n      })\r\n      .attr('x2', function (d) {\r\n        return xScale(d.target.x);\r\n      })\r\n      .attr('y2', function (d) {\r\n        return yScale(d.target.y);\r\n      });\r\n\r\n    // update node positions\r\n    node.attr('cx', (d) => xScale(d.x)).attr('cy', (d) => yScale(d.y));\r\n\r\n    // update label positions\r\n    label.attr('x', (d) => xScale(d.x)).attr('y', (d) => yScale(d.y));\r\n  }\r\n\r\n  simulation.on('tick', tick);\r\n\r\n  return {\r\n    destroy: () => {\r\n      simulation.stop();\r\n    },\r\n    nodes: () => {\r\n      return svg.node();\r\n    },\r\n  };\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerSection.js",["212"],"import { useState } from 'react';\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock';\r\nimport CommentListBlock from '../CommentListBlock';\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock';\r\nimport { createAnswer } from '../../redux/createPost';\r\nimport { deleteAnswer } from '../../redux/deletePost';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uid } from 'uid';\r\n\r\nexport default function AnswerSection({ data }) {\r\n  const [content, setContent] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value);\r\n  }\r\n\r\n  function addAnswer(e) {\r\n    e.preventDefault();\r\n    if (!content) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    const formData = new FormData();\r\n    const uid24 = uid(24);\r\n    formData.append('contentType', 'answer');\r\n    formData.append('postID', data.question._id);\r\n    formData.append('answerID', uid24);\r\n    formData.append('content', content);\r\n    formData.append('authorNickname', '임시닉네임');\r\n    formData.append('authorID', '123456789012345678901234');\r\n\r\n    dispatch(createAnswer(formData));\r\n  }\r\n\r\n  function onDeleteAnswer(id) {\r\n    dispatch(deleteAnswer(id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {data.answers.map((element, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <div className=\"content\">\r\n              answer{index}\r\n              <MarkdownRenderingBlock content={element.answerBody.content} />\r\n            </div>\r\n            <button>answer 수정</button>\r\n            <button\r\n              onClick={() => {\r\n                onDeleteAnswer(element._id);\r\n              }}\r\n            >\r\n              answer 삭제\r\n            </button>\r\n            {/* <CommentListBlock commentList={element.answerBody.comments} /> */}\r\n            <MarkdownEditorBlock />\r\n            <button>answer에 댓글달기</button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <MarkdownEditorBlock\r\n        className=\"answerWrite\"\r\n        onChangeContentProps={onChangeContent}\r\n      />\r\n      <button onClick={addAnswer}>answer 추가하기</button>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteSection.js",["213","214","215","216","217"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { uid } from 'uid';\r\nimport { useInput } from '../../hooks/hooks';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createQuestion } from '../../redux/createPost';\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock';\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock';\r\n\r\nexport default function QuestionWriteSection() {\r\n  const [title, onChangeTitle] = useInput('');\r\n  const [content, setContent] = useState('');\r\n\r\n  const [hashtagText, setHashtagText] = useState('');\r\n  const [hashtagList, setHashtagList] = useState([]);\r\n  //const hashtagPattern = /^\\#[a-zA-Z0-9]+[\\s\\,]$/g;\r\n  const splitPoint = /\\,/g;\r\n  const dispatch = useDispatch();\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (hashtagList.length > 10) {\r\n      setHashtagText(hashtagText.substr(0, hashtagText.length - 1));\r\n      hashtagList.pop();\r\n      alert('태그의 갯수가 너무 많아요!');\r\n    }\r\n  }, [hashtagList]);\r\n\r\n  const onChangeHashtagText = useCallback(\r\n    (e) => {\r\n      setHashtagText(e.target.value);\r\n      let splitedArray = e.target.value.split(splitPoint);\r\n      const editedArray = splitedArray\r\n        .map((element) => {\r\n          return element.replace(/[^가-힣|a-z|A-Z|0-9]/g, '');\r\n        })\r\n        .filter((string) => string.length > 0);\r\n      console.log('editedArray : ', editedArray);\r\n      setHashtagList(editedArray);\r\n      console.log('hashtag Array : ', hashtagList);\r\n    },\r\n    [hashtagText]\r\n  );\r\n\r\n  const onSubmitForm = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (!title || !content) {\r\n        return alert('제목과 본문을 작성해 주세요.');\r\n      }\r\n      //const formData = new FormData();\r\n      const uid24 = uid(24);\r\n      const formData = {\r\n        postID: uid24,\r\n        title: title,\r\n        content: content,\r\n        authorID: '123456789012345678901234',\r\n        authorNickname: '익명',\r\n        hashtags: hashtagList,\r\n      };\r\n      //formData.append('postID', uid24);\r\n      //formData.append('contentType', 'question');\r\n      //formData.append('title', title);\r\n      //formData.append('content', content);\r\n      //formData.append('authorID', '123456789012345678901234');\r\n      //formData.append('authorNickname', '임시닉네임');\r\n      //formData.append('hashtags', JSON.stringify(hashtagList));\r\n\r\n      //if (userInfo.userUID) {\r\n      //  formData.append('authorID', userInfo.userUID);\r\n      //  formData.append('authorNickname', userInfo.userUID);\r\n      //} else {\r\n      //  formData.append('authorID', '비회원 글쓰기');\r\n      //  formData.append('authorNickname', '임시닉네임');\r\n      //}\r\n\r\n      dispatch(createQuestion(formData));\r\n    },\r\n    [title, content, hashtagList]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <form onSubmit={onSubmitForm}>\r\n          <div>\r\n            <label htmlFor=\"title\">title: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={onChangeTitle}\r\n            />\r\n          </div>\r\n          본문\r\n          <MarkdownEditorBlock\r\n            initialContent={''}\r\n            onChangeContentProps={onChangeContent}\r\n          />\r\n          <div>\r\n            <label htmlFor=\"hashtag\">hashtag: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"hashtag\"\r\n              value={hashtagText}\r\n              onChange={onChangeHashtagText}\r\n            />\r\n          </div>\r\n          <div>\r\n            hashtag가 제대로 체크 되나:{' '}\r\n            {hashtagList.map((element, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <a href=\"/\" style={{ color: 'blue' }}>\r\n                    {element}\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"button\">\r\n            <button type=\"submit\">Send your message</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <MarkdownRenderingBlock content={content} />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionSection.js",["218","219","220","221","222","223"],"import { useState, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock';\r\nimport CommentListBlock from '../CommentListBlock';\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock';\r\nimport { uid } from 'uid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  deleteQuestion,\r\n  deleteAnswer,\r\n  deleteComment,\r\n} from '../../redux/deletePost';\r\nexport default function QuestionSection({ data }) {\r\n  const [content, setContent] = useState('');\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteQuestion = useCallback(() => {\r\n    //alert('정말 삭제합니까?');\r\n    dispatch(deleteQuestion(data.question._id));\r\n    window.location.href = `/question`;\r\n  }, [dispatch]);\r\n\r\n  function deleteComment() {\r\n    alert('정말 삭제합니까?');\r\n  }\r\n\r\n  const onSubmitComment = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (!content) {\r\n        return;\r\n      }\r\n      const formData = new FormData();\r\n      const uid24 = uid(24);\r\n      formData.append('postID', uid24);\r\n      formData.append('contentType', 'question');\r\n      formData.append('content', content);\r\n      formData.append('authorID', '123456789012345678901234');\r\n      formData.append('authorNickname', '임시닉네임');\r\n      //if (userInfo.userUID) {\r\n      //  formData.append('authorID', userInfo.userUID);\r\n      //  formData.append('authorNickname', userInfo.userUID);\r\n      //} else {\r\n      //  formData.append('authorID', '비회원 글쓰기');\r\n      //  formData.append('authorNickname', '임시닉네임');\r\n      //}\r\n\r\n      //dispatch(createComment(formData));\r\n    },\r\n    [content]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title\">Title: {data.question.questionBody.title}</div>\r\n      <div className=\"content\">\r\n        <MarkdownRenderingBlock content={data.question.questionBody.content} />\r\n      </div>\r\n      <div className=\"hashtags\">\r\n        {data.question.questionBody.hashtags.map((tag, index) => {\r\n          return (\r\n            <div key={index}>\r\n              해시태그{index}: {tag}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <button>\r\n        <Link to={`/question/edit/${data.question._id}`}>\r\n          question 수정하기\r\n        </Link>\r\n      </button>\r\n      <button onClick={onDeleteQuestion}>question 삭제하기</button>\r\n      {/*<CommentListBlock commentList={question.comments} />*/}\r\n\r\n      <MarkdownEditorBlock\r\n        initialContent={''}\r\n        onChangeContentProps={onChangeContent}\r\n      />\r\n      <button onClick={onSubmitComment}>question 에 댓글달기</button>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Navbar.js",["224","225","226","227","228","229","230"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js",["231"],"import { Link } from 'react-router-dom';\r\nimport '../../styles/layout/Footer.scss';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          {/* <div>기업 푸터</div>\r\n          <div>일반: 전화번호, 이메일, 계좌정보 </div>\r\n          <div>고객센터 : 전화, 팩스, 이메일, 카카오톡ID(혹은 링크) 상담가능 일시</div>\r\n          <div>법인 : 상호, 대표, 주소, 개인정보관리 책임자, 사업자 등록번호, 통신판매업 신고</div>\r\n          <div> 계좌번호 목록</div>\r\n          <div>회사소개, 개인정보보호정책/처리방침, 이용약관, 사이트맵</div>\r\n          <div>SNS 링크</div>\r\n          <div>별도의 Contact us도 필요한가</div> */}\r\n          footer\r\n        </div>\r\n      </footer>\r\n      {/* <ul>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-links\">\r\n            About Tect.dev\r\n          </Link>\r\n        </li>\r\n      </ul> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismPlugin.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismThemes.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\CommentListBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownEditorBlock.js",["232","233","234","235","236","237"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { writeContent } from '../redux/createPost';\r\n\r\nexport default function MarkdownEditorBlock({\r\n  onChangeContentProps,\r\n  initialContent,\r\n}) {\r\n  //const [content, setContent] = useState(initialContent);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"content\"></label>\r\n      <textarea\r\n        id=\"content\"\r\n        //value={content}\r\n        onChange={onChangeContentProps}\r\n      ></textarea>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js",["238","239","240","241","242","243","244"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\katexWhiteList.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\firebase.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Spinner.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":59,"column":15,"nodeType":"251","endLine":59,"endColumn":71},{"ruleId":"249","severity":1,"message":"250","line":65,"column":15,"nodeType":"251","endLine":65,"endColumn":72},{"ruleId":"249","severity":1,"message":"250","line":71,"column":15,"nodeType":"251","endLine":71,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":77,"column":15,"nodeType":"251","endLine":77,"endColumn":69},{"ruleId":"249","severity":1,"message":"250","line":83,"column":15,"nodeType":"251","endLine":83,"endColumn":74},{"ruleId":"249","severity":1,"message":"250","line":89,"column":15,"nodeType":"251","endLine":89,"endColumn":68},{"ruleId":"252","severity":1,"message":"253","line":26,"column":13,"nodeType":"254","endLine":28,"endColumn":4},{"ruleId":"252","severity":1,"message":"255","line":28,"column":6,"nodeType":"256","endLine":28,"endColumn":16,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"262","line":1,"column":28,"nodeType":"260","messageId":"261","endLine":1,"endColumn":39},{"ruleId":"258","severity":1,"message":"263","line":1,"column":41,"nodeType":"260","messageId":"261","endLine":1,"endColumn":49},{"ruleId":"258","severity":1,"message":"264","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"265","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":18},{"ruleId":"258","severity":1,"message":"266","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":21},{"ruleId":"258","severity":1,"message":"267","line":5,"column":23,"nodeType":"260","messageId":"261","endLine":5,"endColumn":34},{"ruleId":"258","severity":1,"message":"268","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":30},{"ruleId":"258","severity":1,"message":"269","line":8,"column":10,"nodeType":"260","messageId":"261","endLine":8,"endColumn":13},{"ruleId":"258","severity":1,"message":"270","line":22,"column":17,"nodeType":"260","messageId":"261","endLine":22,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":27,"column":23,"nodeType":"273","messageId":"274","endLine":27,"endColumn":24,"suggestions":"275"},{"ruleId":"258","severity":1,"message":"276","line":29,"column":9,"nodeType":"260","messageId":"261","endLine":29,"endColumn":17},{"ruleId":"252","severity":1,"message":"277","line":37,"column":6,"nodeType":"256","endLine":37,"endColumn":19,"suggestions":"278"},{"ruleId":"258","severity":1,"message":"279","line":38,"column":9,"nodeType":"260","messageId":"261","endLine":38,"endColumn":28},{"ruleId":"252","severity":1,"message":"280","line":50,"column":5,"nodeType":"256","endLine":50,"endColumn":18,"suggestions":"281"},{"ruleId":"258","severity":1,"message":"282","line":53,"column":9,"nodeType":"260","messageId":"261","endLine":53,"endColumn":21},{"ruleId":"252","severity":1,"message":"283","line":83,"column":5,"nodeType":"256","endLine":83,"endColumn":21,"suggestions":"284"},{"ruleId":"252","severity":1,"message":"285","line":21,"column":6,"nodeType":"256","endLine":21,"endColumn":16,"suggestions":"286"},{"ruleId":"252","severity":1,"message":"287","line":25,"column":6,"nodeType":"256","endLine":25,"endColumn":16,"suggestions":"288"},{"ruleId":"249","severity":1,"message":"250","line":14,"column":15,"nodeType":"251","endLine":14,"endColumn":130},{"ruleId":"258","severity":1,"message":"289","line":3,"column":7,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"258","severity":1,"message":"290","line":6,"column":7,"nodeType":"260","messageId":"261","endLine":6,"endColumn":26},{"ruleId":"252","severity":1,"message":"291","line":29,"column":6,"nodeType":"256","endLine":29,"endColumn":8,"suggestions":"292"},{"ruleId":"258","severity":1,"message":"293","line":39,"column":9,"nodeType":"260","messageId":"261","endLine":39,"endColumn":22},{"ruleId":"258","severity":1,"message":"294","line":48,"column":9,"nodeType":"260","messageId":"261","endLine":48,"endColumn":26},{"ruleId":"258","severity":1,"message":"295","line":52,"column":11,"nodeType":"260","messageId":"261","endLine":52,"endColumn":20},{"ruleId":"258","severity":1,"message":"296","line":171,"column":12,"nodeType":"260","messageId":"261","endLine":171,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":267,"column":29,"nodeType":"254","messageId":"299","endLine":267,"endColumn":31},{"ruleId":"258","severity":1,"message":"300","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":24},{"ruleId":"258","severity":1,"message":"266","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":16,"column":23,"nodeType":"273","messageId":"274","endLine":16,"endColumn":24,"suggestions":"301"},{"ruleId":"252","severity":1,"message":"277","line":29,"column":6,"nodeType":"256","endLine":29,"endColumn":19,"suggestions":"302"},{"ruleId":"252","severity":1,"message":"303","line":44,"column":5,"nodeType":"256","endLine":44,"endColumn":18,"suggestions":"304"},{"ruleId":"252","severity":1,"message":"305","line":81,"column":5,"nodeType":"256","endLine":81,"endColumn":34,"suggestions":"306"},{"ruleId":"258","severity":1,"message":"300","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":24},{"ruleId":"258","severity":1,"message":"266","line":7,"column":10,"nodeType":"260","messageId":"261","endLine":7,"endColumn":21},{"ruleId":"258","severity":1,"message":"307","line":10,"column":3,"nodeType":"260","messageId":"261","endLine":10,"endColumn":15},{"ruleId":"258","severity":1,"message":"308","line":11,"column":3,"nodeType":"260","messageId":"261","endLine":11,"endColumn":16},{"ruleId":"252","severity":1,"message":"309","line":26,"column":6,"nodeType":"256","endLine":26,"endColumn":16,"suggestions":"310"},{"ruleId":"258","severity":1,"message":"308","line":28,"column":12,"nodeType":"260","messageId":"261","endLine":28,"endColumn":25},{"ruleId":"258","severity":1,"message":"311","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":22},{"ruleId":"258","severity":1,"message":"312","line":13,"column":23,"nodeType":"260","messageId":"261","endLine":13,"endColumn":31},{"ruleId":"258","severity":1,"message":"313","line":22,"column":9,"nodeType":"260","messageId":"261","endLine":22,"endColumn":16},{"ruleId":"258","severity":1,"message":"314","line":29,"column":9,"nodeType":"260","messageId":"261","endLine":29,"endColumn":24},{"ruleId":"258","severity":1,"message":"315","line":31,"column":10,"nodeType":"260","messageId":"261","endLine":31,"endColumn":16},{"ruleId":"258","severity":1,"message":"316","line":31,"column":18,"nodeType":"260","messageId":"261","endLine":31,"endColumn":27},{"ruleId":"271","severity":1,"message":"317","line":52,"column":21,"nodeType":"318","messageId":"274","endLine":52,"endColumn":22,"suggestions":"319"},{"ruleId":"258","severity":1,"message":"320","line":1,"column":10,"nodeType":"260","messageId":"261","endLine":1,"endColumn":14},{"ruleId":"258","severity":1,"message":"262","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":1,"column":30,"nodeType":"260","messageId":"261","endLine":1,"endColumn":39},{"ruleId":"258","severity":1,"message":"263","line":1,"column":41,"nodeType":"260","messageId":"261","endLine":1,"endColumn":49},{"ruleId":"258","severity":1,"message":"266","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"267","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":34},{"ruleId":"258","severity":1,"message":"321","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":22},{"ruleId":"258","severity":1,"message":"262","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":38},{"ruleId":"258","severity":1,"message":"266","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":21},{"ruleId":"258","severity":1,"message":"267","line":4,"column":23,"nodeType":"260","messageId":"261","endLine":4,"endColumn":34},{"ruleId":"258","severity":1,"message":"311","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":22},{"ruleId":"258","severity":1,"message":"322","line":5,"column":24,"nodeType":"260","messageId":"261","endLine":5,"endColumn":43},{"ruleId":"258","severity":1,"message":"323","line":10,"column":9,"nodeType":"260","messageId":"261","endLine":10,"endColumn":16},{"ruleId":"258","severity":1,"message":"324","line":20,"column":13,"nodeType":"260","messageId":"261","endLine":20,"endColumn":23},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getQuestionListAsync'. Either include it or remove the dependency array.","ArrayExpression",["327"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useState' is defined but never used.","'Prompt' is defined but never used.","'useInput' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'MarkdownRenderingBlock' is defined but never used.","'uid' is defined but never used.","'onChangeTitle' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["328","329"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hashtagText'. Either include it or remove the dependency array. You can also do a functional update 'setHashtagText(h => ...)' if you only need 'hashtagText' in the 'setHashtagText' call.",["330"],"'onChangeHashtagText' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'splitPoint'. Either include it or remove the dependency array.",["331"],"'onSubmitForm' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'hashtagList'. Either include it or remove the dependency array.",["332"],"React Hook useCallback has a missing dependency: 'questionID'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has a missing dependency: 'getQuestionAsync'. Either include it or remove the dependency array.",["334"],"'LOG_IN_TRY' is assigned a value but never used.","'CREATE_USER_SUCCESS' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'category' and 'techtreeData'. Either include them or remove the dependency array.",["335"],"'containerRect' is assigned a value but never used.","'circleSelctedFill' is assigned a value but never used.","'colorSet1' is assigned a value but never used.","'matchColorForGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'CommentListBlock' is defined but never used.",["336","337"],["338"],"React Hook useCallback has missing dependencies: 'hashtagList' and 'splitPoint'. Either include them or remove the dependency array.",["339"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["340"],"'deleteAnswer' is defined but never used.","'deleteComment' is defined but never used.","React Hook useCallback has a missing dependency: 'data.question._id'. Either include it or remove the dependency array.",["341"],"'loginSuccess' is defined but never used.","'userInfo' is assigned a value but never used.","'onLogin' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","Unnecessary escape character: \\&.","TemplateElement",["342","343"],"'Link' is defined but never used.","'writeContent' is defined but never used.","'loginSuccessDelayed' is defined but never used.","'history' is assigned a value but never used.","'authResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"messageId":"346","fix":"347","desc":"348"},{"messageId":"349","fix":"350","desc":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"messageId":"346","fix":"364","desc":"348"},{"messageId":"349","fix":"365","desc":"351"},{"desc":"352","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"messageId":"346","fix":"373","desc":"348"},{"messageId":"349","fix":"374","desc":"351"},"Update the dependencies array to be: [dispatch, getQuestionListAsync]",{"range":"375","text":"376"},"removeEscape",{"range":"377","text":"378"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"379","text":"380"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [hashtagList, hashtagText]",{"range":"381","text":"382"},"Update the dependencies array to be: [splitPoint]",{"range":"383","text":"384"},"Update the dependencies array to be: [title, content, hashtagList]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, questionID]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch, getQuestionAsync]",{"range":"389","text":"390"},"Update the dependencies array to be: [category, techtreeData]",{"range":"391","text":"392"},{"range":"393","text":"378"},{"range":"394","text":"380"},{"range":"395","text":"382"},"Update the dependencies array to be: [hashtagList, splitPoint]",{"range":"396","text":"397"},"Update the dependencies array to be: [title, content, hashtagList, dispatch]",{"range":"398","text":"399"},"Update the dependencies array to be: [data.question._id, dispatch]",{"range":"400","text":"401"},{"range":"402","text":"378"},{"range":"403","text":"380"},[994,1004],"[dispatch, getQuestionListAsync]",[983,984],"",[983,983],"\\",[1227,1240],"[hashtagList, hashtagText]",[1643,1656],"[splitPoint]",[2824,2840],"[title, content, hashtagList]",[821,831],"[dispatch, questionID]",[888,898],"[dispatch, getQuestionAsync]",[705,707],"[category, techtreeData]",[716,717],[716,716],[1031,1044],[1551,1564],"[hashtagList, splitPoint]",[2754,2783],"[title, content, hashtagList, dispatch]",[833,843],"[data.question._id, dispatch]",[1868,1869],[1868,1868]]