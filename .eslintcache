[{"/Users/zowan/Documents/web/tect-react/src/index.js":"1","/Users/zowan/Documents/web/tect-react/src/reportWebVitals.js":"2","/Users/zowan/Documents/web/tect-react/src/App.js":"3","/Users/zowan/Documents/web/tect-react/src/redux/index.js":"4","/Users/zowan/Documents/web/tect-react/src/redux/auth.js":"5","/Users/zowan/Documents/web/tect-react/src/redux/readPost.js":"6","/Users/zowan/Documents/web/tect-react/src/pages/AboutPage.js":"7","/Users/zowan/Documents/web/tect-react/src/redux/updatePost.js":"8","/Users/zowan/Documents/web/tect-react/src/redux/createPost.js":"9","/Users/zowan/Documents/web/tect-react/src/pages/LoginPage.js":"10","/Users/zowan/Documents/web/tect-react/src/pages/NotFoundPage.js":"11","/Users/zowan/Documents/web/tect-react/src/pages/HomePage.js":"12","/Users/zowan/Documents/web/tect-react/src/redux/deletePost.js":"13","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionWritePage.js":"14","/Users/zowan/Documents/web/tect-react/src/lib/firebase.js":"15","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionDetailPage.js":"16","/Users/zowan/Documents/web/tect-react/src/pages/user/ProfilePage.js":"17","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionEditPage.js":"18","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionListPage.js":"19","/Users/zowan/Documents/web/tect-react/src/lib/functions.js":"20","/Users/zowan/Documents/web/tect-react/src/lib/dummyTechtree.js":"21","/Users/zowan/Documents/web/tect-react/src/components/layout/HalfWidthContainer.js":"22","/Users/zowan/Documents/web/tect-react/src/components/MarkdownRenderingBlock.js":"23","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionSection.js":"24","/Users/zowan/Documents/web/tect-react/src/components/home/SubjectBlock.js":"25","/Users/zowan/Documents/web/tect-react/src/components/home/ForceGraph.js":"26","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionWriteSection.js":"27","/Users/zowan/Documents/web/tect-react/src/components/layout/MainLayout.js":"28","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionEditSection.js":"29","/Users/zowan/Documents/web/tect-react/src/components/question/AnswerSection.js":"30","/Users/zowan/Documents/web/tect-react/src/components/Spinner.js":"31","/Users/zowan/Documents/web/tect-react/src/hooks/hooks.js":"32","/Users/zowan/Documents/web/tect-react/src/lib/katexWhiteList.js":"33","/Users/zowan/Documents/web/tect-react/src/lib/prismPlugin.js":"34","/Users/zowan/Documents/web/tect-react/src/components/MarkdownEditorBlock.js":"35","/Users/zowan/Documents/web/tect-react/src/lib/prismThemes.js":"36","/Users/zowan/Documents/web/tect-react/src/components/layout/Navbar.js":"37","/Users/zowan/Documents/web/tect-react/src/components/Button.js":"38","/Users/zowan/Documents/web/tect-react/src/components/TagBlock.js":"39","/Users/zowan/Documents/web/tect-react/src/components/layout/Footer.js":"40","/Users/zowan/Documents/web/tect-react/src/components/CommentListBlock.js":"41","/Users/zowan/Documents/web/tect-react/src/lib/constants.js":"42","/Users/zowan/Documents/web/tect-react/src/components/layout/LoginModal.js":"43","/Users/zowan/Documents/web/tect-react/src/components/Pagination.js":"44","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionBlock.js":"45","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionSearchResultPage.js":"46","/Users/zowan/Documents/web/tect-react/src/pages/techtree/TechtreeEditPage.js":"47","/Users/zowan/Documents/web/tect-react/src/components/techtree/TechtreeEditor.js":"48","/Users/zowan/Documents/web/tect-react/src/redux/techtree.js":"49"},{"size":1201,"mtime":1611142080456,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1609067299109,"results":"52","hashOfConfig":"51"},{"size":2833,"mtime":1611142080454,"results":"53","hashOfConfig":"51"},{"size":513,"mtime":1611142080465,"results":"54","hashOfConfig":"51"},{"size":5155,"mtime":1611049530220,"results":"55","hashOfConfig":"51"},{"size":6669,"mtime":1611049530221,"results":"56","hashOfConfig":"51"},{"size":194,"mtime":1611049530217,"results":"57","hashOfConfig":"51"},{"size":3951,"mtime":1611049530221,"results":"58","hashOfConfig":"51"},{"size":4389,"mtime":1611049530220,"results":"59","hashOfConfig":"51"},{"size":199,"mtime":1611049530218,"results":"60","hashOfConfig":"51"},{"size":199,"mtime":1611049530218,"results":"61","hashOfConfig":"51"},{"size":2844,"mtime":1611108687124,"results":"62","hashOfConfig":"51"},{"size":4220,"mtime":1611049530220,"results":"63","hashOfConfig":"51"},{"size":481,"mtime":1611142080464,"results":"64","hashOfConfig":"51"},{"size":682,"mtime":1611049530216,"results":"65","hashOfConfig":"51"},{"size":1490,"mtime":1611142080457,"results":"66","hashOfConfig":"51"},{"size":1726,"mtime":1611049530219,"results":"67","hashOfConfig":"51"},{"size":1098,"mtime":1611142080457,"results":"68","hashOfConfig":"51"},{"size":2486,"mtime":1611142080457,"results":"69","hashOfConfig":"51"},{"size":2203,"mtime":1611049530216,"results":"70","hashOfConfig":"51"},{"size":10351,"mtime":1611108687123,"results":"71","hashOfConfig":"51"},{"size":410,"mtime":1611049530211,"results":"72","hashOfConfig":"51"},{"size":3385,"mtime":1611142080455,"results":"73","hashOfConfig":"51"},{"size":3319,"mtime":1611049530215,"results":"74","hashOfConfig":"51"},{"size":308,"mtime":1609738809558,"results":"75","hashOfConfig":"51"},{"size":9940,"mtime":1611049530211,"results":"76","hashOfConfig":"51"},{"size":4535,"mtime":1611141577028,"results":"77","hashOfConfig":"51"},{"size":326,"mtime":1611049530214,"results":"78","hashOfConfig":"51"},{"size":5012,"mtime":1611049530215,"results":"79","hashOfConfig":"51"},{"size":7377,"mtime":1611049530214,"results":"80","hashOfConfig":"51"},{"size":211,"mtime":1611049530210,"results":"81","hashOfConfig":"51"},{"size":250,"mtime":1609249874876,"results":"82","hashOfConfig":"51"},{"size":987,"mtime":1611049530217,"results":"83","hashOfConfig":"51"},{"size":2471,"mtime":1611049530217,"results":"84","hashOfConfig":"51"},{"size":4487,"mtime":1611049530209,"results":"85","hashOfConfig":"51"},{"size":20436,"mtime":1611049530217,"results":"86","hashOfConfig":"51"},{"size":3864,"mtime":1611142080455,"results":"87","hashOfConfig":"51"},{"size":617,"mtime":1611049530209,"results":"88","hashOfConfig":"51"},{"size":634,"mtime":1611049530210,"results":"89","hashOfConfig":"51"},{"size":1040,"mtime":1611049530211,"results":"90","hashOfConfig":"51"},{"size":398,"mtime":1611049530209,"results":"91","hashOfConfig":"51"},{"size":1456,"mtime":1611049530216,"results":"92","hashOfConfig":"51"},{"size":4242,"mtime":1611049530213,"results":"93","hashOfConfig":"51"},{"size":3277,"mtime":1611142080455,"results":"94","hashOfConfig":"51"},{"size":1307,"mtime":1611049530215,"results":"95","hashOfConfig":"51"},{"size":2703,"mtime":1611142080463,"results":"96","hashOfConfig":"51"},{"size":2442,"mtime":1611142080464,"results":"97","hashOfConfig":"51"},{"size":5497,"mtime":1611217592581,"results":"98","hashOfConfig":"51"},{"size":2733,"mtime":1611208602361,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xgtey9",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zowan/Documents/web/tect-react/src/index.js",[],"/Users/zowan/Documents/web/tect-react/src/reportWebVitals.js",[],["212","213"],"/Users/zowan/Documents/web/tect-react/src/App.js",["214","215","216","217","218"],"/Users/zowan/Documents/web/tect-react/src/redux/index.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/auth.js",["219"],"import { authService, firebaseInstance } from '../lib/firebase'\nimport axios from 'axios'\n\n// define ACTION type\nconst LOG_IN_TRY = 'auth/LOG_IN_TRY'\nconst LOG_IN_SUCCESS = 'auth/LOG_IN_SUCCESS'\nconst LOG_IN_FAIL = 'auth/LOG_IN_FAIL'\n\nconst LOG_OUT_TRY = 'auth/LOG_OUT_TRY'\nconst LOG_OUT_SUCCESS = 'auth/LOG_OUT_SUCCESS'\nconst LOG_OUT_FAIL = 'auth/LOG_OUT_FAIL'\n\nconst CREATE_USER_TRY = 'auth/CREATE_USER_TRY'\nconst CREATE_USER_SUCCESS = 'auth/CREATE_USER_SUCCESS'\nconst CREATE_USER_FAIL = 'auth/CREATE_USER_FAIL'\n\nconst CHECK_AUTH = 'auth/CHECK_AUTH'\n\nconst initialState = {\n  loginState: false,\n  userID: '000000000000000000000000',\n  userNickname: '익명',\n  loading: false,\n}\n\nconst session_login = () => {\n  authService.currentUser\n    .getIdToken(/* forceRefresh */ true)\n    .then((idToken) => {\n      axios({\n        url: '/login/sessionLogin',\n        method: 'POST',\n        data: {\n          firebaseToken: idToken,\n          //crsfToken : crsfToekn\n        },\n        withCredentials: true,\n      })\n    })\n    .catch((e) => {\n      console.log('getIdToken 오류', e)\n    })\n}\n\nconst session_signup = (userNickname) => {\n  authService.currentUser\n    .getIdToken(/* forceRefresh */ true)\n    .then((idToken) => {\n      axios({\n        url: '/login/account',\n        method: 'POST',\n        data: {\n          firebaseToken: idToken,\n          nickname: userNickname,\n          point: 1000,\n          //crsfToken : crsfToekn\n        },\n        withCredentials: true,\n      })\n    })\n    .catch((e) => {\n      console.log('getIdToken 오류', e)\n    })\n}\n\n// 액션타입을 redux 파일 안에 정의하고, 정의한 액션타입을 다른 파일에서 사용하기 위해\n// 액션 생성함수를 정의하고, 생성함수를 export 할 것이다.\n// thunk 사용시에는 액션생성함수 따로 안만듬.\n\nexport const checkAuth = (user) => {\n  if (user) {\n    console.log('유저:', user)\n    const userInfo = {\n      userID: user.uid,\n      userEmail: user.email,\n      userNickname: `${user.displayName}`,\n    }\n    localStorage.setItem('user', JSON.stringify(userInfo))\n    return {\n      type: CHECK_AUTH,\n      loginState: true,\n      userNickname: `${user.displayName}`,\n      userID: user.uid,\n    }\n  } else if (localStorage.getItem('user')) {\n    const userInfo = JSON.parse(localStorage.getItem('user'))\n    console.log('로컬스토리지 이용한 유저정보 갱신:', userInfo)\n    return {\n      type: CHECK_AUTH,\n      loginState: true,\n      userID: userInfo.userID,\n      userNickname: userInfo.userNickname,\n    }\n  } else {\n    return {\n      type: CHECK_AUTH,\n      loginState: false,\n      userID: '000000000000000000000000',\n      userNickname: '익명',\n    }\n  }\n}\n\nexport const emailLogin = (email, password) => async (dispatch) => {\n  dispatch({ type: LOG_IN_TRY })\n  try {\n    await authService.signInWithEmailAndPassword(email, password).then(() => {\n      session_login()\n    })\n\n    dispatch({ type: LOG_IN_SUCCESS })\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: LOG_IN_FAIL })\n  }\n}\n\nexport const emailSignUp = (email, password) => async (dispatch) => {\n  dispatch({ type: CREATE_USER_TRY })\n  try {\n    await authService\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        session_signup(email)\n      })\n\n    dispatch({ type: CREATE_USER_SUCCESS })\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: CREATE_USER_FAIL })\n  }\n}\n\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: LOG_OUT_TRY })\n\n  try {\n    axios({ url: '/login/sessionLogout', method: 'GET' })\n    authService.signOut()\n    localStorage.removeItem('user')\n    dispatch({ type: LOG_OUT_SUCCESS })\n  } catch (e) {\n    dispatch({ type: LOG_OUT_FAIL })\n    console.log('error: ', e)\n  }\n}\n\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN_TRY:\n      return {\n        ...state,\n        loading: true,\n      }\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n\n        loginState: true,\n      }\n    case LOG_IN_FAIL:\n      return {\n        ...state,\n        loading: false,\n        loginState: false,\n      }\n    case CREATE_USER_TRY:\n      return {\n        ...state,\n        loading: true,\n      }\n    case CREATE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loginState: true,\n        userID: 'qwerasdfzxcvnmvclkjh',\n        userNickname: 'testname',\n      }\n    case CREATE_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case LOG_OUT_TRY:\n      return {\n        ...state,\n        loading: true,\n      }\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loginState: false,\n        userID: '000000000000000000000000',\n        userNickname: '익명',\n      }\n    case LOG_OUT_FAIL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case CHECK_AUTH:\n      return {\n        ...state,\n        loginState: action.loginState,\n        userNickname: action.userNickname,\n        userID: action.userID,\n      }\n    default:\n      return state\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/redux/readPost.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/AboutPage.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/updatePost.js",["220","221","222"],"import axios from 'axios'\n\nconst initialState = {\n  loading: false,\n  error: null,\n  isUpdated: false,\n}\n\n// action types\n\nconst UPDATE_QUESTION_TRY = 'question/UPDATE_QUESTION_TRY'\nconst UPDATE_QUESTION_SUCCESS = 'question/UPDATE_QUESTION_SUCCESS'\nconst UPDATE_QUESTION_FAIL = 'question/UPDATE_QUESTION_FAIL'\n\nconst UPDATE_ANSWER_TRY = 'answer/UPDATE_ANSWER_TRY'\nconst UPDATE_ANSWER_SUCCESS = 'answer/UPDATE_ANSWER_SUCCESS'\nconst UPDATE_ANSWER_FAIL = 'answer/UPDATE_ANSWER_FAIL'\n\nconst UPDATE_ARTICLE_TRY = 'article/UPDATE_ARTICLE_TRY'\nconst UPDATE_ARTICLE_SUCCESS = 'article/UPDATE_ARTICLE_SUCCESS'\nconst UPDATE_ARTICLE_FAIL = 'article/UPDATE_ARTICLE_FAIL'\n\nconst UPDATE_COMMENT_TRY = 'comment/UPDATE_COMMENT_TRY'\nconst UPDATE_COMMENT_SUCCESS = 'comment/UPDATE_COMMENT_SUCCESS'\nconst UPDATE_COMMENT_FAIL = 'comment/UPDATE_COMMENT_FAIL'\n\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\n// 3번째 인자를 이용하면 withExtraArgument 에서 넣어준 값을 사용할 수 있다.\nexport const updateQuestion = (data) => async (\n  dispatch,\n  getState,\n  { history }\n) => {\n  dispatch({ type: UPDATE_QUESTION_TRY })\n  try {\n    const obj = JSON.stringify(data)\n    await axios({\n      method: 'put',\n      url: `/question/${data.postID}`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    await dispatch({ type: UPDATE_QUESTION_SUCCESS })\n\n    history.push(`/question/${data.postID}`)\n    // obj 는 스트링으로 만든거라서, data 를 써야함.\n  } catch (e) {\n    alert('error: ', e)\n    dispatch({ type: UPDATE_QUESTION_FAIL, error: e })\n  }\n}\n\nexport const updateAnswer = (answerID, data) => async (dispatch) => {\n  dispatch({ type: UPDATE_ANSWER_TRY })\n  try {\n    const obj = JSON.stringify(data)\n    await axios({\n      method: 'put',\n      url: `/answer/${answerID}`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    dispatch({ type: UPDATE_ANSWER_SUCCESS })\n    console.log('answer updated')\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: UPDATE_ANSWER_FAIL, error: e })\n  }\n}\n\nexport const updateArticle = (data) => async (dispatch) => {\n  dispatch({ type: UPDATE_ARTICLE_TRY })\n  try {\n    const obj = JSON.stringify(Object.fromEntries(data))\n    await axios({\n      method: 'put',\n      url: `/article`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    setTimeout(() => {\n      dispatch({ type: UPDATE_ARTICLE_SUCCESS })\n    }, 500)\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: UPDATE_ARTICLE_FAIL, error: e })\n  }\n}\n\nexport default function updatePost(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_QUESTION_TRY:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      }\n    case UPDATE_QUESTION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        isUpdated: true,\n      }\n    case UPDATE_QUESTION_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    case UPDATE_ANSWER_TRY:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      }\n    case UPDATE_ANSWER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        isUpdated: true,\n      }\n    case UPDATE_ANSWER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    case UPDATE_ARTICLE_TRY:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      }\n    case UPDATE_ARTICLE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        isUpdated: true,\n      }\n    case UPDATE_ARTICLE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n\n    default:\n      return state\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/redux/createPost.js",["223","224","225"],"import axios from 'axios'\n\nconst initialState = {\n  question: {\n    loading: false,\n    error: null,\n    isAdded: false,\n  },\n  answer: {\n    loading: false,\n    error: null,\n    isAdded: false,\n  },\n  article: {\n    loading: false,\n    error: null,\n    isAdded: false,\n  },\n}\n\n// action types\n\nconst CREATE_QUESTION_TRY = 'question/CREATE_QUESTION_TRY'\nconst CREATE_QUESTION_SUCCESS = 'question/CREATE_QUESTION_SUCCESS'\nconst CREATE_QUESTION_FAIL = 'question/CREATE_QUESTION_FAIL'\n\nconst CREATE_ANSWER_TRY = 'answer/CREATE_ANSWER_TRY'\nconst CREATE_ANSWER_SUCCESS = 'answer/CREATE_ANSWER_SUCCESS'\nconst CREATE_ANSWER_FAIL = 'answer/CREATE_ANSWER_FAIL'\n\nconst CREATE_ARTICLE_TRY = 'article/CREATE_ARTICLE_TRY'\nconst CREATE_ARTICLE_SUCCESS = 'article/CREATE_ARTICLE_SUCCESS'\nconst CREATE_ARTICLE_FAIL = 'article/CREATE_ARTICLE_FAIL'\n\nconst CREATE_COMMENT_TRY = 'comment/CREATE_COMMENT_TRY'\nconst CREATE_COMMENT_SUCCESS = 'comment/CREATE_COMMENT_SUCCESS'\nconst CREATE_COMMENT_FAIL = 'comment/CREATE_COMMENT_FAIL'\n\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\n// 3번째 인자를 이용하면 withExtraArgument 에서 넣어준 값을 사용할 수 있다.\nexport const createQuestion = (data) => async (\n  dispatch,\n  getState,\n  { history }\n) => {\n  dispatch({ type: CREATE_QUESTION_TRY })\n  try {\n    const obj = JSON.stringify(data)\n    await axios({\n      method: 'post',\n      url: `/question`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    await dispatch({ type: CREATE_QUESTION_SUCCESS })\n\n    history.push(`/question/${data.postID}`)\n    // obj 는 스트링으로 만든거라서, data 를 써야함.\n  } catch (e) {\n    alert('error: ', e)\n    dispatch({ type: CREATE_QUESTION_FAIL, error: e })\n  }\n}\n\nexport const createAnswer = (data) => async (dispatch) => {\n  dispatch({ type: CREATE_ANSWER_TRY })\n  try {\n    const obj = JSON.stringify(data)\n    await axios({\n      method: 'post',\n      url: `/answer`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    dispatch({ type: CREATE_ANSWER_SUCCESS })\n    console.log('answer added')\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: CREATE_ANSWER_FAIL, error: e })\n  }\n}\n\nexport const createArticle = (data) => async (dispatch) => {\n  dispatch({ type: CREATE_ARTICLE_TRY })\n  try {\n    const obj = JSON.stringify(Object.fromEntries(data))\n    await axios({\n      method: 'post',\n      url: `/article`,\n      headers: { 'Content-Type': 'application/json' },\n      data: obj,\n    })\n    setTimeout(() => {\n      dispatch({ type: CREATE_ARTICLE_SUCCESS })\n    }, 500)\n  } catch (e) {\n    console.log('error: ', e)\n    dispatch({ type: CREATE_ARTICLE_FAIL, error: e })\n  }\n}\n\nexport default function createPost(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_QUESTION_TRY:\n      return {\n        ...state,\n        question: {\n          loading: true,\n          error: null,\n        },\n      }\n    case CREATE_QUESTION_SUCCESS:\n      return {\n        ...state,\n        question: {\n          loading: false,\n          error: null,\n          isAdded: true,\n        },\n      }\n    case CREATE_QUESTION_FAIL:\n      return {\n        ...state,\n        question: {\n          loading: false,\n          error: action.error,\n        },\n      }\n    case CREATE_ANSWER_TRY:\n      return {\n        ...state,\n        answer: {\n          loading: true,\n          error: null,\n        },\n      }\n    case CREATE_ANSWER_SUCCESS:\n      return {\n        ...state,\n        answer: {\n          loading: false,\n          error: null,\n          isAdded: true,\n        },\n      }\n    case CREATE_ANSWER_FAIL:\n      return {\n        ...state,\n        answer: {\n          loading: false,\n          error: action.error,\n        },\n      }\n    case CREATE_ARTICLE_TRY:\n      return {\n        ...state,\n        article: {\n          loading: true,\n          error: null,\n        },\n      }\n    case CREATE_ARTICLE_SUCCESS:\n      return {\n        ...state,\n        article: {\n          loading: false,\n          error: null,\n        },\n        content: '',\n      }\n    case CREATE_ARTICLE_FAIL:\n      return {\n        ...state,\n        article: {\n          loading: false,\n          error: action.error,\n        },\n      }\n\n    default:\n      return state\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/pages/LoginPage.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/NotFoundPage.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/HomePage.js",["226","227","228","229","230","231"],"import React from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport '../styles/page/HomePage.scss'\n\nimport ForceGraph from '../components/home/ForceGraph';\nimport SubjectBlock from '../components/home/SubjectBlock';\nimport { dummyTechtree } from '../lib/dummyTechtree';\n\nexport default function HomePage() {\n  return (\n    <>\n      <MainLayout>\n        <div className=\"homepage-container\">\n          <main className=\"techtree-container\">\n            <ForceGraph techtreeData={dummyTechtree.cs} category={'cs'} />\n          </main>\n          <aside className=\"subjects-sidebar\">\n            <div\n              onClick={() => {\n                console.log('physics clicked');\n              }}\n              className=\"block\"\n            >\n              <SubjectBlock\n                iconSize=\"70\"\n                url=\"physics\"\n                displayedName=\"physics\"\n              />\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img\n                src=\"/icons/math.svg\"\n                alt=\"mathematicsIcon\"\n                height=\"70\"\n                width=\"70\"\n              />\n              <br />\n              Mathematics\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img\n                src=\"/icons/economics.svg\"\n                alt=\"economicsIcon\"\n                height=\"70\"\n                width=\"70\"\n              />\n              <br />\n              economics\n            </div>\n\n            <div\n              onClick={() => {\n                console.log('cs clicked');\n              }}\n              className=\"block\"\n            >\n              <img src=\"/icons/computer.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Computer Science\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/chemistry.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Chemistry\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/biochemistry.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Biochemistry\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/russia.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Russia\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/electricity.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Electrical Engineering\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/earth.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Earth System\n            </div>\n          </aside>\n        </div>\n      </MainLayout>\n    </>\n  );\n}\n","/Users/zowan/Documents/web/tect-react/src/redux/deletePost.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionWritePage.js",["232","233","234"],"/Users/zowan/Documents/web/tect-react/src/lib/firebase.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionDetailPage.js",["235"],"/Users/zowan/Documents/web/tect-react/src/pages/user/ProfilePage.js",["236","237","238"],"import React, { useCallback, useDebugValue } from 'react'\nimport MainLayout from '../../components/layout/MainLayout'\nimport '../../styles/page/user/ProfilePage.scss'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../../redux/auth'\n\nexport default function ProfilePage({ match }) {\n  const { userID } = match.params\n  const { myID, myNickname } = useSelector((state) => {\n    return { myID: state.auth.userID, myNickname: state.auth.userNickname }\n  })\n  const dispatch = useDispatch()\n\n  const onClickLogout = useCallback(() => {\n    dispatch(logout())\n  }, [dispatch])\n\n  return (\n    <>\n      <MainLayout>\n        <div className=\"profile-container\">\n          <div className=\"profile-upside\">\n            <div className=\"profile-photo\">\n              <img src=\"https://media.vlpt.us/images/ghkdwltjq98/profile/b7b493c6-69ef-4886-aec6-16d03800306e/social.png?w=120\" />\n            </div>\n            <div className=\"intro-container\">\n              <div>{userID} 닉네임</div>\n              <div>이메일</div>\n              <div>연락처</div>\n              <div>가입일시</div>\n              <div>마지막 접속일</div>\n              <div>인증 연동</div>\n              <div>포인트</div>\n              {myID === userID ? (\n                <button onClick={onClickLogout}>Logout</button>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n          <div className=\"profile-downside\">\n            <div className=\"profile-card\">Questions (0)</div>\n            <div className=\"profile-card\">Answers (0)</div>\n            <div className=\"profile-card\">Free Posts (0)</div>\n          </div>\n        </div>\n      </MainLayout>\n    </>\n  )\n}\n","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionEditPage.js",["239","240","241","242","243","244","245","246"],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionListPage.js",["247","248","249"],"/Users/zowan/Documents/web/tect-react/src/lib/functions.js",[],"/Users/zowan/Documents/web/tect-react/src/lib/dummyTechtree.js",[],"/Users/zowan/Documents/web/tect-react/src/components/layout/HalfWidthContainer.js",[],"/Users/zowan/Documents/web/tect-react/src/components/MarkdownRenderingBlock.js",["250"],"/Users/zowan/Documents/web/tect-react/src/components/question/QuestionSection.js",["251","252","253","254","255","256","257","258"],"import React, { useState, useCallback, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\nimport CommentListBlock from '../CommentListBlock'\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\nimport { TagBlock } from '../TagBlock'\nimport { Button } from '../Button'\nimport { uid } from 'uid'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deleteQuestion, deleteComment } from '../../redux/deletePost'\nimport styled from 'styled-components'\n\nexport default React.memo(function QuestionSection({ data }) {\n  const [content, setContent] = useState('')\n  const { userID } = useSelector((state) => {\n    return { userID: state.auth.userID }\n  })\n\n  function onChangeContent(value) {\n    setContent(value)\n  }\n\n  const dispatch = useDispatch()\n\n  const onDeleteQuestion = useCallback(() => {\n    //alert('정말 삭제합니까?');\n    dispatch(deleteQuestion(data.question._id))\n  }, [dispatch])\n\n  function deleteComment() {\n    alert('정말 삭제합니까?')\n  }\n\n  const onSubmitComment = useCallback(\n    async (e) => {\n      e.preventDefault()\n      if (!content) {\n        return\n      }\n      const formData = new FormData()\n      const uid24 = uid(24)\n      formData.append('postID', uid24)\n      formData.append('contentType', 'question')\n      formData.append('content', content)\n      formData.append('authorID', '123456789012345678901234')\n      formData.append('authorNickname', '임시닉네임')\n    },\n    [content]\n  )\n\n  return (\n    <QuestionContainer>\n      <div className=\"title\">\n        <h2>Q. {data.question.questionBody.title}</h2>\n        <br />\n      </div>\n      <div className=\"hashtags\">\n        {data.question.questionBody.hashtags.map((tag, index) => {\n          return (\n            <TagBlock\n              key={index}\n              text={tag}\n              function={() => {\n                alert('tag clicked!')\n              }}\n            />\n          )\n        })}\n        <br />\n        <br />\n      </div>\n      <div className=\"content\">\n        <MarkdownRenderingBlock content={data.question.questionBody.content} />\n        <br />\n        <br />\n      </div>\n\n      <div>\n        {data.question.updatedAt.substr(0, 4)}년{' '}\n        {data.question.updatedAt.substr(5, 2)}월{' '}\n        {data.question.updatedAt.substr(8, 2)}일\n      </div>\n      <div>\n        <Link to={`/user/${data.question.questionBody.authorID}`}>\n          {data.question.questionBody.authorNickname}\n        </Link>\n      </div>\n      {data.question.questionBody.authorID === userID &&\n      data.answers.length === 0 &&\n      userID !== '000000000000000000000000' ? (\n        <>\n          <Button>\n            <Link to={`/question/edit/${data.question._id}`}>\n              질문 수정하기\n            </Link>\n          </Button>\n          <Button onClick={onDeleteQuestion}>질문 삭제하기</Button>\n        </>\n      ) : (\n        ''\n      )}\n\n      {/*<CommentListBlock commentList={question.comments} />\n      <MarkdownEditorBlock\n        initialContent={''}\n        onChangeContentProps={onChangeContent}\n      />\n      <Button onClick={onSubmitComment}>question 에 댓글달기</Button>*/}\n    </QuestionContainer>\n  )\n})\n\nconst QuestionContainer = styled.div`\n  padding: 1rem 1.5rem;\n`\n","/Users/zowan/Documents/web/tect-react/src/components/home/SubjectBlock.js",[],"/Users/zowan/Documents/web/tect-react/src/components/home/ForceGraph.js",["259","260","261","262","263"],"import React from 'react'\nimport * as d3 from 'd3'\nimport styles from '../../styles/Techtree.module.css'\n\nexport default function ForceGraph({ techtreeData, category }) {\n  const containerRef = React.useRef(null)\n\n  const nodeHoverTooltip = (node) => {\n    return `<div>     \n      <p><b>${node.name}</b></p>\n      <p>최근 5년<br />마일리지 커트라인<br />${node.recentMileage}</p>\n    </div>`\n  }\n\n  React.useEffect(() => {\n    let destroyFn\n\n    if (containerRef.current) {\n      const { destroy } = runForceGraph(\n        containerRef.current,\n        techtreeData,\n        category,\n        nodeHoverTooltip\n      )\n      destroyFn = destroy\n    }\n\n    return destroyFn\n  }, [category, techtreeData])\n\n  return <div ref={containerRef} className={styles.container} />\n}\n\nfunction runForceGraph(container, techtreeData, category, nodeHoverTooltip) {\n  // linksData 대신, 객체 전체를 받아야지 이게 어느 과목인지도 확인할 수 있음.\n  const links = techtreeData.links.map((d) => Object.assign({}, d))\n  const nodes = techtreeData.nodes.map((d) => Object.assign({}, d))\n\n  const containerRect = container.getBoundingClientRect()\n  const height = 1000 //containerRect.height;\n  const width = 900 //containerRect.width;\n\n  let xScale = d3.scaleLinear().domain([0, width]).range([0, width])\n  let yScale = d3.scaleLinear().domain([0, height]).range([0, height])\n\n  //const circleColor = () => { return \"#fff\"; };\n  //const circleFill = \"#fff\"\n  const circleSelctedFill = '#00bebe'\n  // 학년별로 색깔을 달리하면, 애초에 테크트리를 제시하는 의미가 없잖아.\n  // 내가 3학년인데 고체물리 들어도 되나? 이런걸 보고싶은건데.\n  function getRandom00BEBE() {\n    const colorSet1 = ['#66b7ce', '#6771dc', '#a367db', '#db67ce', '#00bebe']\n    const colorSet2 = [\n      '#66b7ce',\n      '#00bebe',\n      'rgb(0, 170, 170)',\n      'rgb(0, 140, 190)',\n      'rgb(0, 190, 170)',\n    ]\n    const randomFactor = Math.floor(Math.random() * 5 - 0.001)\n    return colorSet2[randomFactor]\n    //return linear-gradient(135deg, orange 60%, cyan)\n    //return rgb(randomFactor, 165+randomFactor, 165+randomFactor)\n  }\n  const circleStrokeColor1 = getRandom00BEBE() //\"#94D7FF\"\n  const circleStrokeColor2 = getRandom00BEBE() //\"#5DE87C\"\n  const circleStrokeColor3 = getRandom00BEBE() //\"#FFF872\"\n  const circleStrokeColor4 = getRandom00BEBE() //\"#FF669A\"\n\n  const drag = (simulation) => {\n    const dragstarted = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart()\n      d.fx = d.x\n      d.fy = d.y\n    }\n\n    const dragged = (d) => {\n      d.fx = d3.event.x\n      d.fy = d3.event.y\n    }\n\n    const dragended = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0)\n      d.fx = null\n      d.fy = null\n    }\n\n    return d3\n      .drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended)\n  }\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\n      'link',\n      d3.forceLink(links).id((d) => d.id)\n    )\n    .force('charge', d3.forceManyBody().strength(-1050))\n    .force('link', d3.forceLink(links).distance(200))\n    .force('x', d3.forceX())\n    .force('y', d3.forceY())\n\n  var zoom = d3.zoom().scaleExtent([0.3, 8]).on('zoom', zoomed)\n\n  const svg = d3\n    .select(container)\n    .call(zoom)\n    .append('svg')\n    .attr('viewBox', [-width / 2, -height / 3, width, height * 0.75])\n\n  var x2 = xScale.copy() // reference.\n  var y2 = yScale.copy()\n\n  function zoomed() {\n    xScale = d3.event.transform.rescaleX(x2)\n    yScale = d3.event.transform.rescaleY(y2)\n    tick()\n  }\n\n  svg\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a coordinate system 10 wide and 10 high starting on (0,-5)\n    .attr('refX', 23) // x coordinate for the reference point of the marker. If circle is bigger, this need to be bigger.\n    .attr('refY', 0)\n    .attr('orient', 'auto')\n    .attr('markerWidth', 10)\n    .attr('markerHeight', 10)\n    .attr('xoverflow', 'visible')\n    .append('svg:path')\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n    .attr('fill', '#999')\n    .style('stroke', 'none')\n    .attr('stroke-width', 1)\n    .attr('id', 'vis')\n\n  const link = svg\n    .append('g')\n    .attr('stroke', '#999')\n    .attr('stroke-opacity', 0.6)\n    .selectAll('line')\n    .data(links)\n    .join('line')\n    .attr('class', (d) => {\n      return `link${d.index}`\n    })\n    .attr('stroke-width', 2)\n    .attr('marker-end', 'url(#arrowhead)')\n\n  const node = svg\n    .append('g')\n    .attr('stroke-width', 2)\n    .selectAll('circle')\n    .data(nodes)\n    .join('circle')\n    //.attr('class',(d)=>{return `${d.name}`})\n    .attr('class', (d) => {\n      return `node${d.index}`\n    })\n    .attr('r', 30)\n    .style('fill', function (d) {\n      return getRandom00BEBE()\n    })\n    .style('stroke', '#fff')\n    .call(drag(simulation))\n\n  function matchColorForGroup(d) {\n    switch (d.group) {\n      case 1:\n        return circleStrokeColor1\n      case 2:\n        return circleStrokeColor2\n      case 3:\n        return circleStrokeColor3\n      case 4:\n        return circleStrokeColor4\n      default:\n        return '#00bebe'\n    }\n  }\n\n  const label = svg\n    .append('g')\n    .attr('class', 'labels')\n    .selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'central')\n    .attr('class', (d) => {\n      return d.index\n    })\n    //.attr(\"class\", )\n    .text((d) => {\n      return d.label\n    })\n    .style('font-weight', 'bold')\n    .style('fill', '#fff')\n    .call(drag(simulation))\n\n  // Add the tooltip element to the graph\n  const tooltip = d3.select(container).append('div')\n\n  const addTooltip = (hoverTooltip, node, x, y) => {\n    //  tooltip // tooltip is just div. how add transition?\n    //  .transition()\n    //    .duration(200)\n    tooltip\n      .html(hoverTooltip(node))\n      .attr('class', 'tooltip')\n      .style('left', `${x + 40}px`)\n      .style('top', `${y - 120}px`)\n      .style('opacity', 0.99)\n  }\n\n  const removeTooltip = () => {\n    tooltip\n      //  .transition()\n      //  .duration(200)\n      .style('opacity', 0)\n  }\n\n  node\n    .on('mouseover', (d) => {\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY)\n      fadeExceptSelected(d)\n      node.style('cursor', 'pointer')\n    })\n    .on('mouseout', (d) => {\n      removeTooltip()\n      node.style('opacity', '1')\n      link.style('opacity', '1')\n      //  container.querySelectorAll('circle').forEach((element)=>{\n      //  element.style.fill=matchColorForGroup(element)\n      //  })\n    })\n    .on('click', () => {\n      window.location.href = `/subjects/${category}`\n    })\n\n  label\n    .on('mouseover', (d) => {\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY)\n      fadeExceptSelected(d)\n      label.style('cursor', 'pointer')\n    })\n    .on('mouseout', () => {\n      removeTooltip()\n      node.style('opacity', '1')\n      link.style('opacity', '1')\n    })\n    .on('click', () => {\n      window.location.href = `/subjects/${category}`\n    })\n\n  function fadeExceptSelected(selectedNode) {\n    node.style('opacity', '0.2')\n    link.style('opacity', '0.1')\n    //const displayedNodes = []\n    //const displayedLinks = []\n\n    links.map((linkElement) => {\n      // linkElement 에 source, target은 node 객체 값이 들어가있음.\n      if (linkElement.source.id === selectedNode.id) {\n        //selectedNode.style(\"opacity\" ,\"0.1\")\n        container.querySelector(\n          `circle.node${linkElement.target.id}`\n        ).style.opacity = '1'\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1'\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\n          '1'\n        //displayedLinks.push(linkElement)\n        //displayedNodes.push(nodes[linkElement.target.id])\n        //console.log(\"to: \",nodes[linkElement.target.id])\n      } else if (linkElement.target.id === selectedNode.id) {\n        container.querySelector(\n          `circle.node${linkElement.source.id}`\n        ).style.opacity = '1'\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1'\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\n          '1'\n        //displayedLinks.push(linkElement)\n        //displayedNodes.push(nodes[linkElement.source.id])\n        //console.log(\"from: \",nodes[linkElement.source.id])\n      } else {\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1'\n      }\n      //console.log(displayedNodes)\n      //displayedNodes.map((element)=>{\n      //container.querySelector(`circle.${node.name}`).style.opacity=\"0.1\"\n      //node.select(element).style('opacity',\"1\")\n      //})\n\n      // 전부다 투명하게 만들고 나머지 투명도를 복귀하는건 안됨.\n      // 자신이 보여줄것 제외하고 그외 나머지를 투명하게 하는식으로 해야지\n      // dom 트리상의 문제가 없음.\n      //node.select(`circle.${selectedNode.name}`).style('opacity',1)\n    })\n  }\n\n  function tick() {\n    //update link positions\n    link\n      .attr('x1', function (d) {\n        return xScale(d.source.x)\n      })\n      .attr('y1', function (d) {\n        return yScale(d.source.y)\n      })\n      .attr('x2', function (d) {\n        return xScale(d.target.x)\n      })\n      .attr('y2', function (d) {\n        return yScale(d.target.y)\n      })\n\n    // update node positions\n    node.attr('cx', (d) => xScale(d.x)).attr('cy', (d) => yScale(d.y))\n\n    // update label positions\n    label.attr('x', (d) => xScale(d.x)).attr('y', (d) => yScale(d.y))\n  }\n\n  simulation.on('tick', tick)\n\n  return {\n    destroy: () => {\n      simulation.stop()\n    },\n    nodes: () => {\n      return svg.node()\n    },\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionWriteSection.js",["264","265","266","267","268","269"],"/Users/zowan/Documents/web/tect-react/src/components/layout/MainLayout.js",[],"/Users/zowan/Documents/web/tect-react/src/components/question/QuestionEditSection.js",["270","271","272","273","274"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { uid } from 'uid'\nimport { useInput } from '../../hooks/hooks'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateQuestion } from '../../redux/updatePost'\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\nimport { TagBlock } from '../TagBlock'\nimport { Button } from '../Button'\nimport styled from 'styled-components'\nimport { textTooLongAlert } from '../../lib/functions'\nimport HalfWidthContainer from '../../components/layout/HalfWidthContainer'\n\nexport default React.memo(function QuestionEditSection({ initialData }) {\n  const [title, onChangeTitle] = useInput(\n    initialData.question.questionBody.title\n  )\n  const [content, setContent] = useState(\n    initialData.question.questionBody.content\n  )\n  const [hashtagText, setHashtagText] = useState(\n    mergeArray(initialData.question.questionBody.hashtags, `\\,`)\n  )\n  const [hashtagList, setHashtagList] = useState(\n    initialData.question.questionBody.hashtags\n  )\n  const questionID = initialData.question._id || 'error'\n  const splitPoint = /\\,/g\n\n  function mergeArray(array, splitter) {\n    let mergedOne = ''\n    for (const element of array) {\n      mergedOne = mergedOne + element + splitter\n    }\n    return mergedOne\n  }\n\n  const { userID, userNickname } = useSelector((state) => {\n    return {\n      userID: state.auth.userID,\n      userNickname: state.auth.userNickname,\n    }\n  }) || {\n    userID: '123456789012345678901234',\n    userNickname: '익명',\n  }\n\n  const dispatch = useDispatch()\n\n  function onChangeContent(value) {\n    textTooLongAlert(value, 50000)\n    setContent(value)\n  }\n\n  useEffect(() => {\n    if (hashtagList.length > 10) {\n      setHashtagText(hashtagText.substr(0, hashtagText.length - 1))\n      hashtagList.pop()\n      alert('태그의 갯수가 너무 많아요!')\n    }\n  }, [hashtagList, hashtagText])\n\n  const onChangeHashtagText = useCallback(\n    (e) => {\n      setHashtagText(e.target.value)\n      let splitedArray = e.target.value.split(splitPoint)\n      const editedArray = splitedArray\n        .map((element) => {\n          return element.replace(/[^가-힣|a-z|A-Z|0-9]/g, '')\n        })\n        .filter((string) => string.length > 0)\n\n      setHashtagList(editedArray)\n    },\n    [hashtagText, splitPoint]\n  )\n\n  const onSubmitForm = useCallback(\n    async (e) => {\n      e.preventDefault()\n      if (!title || !content) {\n        return alert('제목과 본문을 작성해 주세요.')\n      }\n\n      const formData = {\n        postID: questionID,\n        title: title,\n        contentType: 'question',\n        content: content,\n        authorID: userID,\n        authorNickname: userNickname,\n        hashtags: hashtagList,\n      }\n\n      dispatch(updateQuestion(formData))\n    },\n    [title, content, hashtagList, dispatch, questionID, userID, userNickname]\n  )\n\n  return (\n    <>\n      <HalfWidthContainer>\n        <form onSubmit={onSubmitForm}>\n          <div>\n            <StyledTitleInput\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              maxLength=\"300\"\n              onChange={onChangeTitle}\n              placeholder=\"title\"\n            />\n          </div>\n\n          <MarkdownEditorBlock\n            contentProps={content}\n            onChangeContentProps={onChangeContent}\n            height=\"400px\"\n            width=\"41vw\"\n          />\n          <div>\n            <StyledTagInput\n              type=\"text\"\n              id=\"hashtag\"\n              value={hashtagText}\n              onChange={onChangeHashtagText}\n              placeholder=\"태그는 쉼표로 구분되며, 10개까지 입력 가능합니다\"\n            />\n          </div>\n          <div>\n            {hashtagList.map((element, index) => {\n              return (\n                <TagBlock\n                  key={index}\n                  text={element}\n                  function={(e) => {\n                    e.preventDefault()\n                  }}\n                />\n              )\n            })}\n          </div>\n          <br />\n          <Button className=\"ask-btn\" type=\"submit\" buttonStyle=\"btn--outline\">\n            작성 완료\n          </Button>\n          <br />\n        </form>\n      </HalfWidthContainer>\n      <HalfWidthContainer>\n        <PreviewContainer>\n          <div>\n            <h2>Preview</h2>\n            <br />\n          </div>\n          <MarkdownRenderingBlock content={content} />\n        </PreviewContainer>\n      </HalfWidthContainer>\n    </>\n  )\n})\n\nconst EditorContainer = styled.div``\n\nconst PreviewContainer = styled.div`\n  display: block;\n`\n\nconst StyledTitleInput = styled.input`\n  height: 60px;\n  font-size: 30px;\n  font-weight: bold;\n  cursor: text;\n  border: none;\n  outline: none;\n  padding: 0.2rem;\n  width: 42vw;\n`\nconst StyledTagInput = styled.input`\n  height: 60px;\n  font-size: 15px;\n  cursor: text;\n  border: none;\n  outline: none;\n  padding: 0.2rem;\n  width: 42vw;\n`\n","/Users/zowan/Documents/web/tect-react/src/components/question/AnswerSection.js",["275","276","277"],"import React, { useEffect, useState, useCallback } from 'react'\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\nimport CommentListBlock from '../CommentListBlock'\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\nimport { createAnswer } from '../../redux/createPost'\nimport { updateAnswer } from '../../redux/updatePost'\nimport { deleteAnswer } from '../../redux/deletePost'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uid } from 'uid'\nimport { Link } from 'react-router-dom'\nimport {\n  sortISOByTimeStamp,\n  isoStringToNaturalLanguage,\n} from '../../lib/functions'\nimport { Button } from '../../components/Button'\nimport styled from 'styled-components'\nimport { userDefaultID, mediaSize } from '../../lib/constants'\n\nexport default React.memo(function AnswerSection({ data }) {\n  const [answers, setAnswers] = useState(\n    data.answers.sort((a, b) => {\n      sortISOByTimeStamp(a.answerBody.createdAt, b.answerBody.createdAt, -1)\n    })\n  )\n  // 새로운 answer 를 작성할때 사용하는 state: content\n  const [content, setContent] = useState('')\n  const [isEditingAnswer, setEditingAnswer] = useState(false)\n  const [editedAnswerIndex, setEditedAnswerIndex] = useState()\n  // 기존 answer 를 수정할때 사용하는 state: editedAnswerContent\n  const [editedAnswerContent, setEditedAnswerContent] = useState('')\n  const { userID, userNickname } = useSelector((state) => {\n    return {\n      userID: state.auth.userID,\n      userNickname: state.auth.userNickname,\n    }\n  })\n\n  const dispatch = useDispatch()\n\n  function startEditAnswer(answer, index) {\n    setEditingAnswer(true)\n    setEditedAnswerIndex(index)\n    setEditedAnswerContent(answer.answerBody.content)\n  }\n\n  function onChangeAnswerContent(value) {\n    setEditedAnswerContent(value)\n  }\n\n  // 새로운 answer 를 추가할때 사용된다.\n  const onChangeContent = useCallback((value) => {\n    setContent(value)\n  }, [])\n\n  const addAnswer = useCallback(\n    (e) => {\n      e.preventDefault()\n      if (!content) {\n        return alert('게시글을 작성하세요.')\n      }\n\n      const uid24 = uid(24)\n      const formData = {\n        answerID: uid24,\n        postID: data.question._id,\n        contentType: 'answer',\n        content: content,\n        authorID: userID,\n        authorNickname: userNickname,\n      }\n      const tempAnswer = {\n        __v: 0,\n        _id: uid24,\n        answerBody: {\n          answerID: uid24,\n          authorID: userID,\n          authorNickname: userNickname,\n          content: content,\n          createdAt: '지금', // Date.now() 가 알수없는 오류를 낸다. 생각해보니 걍 이런식으로 써도 될듯.\n          lastUpdate: '지금',\n          postID: data.question._id,\n        },\n      }\n      dispatch(createAnswer(formData))\n      setAnswers([...answers, tempAnswer])\n      setContent('')\n    },\n    [content, answers, data.question._id, dispatch, userID, userNickname]\n  )\n\n  const onUpdateAnswer = useCallback(\n    (answerID, index) => {\n      if (!editedAnswerContent) {\n        alert('본문을 입력해 주세요.')\n        return\n      }\n      const data = { content: editedAnswerContent }\n      dispatch(updateAnswer(answerID, data))\n      setEditingAnswer(false)\n      // immer 를 쓰는것보단 이게 나을지도.\n      const tempAnswer = {\n        ...answers[index],\n        answerBody: {\n          ...answers[index].answerBody,\n          content: editedAnswerContent,\n          lastUpdate: '지금',\n        },\n      }\n\n      setAnswers(\n        answers.map((answer, answerIndex) => {\n          if (answerIndex === index) {\n            return tempAnswer\n          } else {\n            return answer\n          }\n        })\n      )\n    },\n    [editedAnswerContent, answers, dispatch]\n  )\n\n  const onDeleteAnswer = useCallback(\n    (answerID, index) => {\n      dispatch(deleteAnswer(answerID))\n      answers.splice(index, 1)\n      setAnswers([...answers])\n    },\n    [answers, dispatch]\n  )\n\n  return (\n    <AnswerContainer>\n      <h3>{answers.length} Answers</h3>\n      {answers.map((element, index) => {\n        return (\n          <AnswerBlock key={index}>\n            {isEditingAnswer && editedAnswerIndex === index ? (\n              // answer 가 수정중일때\n              <div key={index}>\n                <MarkdownEditorBlock\n                  contentProps={editedAnswerContent}\n                  onChangeContentProps={onChangeAnswerContent}\n                  height=\"350px\"\n                  width=\"41vw\"\n                />\n                <MarkdownRenderingBlock content={editedAnswerContent} />\n                <Button\n                  onClick={() => {\n                    onUpdateAnswer(element._id, index)\n                  }}\n                >\n                  수정완료\n                </Button>\n              </div>\n            ) : (\n              // answer 가 수정중이 아닐때\n              <div key={index}>\n                <div className=\"content\">\n                  {element.answerBody ? (\n                    <MarkdownRenderingBlock\n                      content={element.answerBody.content}\n                    />\n                  ) : (\n                    ''\n                  )}\n                  <br />\n                </div>\n\n                <div>\n                  {isoStringToNaturalLanguage(element.answerBody.lastUpdate)}\n                </div>\n                <div>\n                  {element.answerBody.authorID === userDefaultID ? (\n                    `${element.answerBody.authorNickname}`\n                  ) : (\n                    <Link to={`/user/${element.answerBody.authorID}`}>\n                      {element.answerBody.authorNickname}\n                    </Link>\n                  )}\n                </div>\n\n                {userID !== '000000000000000000000000' &&\n                userID === element.answerBody.authorID ? (\n                  <>\n                    <Button\n                      onClick={() => {\n                        startEditAnswer(element, index)\n                      }}\n                    >\n                      답변 수정\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        onDeleteAnswer(element._id, index)\n                      }}\n                    >\n                      답변 삭제\n                    </Button>\n                  </>\n                ) : (\n                  ''\n                )}\n\n                {/* <CommentListBlock commentList={element.answerBody.comments} /> \n                <MarkdownEditorBlock />\n                <Button>answer에 댓글달기</Button>*/}\n              </div>\n            )}\n          </AnswerBlock>\n        )\n      })}\n      <MarkdownEditorBlock\n        className=\"answerWrite\"\n        onChangeContentProps={onChangeContent}\n        contentProps={content}\n        height=\"250px\"\n        width=\"40vw\"\n      />\n      <br />\n      <h3>Answer Preview</h3>\n      <br />\n      <MarkdownRenderingBlock content={content} />\n      <br />\n      <Button onClick={addAnswer}>답변 추가하기</Button>\n    </AnswerContainer>\n  )\n})\n\nconst AnswerContainer = styled.div`\n  padding: 1rem 1.5rem;\n`\n\nconst AnswerBlock = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 20px;\n  ${mediaSize.small} {\n  }\n  box-shadow: 4px 2px 6px 0px #d7dbe2, -4px -2px 4px 0px #ffffff;\n`\n","/Users/zowan/Documents/web/tect-react/src/components/Spinner.js",[],"/Users/zowan/Documents/web/tect-react/src/hooks/hooks.js",[],"/Users/zowan/Documents/web/tect-react/src/lib/katexWhiteList.js",[],"/Users/zowan/Documents/web/tect-react/src/lib/prismPlugin.js",[],"/Users/zowan/Documents/web/tect-react/src/components/MarkdownEditorBlock.js",["278","279","280","281"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { Button } from './Button'\nimport styled from 'styled-components'\nimport {\n  FaBold,\n  FaItalic,\n  FaLink,\n  FaCode,\n  FaSuperscript,\n  FaHeading,\n} from 'react-icons/fa'\nimport { mediaQuery, colorPalette, mediaSize } from '../lib/constants'\n\nexport default React.memo(function MarkdownEditorBlock({\n  onChangeContentProps,\n  contentProps,\n  width,\n  height,\n}) {\n  const [localContent, setLocalContent] = useState(contentProps)\n\n  const onChangeContent = useCallback(\n    (e) => {\n      e.preventDefault()\n      // e.target.value 에서 \\n을 <br /> 으로 치환한뒤 이걸 넣어주자.\n\n      setLocalContent(e.target.value)\n      onChangeContentProps(e.target.value)\n    },\n    [onChangeContentProps]\n  )\n\n  const addCodeBlock = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent}\\n\\`\\`\\`c\\nint main () {\\n  printf('hello world!');\\n  return 0;\\n}\\n\\`\\`\\``\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addMathBlock = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent}\\n$-\\\\frac{\\\\hbar^{2}}{2m} \\\\nabla^{2} \\\\psi + V \\\\psi = E \\\\psi$`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addBoldText = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent} **Bold Text**`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addItalicText = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent} *Italic Text*`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addLargeTitle = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent}\\n## Large Title`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addSmallTitle = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent}\\n### Small Title`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  const addLink = useCallback(\n    (e) => {\n      e.preventDefault()\n      const addedContent = `${localContent} [오른쪽 괄호안에는 링크 주소를 적습니다](https://tect.dev)`\n      setLocalContent(addedContent)\n      onChangeContentProps(addedContent)\n    },\n    [localContent, onChangeContentProps]\n  )\n\n  return (\n    <>\n      <EditorContainer>\n        <MarkdownToolkit>\n          <MarkdownButton onClick={addCodeBlock}>\n            <FaCode />\n          </MarkdownButton>\n          <MarkdownButton onClick={addMathBlock}>\n            <FaSuperscript />\n          </MarkdownButton>\n          <MarkdownButton onClick={addBoldText}>\n            <FaBold />\n          </MarkdownButton>\n          <MarkdownButton onClick={addLargeTitle}>\n            <FaHeading />\n          </MarkdownButton>\n          <MarkdownButton onClick={addItalicText}>\n            <FaItalic />\n          </MarkdownButton>\n          <MarkdownButton onClick={addLink}>\n            <FaLink />\n          </MarkdownButton>\n        </MarkdownToolkit>\n        <div>\n          <label htmlFor=\"content\"></label>\n          <StyledTextarea\n            id=\"content\"\n            value={contentProps}\n            onChange={onChangeContent}\n            style={{ width: width, height: height }}\n          ></StyledTextarea>\n        </div>\n      </EditorContainer>\n    </>\n  )\n})\n\nconst MarkdownToolkit = styled.div`\n  margin-bottom: 10px;\n`\nconst MarkdownButton = styled.button`\n  border-radius: 3px;\n  display: inline-flex;\n  padding: 8px 10px;\n  border-radius: 5px;\n  color: '#ffffff';\n  background-color: transparent;\n  outline: 0;\n  cursor: pointer;\n  border: none;\n  justify-content: space-around;\n  font-family: Arial, sans-serif;\n`\n\nconst EditorContainer = styled.div`\n  ${mediaSize.small} {\n  }\n`\nconst StyledTextarea = styled.textarea`\n  border: none;\n  padding: 10px;\n  background-color: ${colorPalette.gray0} !important;\n  &:active {\n    border: none;\n  }\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    border: none;\n  }\n`\n","/Users/zowan/Documents/web/tect-react/src/lib/prismThemes.js",[],"/Users/zowan/Documents/web/tect-react/src/components/layout/Navbar.js",["282","283","284","285","286"],"/Users/zowan/Documents/web/tect-react/src/components/Button.js",[],"/Users/zowan/Documents/web/tect-react/src/components/TagBlock.js",["287"],"import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledTagBlock = styled.div`\n  display: inline-flex;\n  border-radius: 5px;\n  background: #00bebe;\n  color: #ffffff;\n  padding: 2px 2px;\n  margin: 2px 2px 0 2px;\n  width: inherit;\n  opacity: 0.8;\n  &:hover {\n    background: #00bebe;\n    color: #ffffff;\n    transition: all ease-in 0.2s;\n    opacity: 1;\n    cursor: pointer;\n  }\n`\n\nexport const TagBlock = React.memo(({ text, functionProps }) => {\n  const onClickTag = useCallback((e) => {\n    alert('tag is clicked!')\n  })\n  return <StyledTagBlock onClick={onClickTag}>{text}</StyledTagBlock>\n})\n","/Users/zowan/Documents/web/tect-react/src/components/layout/Footer.js",["288"],"import { Link } from 'react-router-dom';\nimport '../../styles/layout/Footer.scss';\n\nexport default function Footer() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <div className=\"footer-container\">\n          {/* <div>기업 푸터</div>\n          <div>일반: 전화번호, 이메일, 계좌정보 </div>\n          <div>고객센터 : 전화, 팩스, 이메일, 카카오톡ID(혹은 링크) 상담가능 일시</div>\n          <div>법인 : 상호, 대표, 주소, 개인정보관리 책임자, 사업자 등록번호, 통신판매업 신고</div>\n          <div> 계좌번호 목록</div>\n          <div>회사소개, 개인정보보호정책/처리방침, 이용약관, 사이트맵</div>\n          <div>SNS 링크</div>\n          <div>별도의 Contact us도 필요한가</div> */}\n          footer\n        </div>\n      </footer>\n      {/* <ul>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-links\">\n            About Tect.dev\n          </Link>\n        </li>\n      </ul> */}\n    </>\n  );\n}\n","/Users/zowan/Documents/web/tect-react/src/components/CommentListBlock.js",[],"/Users/zowan/Documents/web/tect-react/src/lib/constants.js",[],"/Users/zowan/Documents/web/tect-react/src/components/layout/LoginModal.js",["289","290","291","292"],"import React, { useCallback, useState } from 'react'\nimport '../../styles/layout/LoginModal.scss'\nimport { Button } from '../Button'\nimport { emailLogin, emailSignUp } from '../../redux/auth'\nimport { useDispatch } from 'react-redux'\nimport { onClickTag } from '../../lib/functions'\n\nexport const LoginModal = React.memo(({ labelFor }) => {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n  const [nickname, setNickname] = useState()\n  const [isSignUp, setIsSignUp] = useState(false)\n\n  // 굉장히 fancy한 방법인데 콘솔창이 경고를 띄운다..\n  //const onChange = (e) => {\n  //  const {\n  //    target: { name, value },\n  //  } = e\n  //  if (name === 'email') {\n  //    setEmail(value)\n  //  } else if (name === 'password') {\n  //    setPassword(value)\n  //  }\n  //}\n\n  const onChangeEmail = useCallback(\n    (e) => {\n      setEmail(e.target.value)\n    },\n    [email]\n  )\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value)\n    },\n    [password]\n  )\n\n  const onChangeNickname = useCallback(\n    (e) => {\n      setNickname(e.target.value)\n    },\n    [nickname]\n  )\n\n  const onEmailLogin = useCallback(\n    (e) => {\n      e.preventDefault()\n      dispatch(emailLogin(email, password))\n    },\n    [dispatch, email, password]\n  )\n\n  const onEmailSignUp = useCallback(\n    (e) => {\n      e.preventDefault()\n      dispatch(emailSignUp(email, password, nickname))\n    },\n    [dispatch, email, password, nickname]\n  )\n\n  return (\n    <>\n      <div className=\"login-modal\">\n        <div className=\"login-modal-display\">\n          <label className=\"login-modal-close-btn\" htmlFor={labelFor} />\n\n          <div className=\"login-modal-display-logo\">Login</div>\n          <div className=\"login-modal-display-body\">\n            <form name=\"devguru-auth\" className=\"login-form\" autoComplete=\"off\">\n              <input\n                id=\"login-id-input\"\n                className=\"login-input\"\n                type=\"email\"\n                placeholder=\"Enter Login Email\"\n                required\n                name=\"email\"\n                value={email}\n                onChange={onChangeEmail}\n              />\n              <input\n                id=\"login-pw-input\"\n                className=\"login-input\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                required\n                name=\"password\"\n                value={password}\n                onChange={onChangePassword}\n              />\n              {isSignUp ? (\n                <input\n                  className=\"login-input\"\n                  type=\"text\"\n                  placeholder=\"Enter Nickname\"\n                  required\n                  name=\"nickname\"\n                  value={nickname}\n                  onChange={onChangeNickname}\n                />\n              ) : (\n                ''\n              )}\n\n              {isSignUp ? (\n                <Button className=\"login-submit\" onClick={onEmailSignUp}>\n                  Sign Up\n                </Button>\n              ) : (\n                <>\n                  {' '}\n                  <Button className=\"login-submit\" onClick={onEmailLogin}>\n                    Login\n                  </Button>\n                  <Button\n                    className=\"login-submit\"\n                    onClick={() => {\n                      setIsSignUp(true)\n                    }}\n                  >\n                    Sign Up?\n                  </Button>\n                </>\n              )}\n\n              <div className=\"auth-help\">\n                <div className=\"auth-help-element\">\n                  <input id=\"rememberUser\" type=\"radio\" name=\"Remember Me\" />\n                  <label htmlFor=\"rememberUser\"> Remember Me</label>\n                </div>\n                <div className=\"auth-help-element\">Forgot ID/PW?</div>\n              </div>\n              <div className=\"authProviders\">\n                <div>Google</div>\n                <div>Facebook</div>\n                <div>Github</div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <label className=\"login-modal-close-area\" htmlFor={labelFor} />\n      </div>\n    </>\n  )\n})\n","/Users/zowan/Documents/web/tect-react/src/components/Pagination.js",["293","294","295","296","297"],"/Users/zowan/Documents/web/tect-react/src/components/question/QuestionBlock.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionSearchResultPage.js",["298"],"/Users/zowan/Documents/web/tect-react/src/pages/techtree/TechtreeEditPage.js",["299","300","301","302"],"/Users/zowan/Documents/web/tect-react/src/components/techtree/TechtreeEditor.js",["303"],"/Users/zowan/Documents/web/tect-react/src/redux/techtree.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"312","line":1,"column":38,"nodeType":"310","messageId":"311","endLine":1,"endColumn":53},{"ruleId":"308","severity":1,"message":"313","line":15,"column":10,"nodeType":"310","messageId":"311","endLine":15,"endColumn":21},{"ruleId":"308","severity":1,"message":"314","line":17,"column":23,"nodeType":"310","messageId":"311","endLine":17,"endColumn":39},{"ruleId":"315","severity":1,"message":"316","line":35,"column":6,"nodeType":"317","endLine":35,"endColumn":8,"suggestions":"318"},{"ruleId":"308","severity":1,"message":"314","line":1,"column":23,"nodeType":"310","messageId":"311","endLine":1,"endColumn":39},{"ruleId":"308","severity":1,"message":"319","line":23,"column":7,"nodeType":"310","messageId":"311","endLine":23,"endColumn":25},{"ruleId":"308","severity":1,"message":"320","line":24,"column":7,"nodeType":"310","messageId":"311","endLine":24,"endColumn":29},{"ruleId":"308","severity":1,"message":"321","line":25,"column":7,"nodeType":"310","messageId":"311","endLine":25,"endColumn":26},{"ruleId":"308","severity":1,"message":"322","line":35,"column":7,"nodeType":"310","messageId":"311","endLine":35,"endColumn":25},{"ruleId":"308","severity":1,"message":"323","line":36,"column":7,"nodeType":"310","messageId":"311","endLine":36,"endColumn":29},{"ruleId":"308","severity":1,"message":"324","line":37,"column":7,"nodeType":"310","messageId":"311","endLine":37,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":59,"column":15,"nodeType":"327","endLine":59,"endColumn":71},{"ruleId":"325","severity":1,"message":"326","line":65,"column":15,"nodeType":"327","endLine":65,"endColumn":72},{"ruleId":"325","severity":1,"message":"326","line":71,"column":15,"nodeType":"327","endLine":71,"endColumn":75},{"ruleId":"325","severity":1,"message":"326","line":77,"column":15,"nodeType":"327","endLine":77,"endColumn":69},{"ruleId":"325","severity":1,"message":"326","line":83,"column":15,"nodeType":"327","endLine":83,"endColumn":74},{"ruleId":"325","severity":1,"message":"326","line":89,"column":15,"nodeType":"327","endLine":89,"endColumn":68},{"ruleId":"308","severity":1,"message":"328","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"329","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":1,"column":41,"nodeType":"310","messageId":"311","endLine":1,"endColumn":49},{"ruleId":"315","severity":1,"message":"330","line":24,"column":6,"nodeType":"317","endLine":24,"endColumn":16,"suggestions":"331"},{"ruleId":"308","severity":1,"message":"332","line":1,"column":30,"nodeType":"310","messageId":"311","endLine":1,"endColumn":43},{"ruleId":"308","severity":1,"message":"333","line":9,"column":17,"nodeType":"310","messageId":"311","endLine":9,"endColumn":27},{"ruleId":"325","severity":1,"message":"326","line":24,"column":15,"nodeType":"327","endLine":24,"endColumn":131},{"ruleId":"308","severity":1,"message":"328","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"329","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":1,"column":41,"nodeType":"310","messageId":"311","endLine":1,"endColumn":49},{"ruleId":"308","severity":1,"message":"334","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":18},{"ruleId":"308","severity":1,"message":"335","line":4,"column":23,"nodeType":"310","messageId":"311","endLine":4,"endColumn":34},{"ruleId":"308","severity":1,"message":"336","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":30},{"ruleId":"308","severity":1,"message":"337","line":10,"column":17,"nodeType":"310","messageId":"311","endLine":10,"endColumn":23},{"ruleId":"308","severity":1,"message":"338","line":20,"column":9,"nodeType":"310","messageId":"311","endLine":20,"endColumn":16},{"ruleId":"308","severity":1,"message":"329","line":1,"column":10,"nodeType":"310","messageId":"311","endLine":1,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":1,"column":23,"nodeType":"310","messageId":"311","endLine":1,"endColumn":31},{"ruleId":"308","severity":1,"message":"339","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":21},{"ruleId":"308","severity":1,"message":"340","line":15,"column":24,"nodeType":"310","messageId":"311","endLine":15,"endColumn":34},{"ruleId":"308","severity":1,"message":"328","line":1,"column":40,"nodeType":"310","messageId":"311","endLine":1,"endColumn":49},{"ruleId":"308","severity":1,"message":"341","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":24},{"ruleId":"308","severity":1,"message":"342","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":27},{"ruleId":"308","severity":1,"message":"343","line":10,"column":26,"nodeType":"310","messageId":"311","endLine":10,"endColumn":39},{"ruleId":"308","severity":1,"message":"344","line":19,"column":12,"nodeType":"310","messageId":"311","endLine":19,"endColumn":27},{"ruleId":"315","severity":1,"message":"345","line":28,"column":6,"nodeType":"317","endLine":28,"endColumn":16,"suggestions":"346"},{"ruleId":"308","severity":1,"message":"343","line":30,"column":12,"nodeType":"310","messageId":"311","endLine":30,"endColumn":25},{"ruleId":"308","severity":1,"message":"347","line":34,"column":9,"nodeType":"310","messageId":"311","endLine":34,"endColumn":24},{"ruleId":"308","severity":1,"message":"348","line":39,"column":9,"nodeType":"310","messageId":"311","endLine":39,"endColumn":22},{"ruleId":"308","severity":1,"message":"349","line":48,"column":9,"nodeType":"310","messageId":"311","endLine":48,"endColumn":26},{"ruleId":"308","severity":1,"message":"350","line":52,"column":11,"nodeType":"310","messageId":"311","endLine":52,"endColumn":20},{"ruleId":"308","severity":1,"message":"351","line":171,"column":12,"nodeType":"310","messageId":"311","endLine":171,"endColumn":30},{"ruleId":"352","severity":1,"message":"353","line":267,"column":29,"nodeType":"354","messageId":"355","endLine":267,"endColumn":31},{"ruleId":"356","severity":1,"message":"357","line":19,"column":23,"nodeType":"358","messageId":"359","endLine":19,"endColumn":24,"suggestions":"360"},{"ruleId":"315","severity":1,"message":"361","line":34,"column":5,"nodeType":"317","endLine":34,"endColumn":12,"suggestions":"362"},{"ruleId":"315","severity":1,"message":"363","line":48,"column":6,"nodeType":"317","endLine":48,"endColumn":19,"suggestions":"364"},{"ruleId":"315","severity":1,"message":"365","line":62,"column":5,"nodeType":"317","endLine":62,"endColumn":18,"suggestions":"366"},{"ruleId":"315","severity":1,"message":"367","line":85,"column":5,"nodeType":"317","endLine":85,"endColumn":34,"suggestions":"368"},{"ruleId":"308","severity":1,"message":"369","line":152,"column":7,"nodeType":"310","messageId":"311","endLine":152,"endColumn":22},{"ruleId":"308","severity":1,"message":"370","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"356","severity":1,"message":"357","line":22,"column":61,"nodeType":"371","messageId":"359","endLine":22,"endColumn":62,"suggestions":"372"},{"ruleId":"356","severity":1,"message":"357","line":28,"column":23,"nodeType":"358","messageId":"359","endLine":28,"endColumn":24,"suggestions":"373"},{"ruleId":"315","severity":1,"message":"374","line":75,"column":5,"nodeType":"317","endLine":75,"endColumn":30,"suggestions":"375"},{"ruleId":"308","severity":1,"message":"369","line":163,"column":7,"nodeType":"310","messageId":"311","endLine":163,"endColumn":22},{"ruleId":"308","severity":1,"message":"328","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"341","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":24},{"ruleId":"352","severity":1,"message":"376","line":21,"column":30,"nodeType":"354","messageId":"355","endLine":21,"endColumn":32},{"ruleId":"308","severity":1,"message":"328","line":1,"column":30,"nodeType":"310","messageId":"311","endLine":1,"endColumn":39},{"ruleId":"308","severity":1,"message":"377","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":16},{"ruleId":"308","severity":1,"message":"340","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":20},{"ruleId":"308","severity":1,"message":"378","line":83,"column":9,"nodeType":"310","messageId":"311","endLine":83,"endColumn":22},{"ruleId":"308","severity":1,"message":"329","line":1,"column":27,"nodeType":"310","messageId":"311","endLine":1,"endColumn":38},{"ruleId":"308","severity":1,"message":"335","line":3,"column":23,"nodeType":"310","messageId":"311","endLine":3,"endColumn":34},{"ruleId":"308","severity":1,"message":"379","line":22,"column":19,"nodeType":"310","messageId":"311","endLine":22,"endColumn":31},{"ruleId":"308","severity":1,"message":"380","line":35,"column":9,"nodeType":"310","messageId":"311","endLine":35,"endColumn":24},{"ruleId":"356","severity":1,"message":"381","line":58,"column":21,"nodeType":"371","messageId":"359","endLine":58,"endColumn":22,"suggestions":"382"},{"ruleId":"315","severity":1,"message":"383","line":23,"column":22,"nodeType":"310","endLine":23,"endColumn":33},{"ruleId":"308","severity":1,"message":"384","line":1,"column":10,"nodeType":"310","messageId":"311","endLine":1,"endColumn":14},{"ruleId":"308","severity":1,"message":"385","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":20},{"ruleId":"315","severity":1,"message":"386","line":31,"column":5,"nodeType":"317","endLine":31,"endColumn":12,"suggestions":"387"},{"ruleId":"315","severity":1,"message":"388","line":38,"column":5,"nodeType":"317","endLine":38,"endColumn":15,"suggestions":"389"},{"ruleId":"315","severity":1,"message":"390","line":45,"column":5,"nodeType":"317","endLine":45,"endColumn":15,"suggestions":"391"},{"ruleId":"308","severity":1,"message":"392","line":12,"column":19,"nodeType":"310","messageId":"311","endLine":12,"endColumn":29},{"ruleId":"308","severity":1,"message":"393","line":16,"column":22,"nodeType":"310","messageId":"311","endLine":16,"endColumn":35},{"ruleId":"308","severity":1,"message":"394","line":17,"column":20,"nodeType":"310","messageId":"311","endLine":17,"endColumn":31},{"ruleId":"395","severity":1,"message":"396","line":83,"column":35,"nodeType":"397","messageId":"398","endLine":83,"endColumn":37},{"ruleId":"395","severity":1,"message":"396","line":99,"column":35,"nodeType":"397","messageId":"398","endLine":99,"endColumn":37},{"ruleId":"315","severity":1,"message":"399","line":31,"column":6,"nodeType":"317","endLine":31,"endColumn":26,"suggestions":"400"},{"ruleId":"308","severity":1,"message":"332","line":4,"column":17,"nodeType":"310","messageId":"311","endLine":4,"endColumn":30},{"ruleId":"308","severity":1,"message":"401","line":13,"column":10,"nodeType":"310","messageId":"311","endLine":13,"endColumn":16},{"ruleId":"308","severity":1,"message":"402","line":20,"column":30,"nodeType":"310","messageId":"311","endLine":20,"endColumn":47},{"ruleId":"315","severity":1,"message":"403","line":36,"column":5,"nodeType":"317","endLine":36,"endColumn":14,"suggestions":"404"},{"ruleId":"308","severity":1,"message":"401","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":16},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useLayoutEffect' is defined but never used.","'useSelector' is defined but never used.","'firebaseInstance' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["407"],"'UPDATE_COMMENT_TRY' is assigned a value but never used.","'UPDATE_COMMENT_SUCCESS' is assigned a value but never used.","'UPDATE_COMMENT_FAIL' is assigned a value but never used.","'CREATE_COMMENT_TRY' is assigned a value but never used.","'CREATE_COMMENT_SUCCESS' is assigned a value but never used.","'CREATE_COMMENT_FAIL' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'getQuestionAsync'. Either include it or remove the dependency array.",["408"],"'useDebugValue' is defined but never used.","'myNickname' is assigned a value but never used.","'useInput' is defined but never used.","'useDispatch' is defined but never used.","'MarkdownRenderingBlock' is defined but never used.","'userID' is assigned a value but never used.","'history' is assigned a value but never used.","'QuestionBlock' is defined but never used.","'mediaQuery' is defined but never used.","'CommentListBlock' is defined but never used.","'MarkdownEditorBlock' is defined but never used.","'deleteComment' is defined but never used.","'onChangeContent' is defined but never used.","React Hook useCallback has a missing dependency: 'data.question._id'. Either include it or remove the dependency array.",["409"],"'onSubmitComment' is assigned a value but never used.","'containerRect' is assigned a value but never used.","'circleSelctedFill' is assigned a value but never used.","'colorSet1' is assigned a value but never used.","'matchColorForGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["410","411"],"React Hook useCallback has an unnecessary dependency: 'title'. Either exclude it or remove the dependency array.",["412"],"React Hook useEffect has a missing dependency: 'hashtagText'. Either include it or remove the dependency array. You can also do a functional update 'setHashtagText(h => ...)' if you only need 'hashtagText' in the 'setHashtagText' call.",["413"],"React Hook useCallback has a missing dependency: 'splitPoint'. Either include it or remove the dependency array.",["414"],"React Hook useCallback has missing dependencies: 'dispatch', 'userID', and 'userNickname'. Either include them or remove the dependency array.",["415"],"'EditorContainer' is assigned a value but never used.","'uid' is defined but never used.","TemplateElement",["416","417"],["418","419"],"React Hook useCallback has an unnecessary dependency: 'hashtagText'. Either exclude it or remove the dependency array.",["420"],"Array.prototype.sort() expects a return value from arrow function.","'Button' is defined but never used.","'addSmallTitle' is assigned a value but never used.","'userNickname' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","Unnecessary escape character: \\&.",["421","422"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'Link' is defined but never used.","'onClickTag' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'email'. Either exclude it or remove the dependency array.",["423"],"React Hook useCallback has an unnecessary dependency: 'password'. Either exclude it or remove the dependency array.",["424"],"React Hook useCallback has an unnecessary dependency: 'nickname'. Either exclude it or remove the dependency array.",["425"],"'setPerPage' is assigned a value but never used.","'setBtnShowNum' is assigned a value but never used.","'setPageBtns' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getSearchResultsAsync'. Either include it or remove the dependency array.",["426"],"'select' is defined but never used.","'isEditingTechtree' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'content'. Either exclude it or remove the dependency array.",["427"],"no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"messageId":"434","fix":"435","desc":"436"},{"messageId":"437","fix":"438","desc":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"messageId":"434","fix":"448","desc":"436"},{"messageId":"437","fix":"449","desc":"439"},{"messageId":"434","fix":"450","desc":"436"},{"messageId":"437","fix":"451","desc":"439"},{"desc":"444","fix":"452"},{"messageId":"434","fix":"453","desc":"436"},{"messageId":"437","fix":"454","desc":"439"},{"desc":"440","fix":"455"},{"desc":"440","fix":"456"},{"desc":"440","fix":"457"},{"desc":"458","fix":"459"},{"desc":"440","fix":"460"},"Update the dependencies array to be: [dispatch]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, getQuestionAsync]",{"range":"463","text":"464"},"Update the dependencies array to be: [data.question._id, dispatch]",{"range":"465","text":"466"},"removeEscape",{"range":"467","text":"468"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"469","text":"470"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: []",{"range":"471","text":"472"},"Update the dependencies array to be: [hashtagList, hashtagText]",{"range":"473","text":"474"},"Update the dependencies array to be: [splitPoint]",{"range":"475","text":"476"},"Update the dependencies array to be: [title, content, userID, userNickname, hashtagList, dispatch]",{"range":"477","text":"478"},{"range":"479","text":"468"},{"range":"480","text":"470"},{"range":"481","text":"468"},{"range":"482","text":"470"},{"range":"483","text":"476"},{"range":"484","text":"468"},{"range":"485","text":"470"},{"range":"486","text":"472"},{"range":"487","text":"472"},{"range":"488","text":"472"},"Update the dependencies array to be: [dispatch, getSearchResultsAsync, location]",{"range":"489","text":"490"},{"range":"491","text":"472"},[1379,1381],"[dispatch]",[892,902],"[dispatch, getQuestionAsync]",[965,975],"[data.question._id, dispatch]",[841,842],"",[841,841],"\\",[1159,1166],"[]",[1459,1472],"[hashtagList, hashtagText]",[1880,1893],"[splitPoint]",[2374,2403],"[title, content, userID, userNickname, hashtagList, dispatch]",[978,979],[978,978],[1167,1168],[1167,1167],[2321,2346],[1892,1893],[1892,1892],[907,914],[1018,1028],[1132,1142],[1079,1099],"[dispatch, getSearchResultsAsync, location]",[1357,1366]]