[{"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js":"2","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js":"4","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js":"5","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js":"6","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js":"7","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js":"8","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js":"9","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionEditPage.js":"10","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js":"11","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js":"12","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js":"13","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js":"14","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js":"15","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js":"16","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js":"17","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js":"18","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Spinner.js":"19","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js":"20","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js":"21","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js":"22","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionEditSection.js":"23","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js":"24","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js":"25","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js":"26","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js":"27","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerSection.js":"28","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownRenderingBlock.js":"29","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionSection.js":"30","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteSection.js":"31","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js":"32","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Navbar.js":"33","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js":"34","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\CommentListBlock.js":"35","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismPlugin.js":"36","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownEditorBlock.js":"37","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\katexWhiteList.js":"38","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismThemes.js":"39","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\TagBlock.js":"40","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js":"41","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Pagination.js":"42"},{"size":1234,"mtime":1610765711050,"results":"43","hashOfConfig":"44"},{"size":2108,"mtime":1610765711042,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1609380482516,"results":"46","hashOfConfig":"44"},{"size":494,"mtime":1610677252854,"results":"47","hashOfConfig":"44"},{"size":2721,"mtime":1610798600418,"results":"48","hashOfConfig":"44"},{"size":2942,"mtime":1610584948743,"results":"49","hashOfConfig":"44"},{"size":209,"mtime":1610584948748,"results":"50","hashOfConfig":"44"},{"size":1228,"mtime":1610584948760,"results":"51","hashOfConfig":"44"},{"size":1434,"mtime":1610765711052,"results":"52","hashOfConfig":"44"},{"size":1293,"mtime":1610765711052,"results":"53","hashOfConfig":"44"},{"size":1439,"mtime":1610765711054,"results":"54","hashOfConfig":"44"},{"size":209,"mtime":1610584948753,"results":"55","hashOfConfig":"44"},{"size":204,"mtime":1610584948742,"results":"56","hashOfConfig":"44"},{"size":794,"mtime":1610584948755,"results":"57","hashOfConfig":"44"},{"size":5552,"mtime":1610765711056,"results":"58","hashOfConfig":"44"},{"size":4572,"mtime":1610765711055,"results":"59","hashOfConfig":"44"},{"size":4391,"mtime":1610791865278,"results":"60","hashOfConfig":"44"},{"size":4104,"mtime":1610791865283,"results":"61","hashOfConfig":"44"},{"size":222,"mtime":1610765711044,"results":"62","hashOfConfig":"44"},{"size":345,"mtime":1610584948709,"results":"63","hashOfConfig":"44"},{"size":641,"mtime":1610584948690,"results":"64","hashOfConfig":"44"},{"size":1324,"mtime":1610791995390,"results":"65","hashOfConfig":"44"},{"size":4053,"mtime":1610765711049,"results":"66","hashOfConfig":"44"},{"size":10282,"mtime":1610765711045,"results":"67","hashOfConfig":"44"},{"size":322,"mtime":1610584948702,"results":"68","hashOfConfig":"44"},{"size":10913,"mtime":1610584948735,"results":"69","hashOfConfig":"44"},{"size":259,"mtime":1610584948712,"results":"70","hashOfConfig":"44"},{"size":6535,"mtime":1610791865254,"results":"71","hashOfConfig":"44"},{"size":4337,"mtime":1610791865244,"results":"72","hashOfConfig":"44"},{"size":3231,"mtime":1610791865259,"results":"73","hashOfConfig":"44"},{"size":4054,"mtime":1610791865264,"results":"74","hashOfConfig":"44"},{"size":1854,"mtime":1610791865268,"results":"75","hashOfConfig":"44"},{"size":5632,"mtime":1610765711046,"results":"76","hashOfConfig":"44"},{"size":1069,"mtime":1610584948703,"results":"77","hashOfConfig":"44"},{"size":414,"mtime":1610584948690,"results":"78","hashOfConfig":"44"},{"size":2550,"mtime":1610584948736,"results":"79","hashOfConfig":"44"},{"size":551,"mtime":1610791865238,"results":"80","hashOfConfig":"44"},{"size":1058,"mtime":1610584948736,"results":"81","hashOfConfig":"44"},{"size":21380,"mtime":1610791865273,"results":"82","hashOfConfig":"44"},{"size":661,"mtime":1610791865248,"results":"83","hashOfConfig":"44"},{"size":2237,"mtime":1610765711046,"results":"84","hashOfConfig":"44"},{"size":3150,"mtime":1610808506046,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"a3abpd",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\index.js",[],["190","191"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\App.js",["192","193"],"import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport HomePage from './pages/HomePage'\r\nimport AboutPage from './pages/AboutPage'\r\nimport QuestionListPage from './pages/question/QuestionListPage'\r\nimport QuestionWritePage from './pages/question/QuestionWritePage'\r\nimport QuestionEditPage from './pages/question/QuestionEditPage'\r\nimport QuestionDetailPage from './pages/question/QuestionDetailPage'\r\nimport ProfilePage from './pages/user/ProfilePage'\r\nimport LoginPage from './pages/LoginPage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  const { userInfo } = useSelector((state) => {\r\n    return state.auth\r\n  })\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <>\r\n      {/* head 파일을 여기다 적으면, index.html 의 body 태그 하위로 들어가는듯. 그래서 콘솔이 에러를 낸다. react helmet 같은 라이브러리를 써야할듯 */}\r\n      <head>\r\n        <meta name=\"description\" content=\"세상 모든 테크트리, tect.dev\" />\r\n        <link\r\n          href=\"https://myCDN.com/prism@v1.x/themes/prism.css\"\r\n          rel=\"stylesheet\"\r\n        />\r\n      </head>\r\n      {/* 라우트를 Switch 로 감싸면, 매칭되는 첫번째 페이지만 렌더를 해준다. */}\r\n      <Switch>\r\n        <Route path=\"/\" exact={true} component={HomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/user/:userID\" component={ProfilePage} />\r\n\r\n        <Route path=\"/mypage\" component={ProfilePage} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/question\" exact={true} component={QuestionListPage} />\r\n        <Route\r\n          path=\"/question/write\"\r\n          exact={true}\r\n          component={QuestionWritePage}\r\n        />\r\n        <Route path=\"/question/edit/:questionID\" component={QuestionEditPage} />\r\n        <Route path=\"/question/:questionID\" component={QuestionDetailPage} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\index.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionListPage.js",["194","195","196"],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\HomePage.js",["197","198","199","200","201","202"],"import React from 'react';\r\nimport MainLayout from '../components/layout/MainLayout';\r\nimport '../styles/page/HomePage.scss'\r\n\r\nimport ForceGraph from '../components/home/ForceGraph';\r\nimport SubjectBlock from '../components/home/SubjectBlock';\r\nimport { dummyTechtree } from '../lib/dummyTechtree';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div className=\"homepage-container\">\r\n          <main className=\"techtree-container\">\r\n            <ForceGraph techtreeData={dummyTechtree.cs} category={'cs'} />\r\n          </main>\r\n          <aside className=\"subjects-sidebar\">\r\n            <div\r\n              onClick={() => {\r\n                console.log('physics clicked');\r\n              }}\r\n              className=\"block\"\r\n            >\r\n              <SubjectBlock\r\n                iconSize=\"70\"\r\n                url=\"physics\"\r\n                displayedName=\"physics\"\r\n              />\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img\r\n                src=\"/icons/math.svg\"\r\n                alt=\"mathematicsIcon\"\r\n                height=\"70\"\r\n                width=\"70\"\r\n              />\r\n              <br />\r\n              Mathematics\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img\r\n                src=\"/icons/economics.svg\"\r\n                alt=\"economicsIcon\"\r\n                height=\"70\"\r\n                width=\"70\"\r\n              />\r\n              <br />\r\n              economics\r\n            </div>\r\n\r\n            <div\r\n              onClick={() => {\r\n                console.log('cs clicked');\r\n              }}\r\n              className=\"block\"\r\n            >\r\n              <img src=\"/icons/computer.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Computer Science\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/chemistry.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Chemistry\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/biochemistry.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Biochemistry\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/russia.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Russia\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/electricity.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Electrical Engineering\r\n            </div>\r\n\r\n            <div onClick={() => {}} className=\"block\">\r\n              <img src=\"/icons/earth.svg\" height=\"70\" width=\"70\" />\r\n              <br />\r\n              Earth System\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\LoginPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\user\\ProfilePage.js",["203"],"import React from 'react';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport \"../../styles/page/user/ProfilePage.scss\"\r\n\r\nexport default function ProfilePage({ match }) {\r\n  const { userUID } = match.params;\r\n\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <div className=\"profile-container\">\r\n          <div className=\"profile-upside\">\r\n            <div className=\"profile-photo\">\r\n              <img src=\"https://media.vlpt.us/images/ghkdwltjq98/profile/b7b493c6-69ef-4886-aec6-16d03800306e/social.png?w=120\"/> \r\n            </div>\r\n            <div className=\"intro-container\">\r\n              <div>{userUID} 닉네임</div>\r\n              <div>이메일</div>\r\n              <div>연락처</div>\r\n              <div>가입일시</div>\r\n              <div>마지막 접속일</div>\r\n              <div>인증 연동</div>\r\n              <div>포인트</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-downside\">\r\n            <div className=\"profile-card\">Questions (0)</div>\r\n            <div className=\"profile-card\">Answers (0)</div>\r\n            <div className=\"profile-card\">Free Posts (0)</div>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionDetailPage.js",["204","205","206"],"import { useEffect, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { readQuestionByUID } from '../../redux/readPost'\r\nimport { Link } from 'react-router-dom'\r\nimport MainLayout from '../../components/layout/MainLayout'\r\nimport QuestionSection from '../../components/question/QuestionSection'\r\nimport AnswerSection from '../../components/question/AnswerSection'\r\nimport { Spinner } from '../../components/Spinner'\r\n\r\n//import WriteBlock from '../../components/WriteBlock';\r\n\r\nexport default function QuestionDetailPage({ match }) {\r\n  const questionID = match.params.questionID\r\n  const { loading, data, error } = useSelector((state) => {\r\n    return state.readPost.question\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const getQuestionAsync = useCallback(() => {\r\n    dispatch(readQuestionByUID(questionID))\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    getQuestionAsync()\r\n  }, [dispatch])\r\n\r\n  if (loading)\r\n    return (\r\n      <MainLayout>\r\n        <Spinner />\r\n      </MainLayout>\r\n    )\r\n\r\n  if (error) {\r\n    console.log(error)\r\n    return (\r\n      <MainLayout>\r\n        <div>error...</div>\r\n      </MainLayout>\r\n    )\r\n  }\r\n  if (!data)\r\n    return (\r\n      <>\r\n        <MainLayout>no data</MainLayout>\r\n      </>\r\n    )\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <QuestionSection data={data} />\r\n        <AnswerSection data={data} />\r\n      </MainLayout>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionEditPage.js",["207","208","209","210","211"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { useInput } from '../../hooks/hooks'\r\nimport MainLayout from '../../components/layout/MainLayout'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport MarkdownRenderingBlock from '../../components/MarkdownRenderingBlock'\r\nimport QuestionEditSection from '../../components/question/QuestionEditSection'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function QuestionEditPage() {\r\n  const { data, userID } = useSelector((state) => {\r\n    return {\r\n      data: state.readPost.question.data,\r\n      userID: state.auth.userID,\r\n    }\r\n  }) || {\r\n    data: { question: { questionBody: '' } },\r\n    userID: null,\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (data.question.questionBody.authorID !== userID) {\r\n      alert('잘못된 접근입니다.')\r\n      history.push('/question')\r\n    }\r\n  }, [history])\r\n\r\n  return (\r\n    <MainLayout>\r\n      <section>\r\n        <QuestionEditSection initialData={data} />\r\n      </section>\r\n      <section>\r\n        <div id=\"preview\">\r\n          <div>Preview</div>\r\n          <MarkdownRenderingBlock\r\n            content={data.question.questionBody.content}\r\n          />\r\n        </div>\r\n      </section>\r\n    </MainLayout>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\auth.js",["212","213","214"],"// define ACTION type\r\n\r\nconst LOG_IN_TRY = 'auth/LOG_IN_TRY'\r\nconst LOG_IN_SUCCESS = 'auth/LOG_IN_SUCCESS'\r\nconst LOG_IN_FAIL = 'auth/LOG_IN_FAIL'\r\n\r\nconst CREATE_USER_TRY = 'auth/CREATE_USER_TRY'\r\nconst CREATE_USER_SUCCESS = 'auth/CREATE_USER_SUCCESS'\r\nconst CREATE_USER_FAIL = 'auth/CREATE_USER_FAIL'\r\n\r\nconst initialState = {\r\n  loginState: false,\r\n  userID: '000000000000000000000000',\r\n  userNickname: '익명',\r\n  loading: false,\r\n}\r\n\r\n// 액션타입을 redux 파일 안에 정의하고, 정의한 액션타입을 다른 파일에서 사용하기 위해\r\n// 액션 생성함수를 정의하고, 생성함수를 export 할 것이다.\r\n// thunk 사용시에는 액션생성함수 따로 안만듬.\r\n\r\nexport const login = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOG_IN_SUCCESS })\r\n  } catch (e) {\r\n    console.log('error: ', e)\r\n    dispatch({ type: LOG_IN_FAIL })\r\n  }\r\n}\r\n\r\nexport default function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOG_IN_TRY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userNickname: 'testname',\r\n        userID: 'qwerasdfzxcvnmvclkjh',\r\n        loginState: true,\r\n      }\r\n    case LOG_IN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loginState: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\AboutPage.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\pages\\question\\QuestionWritePage.js",["215","216","217","218","219","220","221","222","223"],"import React, { useEffect, useCallback, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\nimport { useInput } from '../../hooks/hooks';\r\nimport MainLayout from '../../components/layout/MainLayout';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MarkdownRenderingBlock from '../../components/MarkdownRenderingBlock';\r\nimport QuestionWriteSection from '../../components/question/QuestionWriteSection';\r\nimport { uid } from 'uid';\r\n\r\nexport default function QuestionWritePage({ history }) {\r\n  //useEffect(() => {\r\n  //  return () => {\r\n  //    history.block('페이지를 떠나시는건가요?');\r\n  //  };\r\n  //}, [history]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <section>\r\n        <QuestionWriteSection />\r\n      </section>\r\n    </MainLayout>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\readPost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\createPost.js",["224","225","226"],"import axios from 'axios'\r\n\r\nconst initialState = {\r\n  question: {\r\n    loading: false,\r\n    error: null,\r\n    isAdded: false,\r\n  },\r\n  answer: {\r\n    loading: false,\r\n    error: null,\r\n    isAdded: false,\r\n  },\r\n  article: {\r\n    loading: false,\r\n    error: null,\r\n    isAdded: false,\r\n  },\r\n}\r\n\r\n// action types\r\n\r\nconst CREATE_QUESTION_TRY = 'question/CREATE_QUESTION_TRY'\r\nconst CREATE_QUESTION_SUCCESS = 'question/CREATE_QUESTION_SUCCESS'\r\nconst CREATE_QUESTION_FAIL = 'question/CREATE_QUESTION_FAIL'\r\n\r\nconst CREATE_ANSWER_TRY = 'answer/CREATE_ANSWER_TRY'\r\nconst CREATE_ANSWER_SUCCESS = 'answer/CREATE_ANSWER_SUCCESS'\r\nconst CREATE_ANSWER_FAIL = 'answer/CREATE_ANSWER_FAIL'\r\n\r\nconst CREATE_ARTICLE_TRY = 'article/CREATE_ARTICLE_TRY'\r\nconst CREATE_ARTICLE_SUCCESS = 'article/CREATE_ARTICLE_SUCCESS'\r\nconst CREATE_ARTICLE_FAIL = 'article/CREATE_ARTICLE_FAIL'\r\n\r\nconst CREATE_COMMENT_TRY = 'comment/CREATE_COMMENT_TRY'\r\nconst CREATE_COMMENT_SUCCESS = 'comment/CREATE_COMMENT_SUCCESS'\r\nconst CREATE_COMMENT_FAIL = 'comment/CREATE_COMMENT_FAIL'\r\n\r\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\r\n// 3번째 인자를 이용하면 withExtraArgument 에서 넣어준 값을 사용할 수 있다.\r\nexport const createQuestion = (data) => async (\r\n  dispatch,\r\n  getState,\r\n  { history }\r\n) => {\r\n  dispatch({ type: CREATE_QUESTION_TRY })\r\n  try {\r\n    const obj = JSON.stringify(data)\r\n    await axios({\r\n      method: 'post',\r\n      url: `/question`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    await dispatch({ type: CREATE_QUESTION_SUCCESS })\r\n\r\n    history.push(`/question/${data.postID}`)\r\n    // obj 는 스트링으로 만든거라서, data 를 써야함.\r\n  } catch (e) {\r\n    alert('error: ', e)\r\n    dispatch({ type: CREATE_QUESTION_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport const createAnswer = (data) => async (dispatch) => {\r\n  dispatch({ type: CREATE_ANSWER_TRY })\r\n  try {\r\n    const obj = JSON.stringify(data)\r\n    await axios({\r\n      method: 'post',\r\n      url: `/answer`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    dispatch({ type: CREATE_ANSWER_SUCCESS })\r\n    console.log('answer added')\r\n  } catch (e) {\r\n    console.log('error: ', e)\r\n    dispatch({ type: CREATE_ANSWER_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport const createArticle = (data) => async (dispatch) => {\r\n  dispatch({ type: CREATE_ARTICLE_TRY })\r\n  try {\r\n    const obj = JSON.stringify(Object.fromEntries(data))\r\n    await axios({\r\n      method: 'post',\r\n      url: `/article`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({ type: CREATE_ARTICLE_SUCCESS })\r\n    }, 500)\r\n  } catch (e) {\r\n    console.log('error: ', e)\r\n    dispatch({ type: CREATE_ARTICLE_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport default function createPost(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUESTION_TRY:\r\n      return {\r\n        ...state,\r\n        question: {\r\n          loading: true,\r\n          error: null,\r\n        },\r\n      }\r\n    case CREATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        question: {\r\n          loading: false,\r\n          error: null,\r\n          isAdded: true,\r\n        },\r\n      }\r\n    case CREATE_QUESTION_FAIL:\r\n      return {\r\n        ...state,\r\n        question: {\r\n          loading: false,\r\n          error: action.error,\r\n        },\r\n      }\r\n    case CREATE_ANSWER_TRY:\r\n      return {\r\n        ...state,\r\n        answer: {\r\n          loading: true,\r\n          error: null,\r\n        },\r\n      }\r\n    case CREATE_ANSWER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        answer: {\r\n          loading: false,\r\n          error: null,\r\n          isAdded: true,\r\n        },\r\n      }\r\n    case CREATE_ANSWER_FAIL:\r\n      return {\r\n        ...state,\r\n        answer: {\r\n          loading: false,\r\n          error: action.error,\r\n        },\r\n      }\r\n    case CREATE_ARTICLE_TRY:\r\n      return {\r\n        ...state,\r\n        article: {\r\n          loading: true,\r\n          error: null,\r\n        },\r\n      }\r\n    case CREATE_ARTICLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        article: {\r\n          loading: false,\r\n          error: null,\r\n        },\r\n        content: '',\r\n      }\r\n    case CREATE_ARTICLE_FAIL:\r\n      return {\r\n        ...state,\r\n        article: {\r\n          loading: false,\r\n          error: action.error,\r\n        },\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\deletePost.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\redux\\updatePost.js",["227","228","229"],"import axios from 'axios'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  isUpdated: false,\r\n}\r\n\r\n// action types\r\n\r\nconst UPDATE_QUESTION_TRY = 'question/UPDATE_QUESTION_TRY'\r\nconst UPDATE_QUESTION_SUCCESS = 'question/UPDATE_QUESTION_SUCCESS'\r\nconst UPDATE_QUESTION_FAIL = 'question/UPDATE_QUESTION_FAIL'\r\n\r\nconst UPDATE_ANSWER_TRY = 'answer/UPDATE_ANSWER_TRY'\r\nconst UPDATE_ANSWER_SUCCESS = 'answer/UPDATE_ANSWER_SUCCESS'\r\nconst UPDATE_ANSWER_FAIL = 'answer/UPDATE_ANSWER_FAIL'\r\n\r\nconst UPDATE_ARTICLE_TRY = 'article/UPDATE_ARTICLE_TRY'\r\nconst UPDATE_ARTICLE_SUCCESS = 'article/UPDATE_ARTICLE_SUCCESS'\r\nconst UPDATE_ARTICLE_FAIL = 'article/UPDATE_ARTICLE_FAIL'\r\n\r\nconst UPDATE_COMMENT_TRY = 'comment/UPDATE_COMMENT_TRY'\r\nconst UPDATE_COMMENT_SUCCESS = 'comment/UPDATE_COMMENT_SUCCESS'\r\nconst UPDATE_COMMENT_FAIL = 'comment/UPDATE_COMMENT_FAIL'\r\n\r\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\r\n// 3번째 인자를 이용하면 withExtraArgument 에서 넣어준 값을 사용할 수 있다.\r\nexport const updateQuestion = (data) => async (\r\n  dispatch,\r\n  getState,\r\n  { history }\r\n) => {\r\n  dispatch({ type: UPDATE_QUESTION_TRY })\r\n  try {\r\n    const obj = JSON.stringify(data)\r\n    await axios({\r\n      method: 'put',\r\n      url: `/question/${data.postID}`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    await dispatch({ type: UPDATE_QUESTION_SUCCESS })\r\n\r\n    history.push(`/question/${data.postID}`)\r\n    // obj 는 스트링으로 만든거라서, data 를 써야함.\r\n  } catch (e) {\r\n    alert('error: ', e)\r\n    dispatch({ type: UPDATE_QUESTION_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport const updateAnswer = (answerID, data) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_ANSWER_TRY })\r\n  try {\r\n    const obj = JSON.stringify(data)\r\n    await axios({\r\n      method: 'put',\r\n      url: `/answer/${answerID}`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    dispatch({ type: UPDATE_ANSWER_SUCCESS })\r\n    console.log('answer updated')\r\n  } catch (e) {\r\n    console.log('error: ', e)\r\n    dispatch({ type: UPDATE_ANSWER_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport const updateArticle = (data) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_ARTICLE_TRY })\r\n  try {\r\n    const obj = JSON.stringify(Object.fromEntries(data))\r\n    await axios({\r\n      method: 'put',\r\n      url: `/article`,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: obj,\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({ type: UPDATE_ARTICLE_SUCCESS })\r\n    }, 500)\r\n  } catch (e) {\r\n    console.log('error: ', e)\r\n    dispatch({ type: UPDATE_ARTICLE_FAIL, error: e })\r\n  }\r\n}\r\n\r\nexport default function updatePost(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_QUESTION_TRY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case UPDATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        isUpdated: true,\r\n      }\r\n    case UPDATE_QUESTION_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      }\r\n    case UPDATE_ANSWER_TRY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case UPDATE_ANSWER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        isUpdated: true,\r\n      }\r\n    case UPDATE_ANSWER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      }\r\n    case UPDATE_ARTICLE_TRY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case UPDATE_ARTICLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        isUpdated: true,\r\n      }\r\n    case UPDATE_ARTICLE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Spinner.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\MainLayout.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Button.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionEditSection.js",["230","231","232","233","234","235"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport { uid } from 'uid'\r\nimport { useInput } from '../../hooks/hooks'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateQuestion } from '../../redux/updatePost'\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\r\n\r\nexport default React.memo(function QuestionEditSection({ initialData }) {\r\n  const [title, onChangeTitle] = useInput(\r\n    initialData.question.questionBody.title\r\n  )\r\n  const [content, setContent] = useState(\r\n    initialData.question.questionBody.content\r\n  )\r\n  const [hashtagText, setHashtagText] = useState(\r\n    mergeArray(initialData.question.questionBody.hashtags, `\\,`)\r\n  )\r\n  const [hashtagList, setHashtagList] = useState(\r\n    initialData.question.questionBody.hashtags\r\n  )\r\n  const questionID = initialData.question._id || 'error'\r\n  const splitPoint = /\\,/g\r\n\r\n  function mergeArray(array, splitter) {\r\n    let mergedOne = ''\r\n    for (const element of array) {\r\n      mergedOne = mergedOne + element + splitter\r\n    }\r\n    return mergedOne\r\n  }\r\n\r\n  const { userID, userNickname } = useSelector((state) => {\r\n    return {\r\n      userID: state.auth.userID,\r\n      userNickname: state.auth.userNickname,\r\n    }\r\n  }) || {\r\n    userID: '123456789012345678901234',\r\n    userNickname: '익명',\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (hashtagList.length > 10) {\r\n      setHashtagText(hashtagText.substr(0, hashtagText.length - 1))\r\n      hashtagList.pop()\r\n      alert('태그의 갯수가 너무 많아요!')\r\n    }\r\n  }, [hashtagList])\r\n\r\n  const onChangeHashtagText = useCallback(\r\n    (e) => {\r\n      setHashtagText(e.target.value)\r\n      let splitedArray = e.target.value.split(splitPoint)\r\n      const editedArray = splitedArray\r\n        .map((element) => {\r\n          return element.replace(/[^가-힣|a-z|A-Z|0-9]/g, '')\r\n        })\r\n        .filter((string) => string.length > 0)\r\n\r\n      setHashtagList(editedArray)\r\n    },\r\n    [hashtagText]\r\n  )\r\n\r\n  const onSubmitForm = useCallback(\r\n    async (e) => {\r\n      e.preventDefault()\r\n      if (!title || !content) {\r\n        return alert('제목과 본문을 작성해 주세요.')\r\n      }\r\n\r\n      const formData = {\r\n        postID: questionID,\r\n        title: title,\r\n        contentType: 'question',\r\n        content: content,\r\n        authorID: userID,\r\n        authorNickname: userNickname,\r\n        hashtags: hashtagList,\r\n      }\r\n\r\n      dispatch(updateQuestion(formData))\r\n    },\r\n    [title, content, hashtagList]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <form onSubmit={onSubmitForm}>\r\n          <div>\r\n            <label htmlFor=\"title\">title: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={onChangeTitle}\r\n            />\r\n          </div>\r\n          본문\r\n          <MarkdownEditorBlock\r\n            contentProps={content}\r\n            onChangeContentProps={onChangeContent}\r\n          />\r\n          <div>\r\n            <label htmlFor=\"hashtag\">hashtag: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"hashtag\"\r\n              value={hashtagText}\r\n              onChange={onChangeHashtagText}\r\n            />\r\n          </div>\r\n          <div>\r\n            hashtag가 제대로 체크 되나:{' '}\r\n            {hashtagList.map((element, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <a href=\"/\" style={{ color: 'blue' }}>\r\n                    {element}\r\n                  </a>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"button\">\r\n            <button type=\"submit\">Send your message</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <MarkdownRenderingBlock content={content} />\r\n      </section>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\ForceGraph.js",["236","237","238","239","240"],"import React from 'react'\r\nimport * as d3 from 'd3'\r\nimport styles from '../../styles/Techtree.module.css'\r\n\r\nexport default function ForceGraph({ techtreeData, category }) {\r\n  const containerRef = React.useRef(null)\r\n\r\n  const nodeHoverTooltip = (node) => {\r\n    return `<div>     \r\n      <p><b>${node.name}</b></p>\r\n      <p>최근 5년<br />마일리지 커트라인<br />${node.recentMileage}</p>\r\n    </div>`\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let destroyFn\r\n\r\n    if (containerRef.current) {\r\n      const { destroy } = runForceGraph(\r\n        containerRef.current,\r\n        techtreeData,\r\n        category,\r\n        nodeHoverTooltip\r\n      )\r\n      destroyFn = destroy\r\n    }\r\n\r\n    return destroyFn\r\n  }, [category, techtreeData])\r\n\r\n  return <div ref={containerRef} className={styles.container} />\r\n}\r\n\r\nfunction runForceGraph(container, techtreeData, category, nodeHoverTooltip) {\r\n  // linksData 대신, 객체 전체를 받아야지 이게 어느 과목인지도 확인할 수 있음.\r\n  const links = techtreeData.links.map((d) => Object.assign({}, d))\r\n  const nodes = techtreeData.nodes.map((d) => Object.assign({}, d))\r\n\r\n  const containerRect = container.getBoundingClientRect()\r\n  const height = 1000 //containerRect.height;\r\n  const width = 900 //containerRect.width;\r\n\r\n  let xScale = d3.scaleLinear().domain([0, width]).range([0, width])\r\n  let yScale = d3.scaleLinear().domain([0, height]).range([0, height])\r\n\r\n  //const circleColor = () => { return \"#fff\"; };\r\n  //const circleFill = \"#fff\"\r\n  const circleSelctedFill = '#00bebe'\r\n  // 학년별로 색깔을 달리하면, 애초에 테크트리를 제시하는 의미가 없잖아.\r\n  // 내가 3학년인데 고체물리 들어도 되나? 이런걸 보고싶은건데.\r\n  function getRandom00BEBE() {\r\n    const colorSet1 = ['#66b7ce', '#6771dc', '#a367db', '#db67ce', '#00bebe']\r\n    const colorSet2 = [\r\n      '#66b7ce',\r\n      '#00bebe',\r\n      'rgb(0, 170, 170)',\r\n      'rgb(0, 140, 190)',\r\n      'rgb(0, 190, 170)',\r\n    ]\r\n    const randomFactor = Math.floor(Math.random() * 5 - 0.001)\r\n    return colorSet2[randomFactor]\r\n    //return linear-gradient(135deg, orange 60%, cyan)\r\n    //return rgb(randomFactor, 165+randomFactor, 165+randomFactor)\r\n  }\r\n  const circleStrokeColor1 = getRandom00BEBE() //\"#94D7FF\"\r\n  const circleStrokeColor2 = getRandom00BEBE() //\"#5DE87C\"\r\n  const circleStrokeColor3 = getRandom00BEBE() //\"#FFF872\"\r\n  const circleStrokeColor4 = getRandom00BEBE() //\"#FF669A\"\r\n\r\n  const drag = (simulation) => {\r\n    const dragstarted = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart()\r\n      d.fx = d.x\r\n      d.fy = d.y\r\n    }\r\n\r\n    const dragged = (d) => {\r\n      d.fx = d3.event.x\r\n      d.fy = d3.event.y\r\n    }\r\n\r\n    const dragended = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0)\r\n      d.fx = null\r\n      d.fy = null\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended)\r\n  }\r\n\r\n  const simulation = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      'link',\r\n      d3.forceLink(links).id((d) => d.id)\r\n    )\r\n    .force('charge', d3.forceManyBody().strength(-1050))\r\n    .force('link', d3.forceLink(links).distance(200))\r\n    .force('x', d3.forceX())\r\n    .force('y', d3.forceY())\r\n\r\n  var zoom = d3.zoom().scaleExtent([0.3, 8]).on('zoom', zoomed)\r\n\r\n  const svg = d3\r\n    .select(container)\r\n    .call(zoom)\r\n    .append('svg')\r\n    .attr('viewBox', [-width / 2, -height / 3, width, height * 0.75])\r\n\r\n  var x2 = xScale.copy() // reference.\r\n  var y2 = yScale.copy()\r\n\r\n  function zoomed() {\r\n    xScale = d3.event.transform.rescaleX(x2)\r\n    yScale = d3.event.transform.rescaleY(y2)\r\n    tick()\r\n  }\r\n\r\n  svg\r\n    .append('defs')\r\n    .append('marker')\r\n    .attr('id', 'arrowhead')\r\n    .attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a coordinate system 10 wide and 10 high starting on (0,-5)\r\n    .attr('refX', 23) // x coordinate for the reference point of the marker. If circle is bigger, this need to be bigger.\r\n    .attr('refY', 0)\r\n    .attr('orient', 'auto')\r\n    .attr('markerWidth', 10)\r\n    .attr('markerHeight', 10)\r\n    .attr('xoverflow', 'visible')\r\n    .append('svg:path')\r\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n    .attr('fill', '#999')\r\n    .style('stroke', 'none')\r\n    .attr('stroke-width', 1)\r\n    .attr('id', 'vis')\r\n\r\n  const link = svg\r\n    .append('g')\r\n    .attr('stroke', '#999')\r\n    .attr('stroke-opacity', 0.6)\r\n    .selectAll('line')\r\n    .data(links)\r\n    .join('line')\r\n    .attr('class', (d) => {\r\n      return `link${d.index}`\r\n    })\r\n    .attr('stroke-width', 2)\r\n    .attr('marker-end', 'url(#arrowhead)')\r\n\r\n  const node = svg\r\n    .append('g')\r\n    .attr('stroke-width', 2)\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .join('circle')\r\n    //.attr('class',(d)=>{return `${d.name}`})\r\n    .attr('class', (d) => {\r\n      return `node${d.index}`\r\n    })\r\n    .attr('r', 30)\r\n    .style('fill', function (d) {\r\n      return getRandom00BEBE()\r\n    })\r\n    .style('stroke', '#fff')\r\n    .call(drag(simulation))\r\n\r\n  function matchColorForGroup(d) {\r\n    switch (d.group) {\r\n      case 1:\r\n        return circleStrokeColor1\r\n      case 2:\r\n        return circleStrokeColor2\r\n      case 3:\r\n        return circleStrokeColor3\r\n      case 4:\r\n        return circleStrokeColor4\r\n      default:\r\n        return '#00bebe'\r\n    }\r\n  }\r\n\r\n  const label = svg\r\n    .append('g')\r\n    .attr('class', 'labels')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dominant-baseline', 'central')\r\n    .attr('class', (d) => {\r\n      return d.index\r\n    })\r\n    //.attr(\"class\", )\r\n    .text((d) => {\r\n      return d.label\r\n    })\r\n    .style('font-weight', 'bold')\r\n    .style('fill', '#fff')\r\n    .call(drag(simulation))\r\n\r\n  // Add the tooltip element to the graph\r\n  const tooltip = d3.select(container).append('div')\r\n\r\n  const addTooltip = (hoverTooltip, node, x, y) => {\r\n    //  tooltip // tooltip is just div. how add transition?\r\n    //  .transition()\r\n    //    .duration(200)\r\n    tooltip\r\n      .html(hoverTooltip(node))\r\n      .attr('class', 'tooltip')\r\n      .style('left', `${x + 40}px`)\r\n      .style('top', `${y - 120}px`)\r\n      .style('opacity', 0.99)\r\n  }\r\n\r\n  const removeTooltip = () => {\r\n    tooltip\r\n      //  .transition()\r\n      //  .duration(200)\r\n      .style('opacity', 0)\r\n  }\r\n\r\n  node\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY)\r\n      fadeExceptSelected(d)\r\n      node.style('cursor', 'pointer')\r\n    })\r\n    .on('mouseout', (d) => {\r\n      removeTooltip()\r\n      node.style('opacity', '1')\r\n      link.style('opacity', '1')\r\n      //  container.querySelectorAll('circle').forEach((element)=>{\r\n      //  element.style.fill=matchColorForGroup(element)\r\n      //  })\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`\r\n    })\r\n\r\n  label\r\n    .on('mouseover', (d) => {\r\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY)\r\n      fadeExceptSelected(d)\r\n      label.style('cursor', 'pointer')\r\n    })\r\n    .on('mouseout', () => {\r\n      removeTooltip()\r\n      node.style('opacity', '1')\r\n      link.style('opacity', '1')\r\n    })\r\n    .on('click', () => {\r\n      window.location.href = `/subjects/${category}`\r\n    })\r\n\r\n  function fadeExceptSelected(selectedNode) {\r\n    node.style('opacity', '0.2')\r\n    link.style('opacity', '0.1')\r\n    //const displayedNodes = []\r\n    //const displayedLinks = []\r\n\r\n    links.map((linkElement) => {\r\n      // linkElement 에 source, target은 node 객체 값이 들어가있음.\r\n      if (linkElement.source.id === selectedNode.id) {\r\n        //selectedNode.style(\"opacity\" ,\"0.1\")\r\n        container.querySelector(\r\n          `circle.node${linkElement.target.id}`\r\n        ).style.opacity = '1'\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1'\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1'\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.target.id])\r\n        //console.log(\"to: \",nodes[linkElement.target.id])\r\n      } else if (linkElement.target.id === selectedNode.id) {\r\n        container.querySelector(\r\n          `circle.node${linkElement.source.id}`\r\n        ).style.opacity = '1'\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1'\r\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\r\n          '1'\r\n        //displayedLinks.push(linkElement)\r\n        //displayedNodes.push(nodes[linkElement.source.id])\r\n        //console.log(\"from: \",nodes[linkElement.source.id])\r\n      } else {\r\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\r\n          '1'\r\n      }\r\n      //console.log(displayedNodes)\r\n      //displayedNodes.map((element)=>{\r\n      //container.querySelector(`circle.${node.name}`).style.opacity=\"0.1\"\r\n      //node.select(element).style('opacity',\"1\")\r\n      //})\r\n\r\n      // 전부다 투명하게 만들고 나머지 투명도를 복귀하는건 안됨.\r\n      // 자신이 보여줄것 제외하고 그외 나머지를 투명하게 하는식으로 해야지\r\n      // dom 트리상의 문제가 없음.\r\n      //node.select(`circle.${selectedNode.name}`).style('opacity',1)\r\n    })\r\n  }\r\n\r\n  function tick() {\r\n    //update link positions\r\n    link\r\n      .attr('x1', function (d) {\r\n        return xScale(d.source.x)\r\n      })\r\n      .attr('y1', function (d) {\r\n        return yScale(d.source.y)\r\n      })\r\n      .attr('x2', function (d) {\r\n        return xScale(d.target.x)\r\n      })\r\n      .attr('y2', function (d) {\r\n        return yScale(d.target.y)\r\n      })\r\n\r\n    // update node positions\r\n    node.attr('cx', (d) => xScale(d.x)).attr('cy', (d) => yScale(d.y))\r\n\r\n    // update label positions\r\n    label.attr('x', (d) => xScale(d.x)).attr('y', (d) => yScale(d.y))\r\n  }\r\n\r\n  simulation.on('tick', tick)\r\n\r\n  return {\r\n    destroy: () => {\r\n      simulation.stop()\r\n    },\r\n    nodes: () => {\r\n      return svg.node()\r\n    },\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\home\\SubjectBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\dummyTechtree.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\hooks\\hooks.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\AnswerSection.js",["241","242","243","244","245","246","247"],"import React, { useEffect, useState, useCallback } from 'react'\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\r\nimport CommentListBlock from '../CommentListBlock'\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\r\nimport { createAnswer } from '../../redux/createPost'\r\nimport { updateAnswer } from '../../redux/updatePost'\r\nimport { deleteAnswer } from '../../redux/deletePost'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uid } from 'uid'\r\nimport { Link } from 'react-router-dom'\r\nimport { sortISOByTimeStamp } from '../../lib/functions'\r\n\r\nexport default React.memo(function AnswerSection({ data }) {\r\n  const [answers, setAnswers] = useState(\r\n    data.answers.sort((a, b) => {\r\n      sortISOByTimeStamp(a.answerBody.createdAt, b.answerBody.createdAt, -1)\r\n    })\r\n  )\r\n  // 새로운 answer 를 작성할때 사용하는 state: content\r\n  const [content, setContent] = useState('')\r\n  const [isEditingAnswer, setEditingAnswer] = useState(false)\r\n  const [editedAnswerIndex, setEditedAnswerIndex] = useState()\r\n  // 기존 answer 를 수정할때 사용하는 state: editedAnswerContent\r\n  const [editedAnswerContent, setEditedAnswerContent] = useState('')\r\n  const { userID, userNickname } = useSelector((state) => {\r\n    return {\r\n      userID: state.auth.userID,\r\n      userNickname: state.auth.userNickname,\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function startEditAnswer(answer, index) {\r\n    setEditingAnswer(true)\r\n    setEditedAnswerIndex(index)\r\n    setEditedAnswerContent(answer.answerBody.content)\r\n  }\r\n\r\n  function onChangeAnswerContent(e) {\r\n    setEditedAnswerContent(e.target.value)\r\n  }\r\n\r\n  // 새로운 answer 를 추가할때 사용된다.\r\n  const onChangeContent = useCallback(\r\n    (e) => {\r\n      setContent(e.target.value)\r\n    },\r\n    [content]\r\n  )\r\n\r\n  const addAnswer = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      if (!content) {\r\n        return alert('게시글을 작성하세요.')\r\n      }\r\n\r\n      const uid24 = uid(24)\r\n      const formData = {\r\n        answerID: uid24,\r\n        postID: data.question._id,\r\n        contentType: 'answer',\r\n        content: content,\r\n        authorID: userID,\r\n        authorNickname: userNickname,\r\n      }\r\n      const tempAnswer = {\r\n        __v: 0,\r\n        _id: uid24,\r\n        answerBody: {\r\n          answerID: uid24,\r\n          authorID: userID,\r\n          authorNickname: userNickname,\r\n          content: content,\r\n          createdAt: '지금', // Date.now() 가 알수없는 오류를 낸다. 생각해보니 걍 이런식으로 써도 될듯.\r\n          lastUpdate: '지금',\r\n          postID: data.question._id,\r\n        },\r\n      }\r\n      dispatch(createAnswer(formData))\r\n      setAnswers([...answers, tempAnswer])\r\n      setContent('')\r\n    },\r\n    [content, answers]\r\n  )\r\n\r\n  const onUpdateAnswer = useCallback(\r\n    (answerID, index) => {\r\n      if(!editedAnswerContent){\r\n        alert('본문을 입력해 주세요.')\r\n        return\r\n      }\r\n      const data = { content: editedAnswerContent }\r\n      dispatch(updateAnswer(answerID, data))\r\n      setEditingAnswer(false)\r\n      // immer 를 쓰는것보단 이게 나을지도.\r\n      const tempAnswer = {\r\n        ...answers[index],\r\n        answerBody: {\r\n          ...answers[index].answerBody,\r\n          content: editedAnswerContent,\r\n          lastUpdate: '지금',\r\n        },\r\n      }\r\n\r\n      setAnswers(\r\n        answers.map((answer, answerIndex) => {\r\n          if (answerIndex === index) {\r\n            return tempAnswer\r\n          } else {\r\n            return answer\r\n          }\r\n        })\r\n      )\r\n    },\r\n    [editedAnswerContent, answers]\r\n  )\r\n\r\n  const onDeleteAnswer = useCallback(\r\n    (answerID, index) => {\r\n      dispatch(deleteAnswer(answerID))\r\n      answers.splice(index, 1)\r\n      setAnswers([...answers])\r\n    },\r\n    [answers]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {answers.map((element, index) => {\r\n        return (\r\n          <>\r\n            {isEditingAnswer && editedAnswerIndex === index ? (\r\n              // answer 가 수정중일때\r\n              <div key={index}>\r\n                <MarkdownEditorBlock\r\n                  contentProps={element.answerBody.content}\r\n                  onChangeContentProps={onChangeAnswerContent}\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    onUpdateAnswer(element._id, index)\r\n                  }}\r\n                >\r\n                  수정완료\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              // answer 가 수정중이 아닐때\r\n              <div key={index}>\r\n                <div className=\"content\">\r\n                  answer{index}\r\n                  {element.answerBody ? (\r\n                    <MarkdownRenderingBlock\r\n                      content={element.answerBody.content}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <Link to={`/user/${element.answerBody.authorID}`}>\r\n                    답변 작성자 닉네임: {element.answerBody.authorNickname}\r\n                  </Link>\r\n                </div>\r\n                <div>마지막 업데이트 날짜: {element.answerBody.lastUpdate}</div>\r\n\r\n                {userID !== '000000000000000000000000' &&\r\n                userID === element.answerBody.authorID ? (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        startEditAnswer(element, index)\r\n                      }}\r\n                    >\r\n                      answer 수정\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        onDeleteAnswer(element._id, index)\r\n                      }}\r\n                    >\r\n                      answer 삭제\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {/* <CommentListBlock commentList={element.answerBody.comments} /> */}\r\n                <MarkdownEditorBlock />\r\n                <button>answer에 댓글달기</button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )\r\n      })}\r\n\r\n      <MarkdownEditorBlock\r\n        className=\"answerWrite\"\r\n        onChangeContentProps={onChangeContent}\r\n        contentProps={content}\r\n      />\r\n      <button onClick={addAnswer}>answer 추가하기</button>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownRenderingBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionSection.js",["248","249","250","251","252","253","254"],"import React, { useState, useCallback, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\r\nimport CommentListBlock from '../CommentListBlock'\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\r\nimport { TagBlock } from '../TagBlock'\r\nimport { Button } from '../Button'\r\nimport { uid } from 'uid'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  deleteQuestion,\r\n  deleteAnswer,\r\n  deleteComment,\r\n} from '../../redux/deletePost'\r\n\r\nexport default React.memo(function QuestionSection({ data }) {\r\n  const [content, setContent] = useState('')\r\n  const { userID } = useSelector((state) => {\r\n    return { userID: state.auth.userID }\r\n  })\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onDeleteQuestion = useCallback(() => {\r\n    //alert('정말 삭제합니까?');\r\n    dispatch(deleteQuestion(data.question._id))\r\n  }, [dispatch])\r\n\r\n  function deleteComment() {\r\n    alert('정말 삭제합니까?')\r\n  }\r\n\r\n  const onSubmitComment = useCallback(\r\n    async (e) => {\r\n      e.preventDefault()\r\n      if (!content) {\r\n        return\r\n      }\r\n      const formData = new FormData()\r\n      const uid24 = uid(24)\r\n      formData.append('postID', uid24)\r\n      formData.append('contentType', 'question')\r\n      formData.append('content', content)\r\n      formData.append('authorID', '123456789012345678901234')\r\n      formData.append('authorNickname', '임시닉네임')\r\n    },\r\n    [content]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title\">Title: {data.question.questionBody.title}</div>\r\n      <div>작성일: {data.question.questionBody.createdAt}</div>\r\n      <div>최종 수정일: {data.question.questionBody.lastUpdate}</div>\r\n      <div className=\"content\">\r\n        <MarkdownRenderingBlock content={data.question.questionBody.content} />\r\n      </div>\r\n      <Link to={`/user/${data.question.questionBody.authorID}`}>\r\n        글쓴이: {data.question.questionBody.authorNickname}\r\n      </Link>\r\n      <div className=\"hashtags\">\r\n        {data.question.questionBody.hashtags.map((tag, index) => {\r\n          return (\r\n            <div key={index}>\r\n              해시태그{index}:{' '}\r\n              <TagBlock\r\n                text={tag}\r\n                function={() => {\r\n                  alert('tag clicked!')\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      {data.question.questionBody.authorID === userID &&\r\n      data.answers.length === 0 &&\r\n      userID !== '000000000000000000000000' ? (\r\n        <>\r\n          <button>\r\n            <Link to={`/question/edit/${data.question._id}`}>\r\n              question 수정하기\r\n            </Link>\r\n          </button>\r\n          <button onClick={onDeleteQuestion}>question 삭제하기</button>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {/*<CommentListBlock commentList={question.comments} />*/}\r\n\r\n      <MarkdownEditorBlock\r\n        initialContent={''}\r\n        onChangeContentProps={onChangeContent}\r\n      />\r\n      <button onClick={onSubmitComment}>question 에 댓글달기</button>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\question\\QuestionWriteSection.js",["255","256","257","258"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport { uid } from 'uid'\r\nimport { useInput } from '../../hooks/hooks'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createQuestion } from '../../redux/createPost'\r\nimport MarkdownEditorBlock from '../MarkdownEditorBlock'\r\nimport MarkdownRenderingBlock from '../MarkdownRenderingBlock'\r\nimport { TagBlock } from '../TagBlock'\r\nimport { Button } from '../Button'\r\n\r\nexport default React.memo(function QuestionWriteSection() {\r\n  const [title, onChangeTitle] = useInput('')\r\n  const [content, setContent] = useState('')\r\n  const [hashtagText, setHashtagText] = useState('')\r\n  const [hashtagList, setHashtagList] = useState([])\r\n\r\n  const splitPoint = /\\,/g\r\n\r\n  const { userID, userNickname } = useSelector((state) => {\r\n    return {\r\n      userID: state.auth.userID,\r\n      userNickname: state.auth.userNickname,\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function onChangeContent(e) {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (hashtagList.length > 10) {\r\n      setHashtagText(hashtagText.substr(0, hashtagText.length - 1))\r\n      hashtagList.pop()\r\n      alert('태그의 갯수가 너무 많아요!')\r\n    }\r\n  }, [hashtagList])\r\n\r\n  const onChangeHashtagText = useCallback(\r\n    (e) => {\r\n      setHashtagText(e.target.value)\r\n      let splitedArray = e.target.value.split(splitPoint)\r\n      const editedArray = splitedArray\r\n        .map((element) => {\r\n          return element.replace(/[^가-힣|a-z|A-Z|0-9]/g, '')\r\n        })\r\n        .filter((string) => string.length > 0)\r\n\r\n      setHashtagList(editedArray)\r\n    },\r\n    [hashtagText]\r\n  )\r\n\r\n  const onSubmitForm = useCallback(\r\n    async (e) => {\r\n      e.preventDefault()\r\n      if (!title || !content) {\r\n        return alert('제목과 본문을 작성해 주세요.')\r\n      }\r\n\r\n      const uid24 = uid(24)\r\n      const formData = {\r\n        postID: uid24,\r\n        title: title,\r\n        contentType: 'question',\r\n        content: content,\r\n        authorID: userID,\r\n        authorNickname: userNickname,\r\n        hashtags: hashtagList,\r\n      }\r\n\r\n      dispatch(createQuestion(formData))\r\n    },\r\n    [title, content, hashtagList]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <form onSubmit={onSubmitForm}>\r\n          <div>\r\n            <label htmlFor=\"title\">\r\n              <h3>제목</h3>\r\n              제목만으로도 무슨 내용인지 파악할 수 있게 적어주세요.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={onChangeTitle}\r\n            />\r\n          </div>\r\n          <h3>본문</h3>\r\n\r\n          <MarkdownEditorBlock\r\n            initialContent={''}\r\n            onChangeContentProps={onChangeContent}\r\n          />\r\n          <div>\r\n            <label htmlFor=\"hashtag\">\r\n              <h3>Tags</h3>\r\n              태그는 쉼표로 구분되며, 10개까지 입력이 가능합니다{' '}\r\n            </label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"hashtag\"\r\n                value={hashtagText}\r\n                onChange={onChangeHashtagText}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {hashtagList.map((element, index) => {\r\n              return (\r\n                <TagBlock\r\n                  key={index}\r\n                  text={element}\r\n                  function={(e) => {\r\n                    e.preventDefault()\r\n                  }}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"button\">\r\n            <Button\r\n              className=\"ask-btn\"\r\n              type=\"submit\"\r\n              buttonStyle=\"btn--outline\"\r\n            >\r\n              작성 완료\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <MarkdownRenderingBlock content={content} />\r\n      </section>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\functions.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Navbar.js",["259","260","261","262","263","264","265"],"import React, { useState, useCallback } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport '../../styles/layout/Header.scss'\r\nimport { FaTimes, FaBars } from 'react-icons/fa'\r\n\r\nimport { LoginModal } from './LoginModal'\r\n\r\nexport default function Header() {\r\n  // useSelector: 리덕스 스토어의 상태를 조회하는 hooks.\r\n  // state 의 값은 리덕스 스토에다가 getState() 를 호출했을때 나오는 값과 같음.\r\n  const { loginState, userID, userNickname } = useSelector((state) => {\r\n    return {\r\n      loginState: state.auth.loginState,\r\n      userID: state.auth.userID,\r\n      userNickname: state.auth.userNickname,\r\n    }\r\n  })\r\n\r\n  // useDispatch : 리덕스 스토어의 dispatch 를 함수에서 쓸 수 있게 해주는 hooks.\r\n  const dispatch = useDispatch()\r\n\r\n  // useCallback : 함수의 불필요한 리렌더링을 막기 위한 hooks.\r\n  // react 는 컴포넌트가 리렌더링되면 함수도 새로 생기는데, 반복적으로 사용하는 함수를 리렌더링 하지 않고 재사용하기 위함.\r\n\r\n  const [menuClick, setMenuClick] = useState(false)\r\n\r\n  const handleMenuClick = () => setMenuClick(!menuClick)\r\n  const closeMobileMenu = () => setMenuClick(false)\r\n\r\n  const [isAuth, setIsAuth] = useState(true)\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"logo-container\">\r\n          <NavLink to=\"/\" className=\"logo\">\r\n            Tect.dev\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"menu-icon\" onClick={handleMenuClick}>\r\n          {menuClick ? <FaTimes /> : <FaBars />}\r\n        </div>\r\n        <nav className=\"navbar\">\r\n          <ul\r\n            className={\r\n              menuClick ? 'navbar-container clicked' : 'navbar-container'\r\n            }\r\n          >\r\n            <li className=\"navbar-item\">\r\n              <NavLink to=\"/question\" className=\"navbar-item-link\">\r\n                Q {`\\&`} A\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <NavLink to=\"/article\" className=\"navbar-item-link\">\r\n                Article\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <NavLink to=\"/freeboard\" className=\"navbar-item-link\">\r\n                Freeboard\r\n              </NavLink>\r\n            </li>\r\n            <div className=\"header-search\">\r\n              <input className=\"header-search-input\" placeholder=\"Search...\" />\r\n            </div>\r\n            <div className=\"auth-container\">\r\n              {loginState ? (\r\n                <div className=\"mypage-container\">\r\n                  <NavLink to={`/user/${userID}`} className=\"navbar-item-link\">\r\n                    MyPage\r\n                  </NavLink>\r\n                </div>\r\n              ) : (\r\n                <div className=\"login-container\">\r\n                  <input\r\n                    className=\"login-modal-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"login-popup\"\r\n                  />\r\n                  <label htmlFor=\"login-popup\" className=\"login-modal-btn\">\r\n                    Login\r\n                  </label>\r\n                  <LoginModal labelFor=\"login-popup\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n    // <>\r\n    //   <nav className=\"navbar\">\r\n    //     <div className=\"nav-container\">\r\n    //       <Link to=\"/\" className=\"navbar-logo\">\r\n    //         Tect.dev\r\n    //       </Link>\r\n    //       <div className=\"menu-icon\" onClick={handleMenuClick}>\r\n    //         {menuClick ? <FaTimes /> : <FaBars />}\r\n    //       </div>\r\n    //       <ul className={menuClick ? 'nav-menu active' : 'nav-menu'}>\r\n    //         <li className=\"nav-item\">\r\n    //           <Link\r\n    //             to=\"/question\"\r\n    //             className=\"nav-links\"\r\n    //             onClick={closeMobileMenu}\r\n    //           >\r\n    //             QnA\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <Link\r\n    //             to=\"/article\"\r\n    //             className=\"nav-links\"\r\n    //             onClick={closeMobileMenu}\r\n    //           >\r\n    //             Article\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <Link\r\n    //             to=\"/freeboard\"\r\n    //             className=\"nav-links\"\r\n    //             onClick={closeMobileMenu}\r\n    //           >\r\n    //             Freeboard\r\n    //           </Link>\r\n    //         </li>\r\n    //         <li className=\"nav-item\" id=\"input-container\">\r\n    //           <div className=\"input-container\">\r\n    //             <input />\r\n    //           </div>\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           {loginState ? (\r\n    //             <Link\r\n    //               to=\"/user/userID\"\r\n    //               className=\"nav-links\"\r\n    //               onClick={closeMobileMenu}\r\n    //             >\r\n    //               MyPage\r\n    //             </Link>\r\n    //           ) : (\r\n    //             <div className=\"nav-btns\">\r\n    //               <Button buttonStyle=\"btn--outline\">Login</Button>\r\n    //             </div>\r\n    //           )}\r\n    //         </li>\r\n    //         <li className=\"nav-item\">\r\n    //           <button onClick={onLogin}>임시 로그인 테스트용 버튼</button>\r\n    //         </li>\r\n    //       </ul>\r\n    //     </div>\r\n    //   </nav>\r\n    // </>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\Footer.js",["266"],"import { Link } from 'react-router-dom';\r\nimport '../../styles/layout/Footer.scss';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          {/* <div>기업 푸터</div>\r\n          <div>일반: 전화번호, 이메일, 계좌정보 </div>\r\n          <div>고객센터 : 전화, 팩스, 이메일, 카카오톡ID(혹은 링크) 상담가능 일시</div>\r\n          <div>법인 : 상호, 대표, 주소, 개인정보관리 책임자, 사업자 등록번호, 통신판매업 신고</div>\r\n          <div> 계좌번호 목록</div>\r\n          <div>회사소개, 개인정보보호정책/처리방침, 이용약관, 사이트맵</div>\r\n          <div>SNS 링크</div>\r\n          <div>별도의 Contact us도 필요한가</div> */}\r\n          footer\r\n        </div>\r\n      </footer>\r\n      {/* <ul>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-links\">\r\n            About Tect.dev\r\n          </Link>\r\n        </li>\r\n      </ul> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\CommentListBlock.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismPlugin.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\MarkdownEditorBlock.js",["267","268"],"import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nexport default React.memo(function MarkdownEditorBlock({\r\n  onChangeContentProps,\r\n  contentProps,\r\n}) {\r\n  const [content, setContent] = useState(contentProps)\r\n\r\n  const onChangeContent = useCallback((e) => {\r\n    setContent(e.target.value)\r\n    onChangeContentProps(e)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"content\"></label>\r\n      <textarea\r\n        id=\"content\"\r\n        value={content}\r\n        onChange={onChangeContent}\r\n      ></textarea>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\katexWhiteList.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\lib\\prismThemes.js",[],"C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\TagBlock.js",["269"],"import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledTagBlock = styled.div`\r\n  display: inline-flex;\r\n  border-radius: 5px;\r\n  background: #00bebe;\r\n  color: #ffffff;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px 0 2px;\r\n  width: inherit;\r\n  opacity: 0.8;\r\n  &:hover {\r\n    background: #00bebe;\r\n    color: #ffffff;\r\n    transition: all ease-in 0.2s;\r\n    opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const TagBlock = React.memo(({ text, functionProps }) => {\r\n  const onClickTag = useCallback((e) => {\r\n    alert('tag is clicked!')\r\n  })\r\n  return <StyledTagBlock onClick={onClickTag}>{text}</StyledTagBlock>\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\layout\\LoginModal.js",["270"],"import React, { useCallback } from 'react'\r\nimport '../../styles/layout/LoginModal.scss'\r\nimport { Button } from '../Button'\r\nimport { login } from '../../redux/auth'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const LoginModal = React.memo(({ labelFor }) => {\r\n  const dispatch = useDispatch()\r\n  const loginTry = useCallback(() => {\r\n    dispatch(login())\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-modal\">\r\n        <div className=\"login-modal-display\">\r\n          <label className=\"login-modal-close-btn\" htmlFor={labelFor} />\r\n          {/* <div/>\r\n            <div/> */}\r\n          {/* </label> */}\r\n          <div className=\"login-modal-display-logo\">Login</div>\r\n          <div className=\"login-modal-display-body\">\r\n            <form name=\"devguru-auth\" className=\"login-form\" autoComplete=\"off\">\r\n              {/* method=\"POST\" action=\"#\"> */}\r\n              <input\r\n                id=\"login-id-input\"\r\n                className=\"login-input\"\r\n                type=\"email\"\r\n                placeholder=\"Enter ID\"\r\n                required\r\n              />\r\n              <input\r\n                id=\"login-pw-input\"\r\n                className=\"login-input\"\r\n                type=\"password\"\r\n                placeholder=\"Enter PW\"\r\n                required\r\n              />\r\n              <Button\r\n                className=\"login-submit\"\r\n                htmlType=\"submit\"\r\n                onClick={loginTry}\r\n              >\r\n                {' '}\r\n                Login{' '}\r\n              </Button>\r\n              <div className=\"auth-help\">\r\n                <div className=\"auth-help-element\">\r\n                  <input id=\"rememberUser\" type=\"radio\" name=\"Remember Me\" />\r\n                  <label htmlFor=\"rememberUser\"> Remember Me</label>\r\n                </div>\r\n                <div className=\"auth-help-element\">Forgot ID/PW?</div>\r\n              </div>\r\n              <div className=\"authProviders\">\r\n                <div>Google</div>\r\n                <div>Facebook</div>\r\n                <div>Github</div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <label className=\"login-modal-close-area\" htmlFor={labelFor} />\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Administrator\\Documents\\GitHub\\front-react\\src\\components\\Pagination.js",["271","272","273","274","275"],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":16,"column":11,"nodeType":"282","messageId":"283","endLine":16,"endColumn":19},{"ruleId":"280","severity":1,"message":"284","line":19,"column":9,"nodeType":"282","messageId":"283","endLine":19,"endColumn":17},{"ruleId":"280","severity":1,"message":"285","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":21},{"ruleId":"286","severity":1,"message":"287","line":27,"column":13,"nodeType":"288","endLine":33,"endColumn":4},{"ruleId":"286","severity":1,"message":"289","line":33,"column":6,"nodeType":"290","endLine":33,"endColumn":16,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":59,"column":15,"nodeType":"294","endLine":59,"endColumn":71},{"ruleId":"292","severity":1,"message":"293","line":65,"column":15,"nodeType":"294","endLine":65,"endColumn":72},{"ruleId":"292","severity":1,"message":"293","line":71,"column":15,"nodeType":"294","endLine":71,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":77,"column":15,"nodeType":"294","endLine":77,"endColumn":69},{"ruleId":"292","severity":1,"message":"293","line":83,"column":15,"nodeType":"294","endLine":83,"endColumn":74},{"ruleId":"292","severity":1,"message":"293","line":89,"column":15,"nodeType":"294","endLine":89,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":14,"column":15,"nodeType":"294","endLine":14,"endColumn":130},{"ruleId":"280","severity":1,"message":"295","line":4,"column":10,"nodeType":"282","messageId":"283","endLine":4,"endColumn":14},{"ruleId":"286","severity":1,"message":"296","line":22,"column":6,"nodeType":"290","endLine":22,"endColumn":16,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"298","line":26,"column":6,"nodeType":"290","endLine":26,"endColumn":16,"suggestions":"299"},{"ruleId":"280","severity":1,"message":"300","line":1,"column":28,"nodeType":"282","messageId":"283","endLine":1,"endColumn":39},{"ruleId":"280","severity":1,"message":"301","line":1,"column":41,"nodeType":"282","messageId":"283","endLine":1,"endColumn":49},{"ruleId":"280","severity":1,"message":"302","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":18},{"ruleId":"280","severity":1,"message":"303","line":4,"column":23,"nodeType":"282","messageId":"283","endLine":4,"endColumn":34},{"ruleId":"286","severity":1,"message":"304","line":27,"column":6,"nodeType":"290","endLine":27,"endColumn":15,"suggestions":"305"},{"ruleId":"280","severity":1,"message":"306","line":7,"column":7,"nodeType":"282","messageId":"283","endLine":7,"endColumn":22},{"ruleId":"280","severity":1,"message":"307","line":8,"column":7,"nodeType":"282","messageId":"283","endLine":8,"endColumn":26},{"ruleId":"280","severity":1,"message":"308","line":9,"column":7,"nodeType":"282","messageId":"283","endLine":9,"endColumn":23},{"ruleId":"280","severity":1,"message":"309","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":26},{"ruleId":"280","severity":1,"message":"300","line":1,"column":28,"nodeType":"282","messageId":"283","endLine":1,"endColumn":39},{"ruleId":"280","severity":1,"message":"301","line":1,"column":41,"nodeType":"282","messageId":"283","endLine":1,"endColumn":49},{"ruleId":"280","severity":1,"message":"310","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":16},{"ruleId":"280","severity":1,"message":"302","line":3,"column":10,"nodeType":"282","messageId":"283","endLine":3,"endColumn":18},{"ruleId":"280","severity":1,"message":"311","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":21},{"ruleId":"280","severity":1,"message":"303","line":5,"column":23,"nodeType":"282","messageId":"283","endLine":5,"endColumn":34},{"ruleId":"280","severity":1,"message":"312","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":30},{"ruleId":"280","severity":1,"message":"313","line":8,"column":10,"nodeType":"282","messageId":"283","endLine":8,"endColumn":13},{"ruleId":"280","severity":1,"message":"314","line":35,"column":7,"nodeType":"282","messageId":"283","endLine":35,"endColumn":25},{"ruleId":"280","severity":1,"message":"315","line":36,"column":7,"nodeType":"282","messageId":"283","endLine":36,"endColumn":29},{"ruleId":"280","severity":1,"message":"316","line":37,"column":7,"nodeType":"282","messageId":"283","endLine":37,"endColumn":26},{"ruleId":"280","severity":1,"message":"317","line":23,"column":7,"nodeType":"282","messageId":"283","endLine":23,"endColumn":25},{"ruleId":"280","severity":1,"message":"318","line":24,"column":7,"nodeType":"282","messageId":"283","endLine":24,"endColumn":29},{"ruleId":"280","severity":1,"message":"319","line":25,"column":7,"nodeType":"282","messageId":"283","endLine":25,"endColumn":26},{"ruleId":"280","severity":1,"message":"313","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":13},{"ruleId":"320","severity":1,"message":"321","line":17,"column":61,"nodeType":"322","messageId":"323","endLine":17,"endColumn":62,"suggestions":"324"},{"ruleId":"320","severity":1,"message":"321","line":23,"column":23,"nodeType":"325","messageId":"323","endLine":23,"endColumn":24,"suggestions":"326"},{"ruleId":"286","severity":1,"message":"327","line":55,"column":6,"nodeType":"290","endLine":55,"endColumn":19,"suggestions":"328"},{"ruleId":"286","severity":1,"message":"329","line":69,"column":5,"nodeType":"290","endLine":69,"endColumn":18,"suggestions":"330"},{"ruleId":"286","severity":1,"message":"331","line":91,"column":5,"nodeType":"290","endLine":91,"endColumn":34,"suggestions":"332"},{"ruleId":"280","severity":1,"message":"333","line":39,"column":9,"nodeType":"282","messageId":"283","endLine":39,"endColumn":22},{"ruleId":"280","severity":1,"message":"334","line":48,"column":9,"nodeType":"282","messageId":"283","endLine":48,"endColumn":26},{"ruleId":"280","severity":1,"message":"335","line":52,"column":11,"nodeType":"282","messageId":"283","endLine":52,"endColumn":20},{"ruleId":"280","severity":1,"message":"336","line":171,"column":12,"nodeType":"282","messageId":"283","endLine":171,"endColumn":30},{"ruleId":"337","severity":1,"message":"338","line":267,"column":29,"nodeType":"288","messageId":"339","endLine":267,"endColumn":31},{"ruleId":"280","severity":1,"message":"309","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":26},{"ruleId":"280","severity":1,"message":"340","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":24},{"ruleId":"337","severity":1,"message":"341","line":15,"column":30,"nodeType":"288","messageId":"339","endLine":15,"endColumn":32},{"ruleId":"286","severity":1,"message":"342","line":49,"column":5,"nodeType":"290","endLine":49,"endColumn":14,"suggestions":"343"},{"ruleId":"286","severity":1,"message":"344","line":85,"column":5,"nodeType":"290","endLine":85,"endColumn":23,"suggestions":"345"},{"ruleId":"286","severity":1,"message":"346","line":117,"column":5,"nodeType":"290","endLine":117,"endColumn":35,"suggestions":"347"},{"ruleId":"286","severity":1,"message":"346","line":126,"column":5,"nodeType":"290","endLine":126,"endColumn":14,"suggestions":"348"},{"ruleId":"280","severity":1,"message":"309","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":49},{"ruleId":"280","severity":1,"message":"340","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":24},{"ruleId":"280","severity":1,"message":"349","line":7,"column":10,"nodeType":"282","messageId":"283","endLine":7,"endColumn":16},{"ruleId":"280","severity":1,"message":"350","line":12,"column":3,"nodeType":"282","messageId":"283","endLine":12,"endColumn":15},{"ruleId":"280","severity":1,"message":"351","line":13,"column":3,"nodeType":"282","messageId":"283","endLine":13,"endColumn":16},{"ruleId":"286","severity":1,"message":"352","line":31,"column":6,"nodeType":"290","endLine":31,"endColumn":16,"suggestions":"353"},{"ruleId":"280","severity":1,"message":"351","line":33,"column":12,"nodeType":"282","messageId":"283","endLine":33,"endColumn":25},{"ruleId":"320","severity":1,"message":"321","line":17,"column":23,"nodeType":"325","messageId":"323","endLine":17,"endColumn":24,"suggestions":"354"},{"ruleId":"286","severity":1,"message":"327","line":38,"column":6,"nodeType":"290","endLine":38,"endColumn":19,"suggestions":"355"},{"ruleId":"286","severity":1,"message":"329","line":52,"column":5,"nodeType":"290","endLine":52,"endColumn":18,"suggestions":"356"},{"ruleId":"286","severity":1,"message":"357","line":75,"column":5,"nodeType":"290","endLine":75,"endColumn":34,"suggestions":"358"},{"ruleId":"280","severity":1,"message":"300","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":38},{"ruleId":"280","severity":1,"message":"359","line":13,"column":31,"nodeType":"282","messageId":"283","endLine":13,"endColumn":43},{"ruleId":"280","severity":1,"message":"284","line":22,"column":9,"nodeType":"282","messageId":"283","endLine":22,"endColumn":17},{"ruleId":"280","severity":1,"message":"360","line":30,"column":9,"nodeType":"282","messageId":"283","endLine":30,"endColumn":24},{"ruleId":"280","severity":1,"message":"361","line":32,"column":10,"nodeType":"282","messageId":"283","endLine":32,"endColumn":16},{"ruleId":"280","severity":1,"message":"362","line":32,"column":18,"nodeType":"282","messageId":"283","endLine":32,"endColumn":27},{"ruleId":"320","severity":1,"message":"363","line":53,"column":21,"nodeType":"322","messageId":"323","endLine":53,"endColumn":22,"suggestions":"364"},{"ruleId":"280","severity":1,"message":"295","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":14},{"ruleId":"280","severity":1,"message":"309","line":1,"column":30,"nodeType":"282","messageId":"283","endLine":1,"endColumn":39},{"ruleId":"286","severity":1,"message":"365","line":12,"column":6,"nodeType":"290","endLine":12,"endColumn":8,"suggestions":"366"},{"ruleId":"286","severity":1,"message":"367","line":23,"column":22,"nodeType":"282","endLine":23,"endColumn":33},{"ruleId":"286","severity":1,"message":"367","line":9,"column":20,"nodeType":"282","endLine":9,"endColumn":31},{"ruleId":"280","severity":1,"message":"368","line":13,"column":20,"nodeType":"282","messageId":"283","endLine":13,"endColumn":30},{"ruleId":"280","severity":1,"message":"369","line":17,"column":23,"nodeType":"282","messageId":"283","endLine":17,"endColumn":36},{"ruleId":"280","severity":1,"message":"370","line":18,"column":21,"nodeType":"282","messageId":"283","endLine":18,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":84,"column":32,"nodeType":"373","messageId":"374","endLine":84,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":95,"column":32,"nodeType":"373","messageId":"374","endLine":95,"endColumn":34},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'QuestionBlock' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'data' and 'getQuestionListAsync'. Either include them or remove the dependency array.","ArrayExpression",["377"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","React Hook useCallback has a missing dependency: 'questionID'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'getQuestionAsync'. Either include it or remove the dependency array.",["379"],"'useCallback' is defined but never used.","'useState' is defined but never used.","'useInput' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'data.question.questionBody.authorID' and 'userID'. Either include them or remove the dependency array.",["380"],"'CREATE_USER_TRY' is assigned a value but never used.","'CREATE_USER_SUCCESS' is assigned a value but never used.","'CREATE_USER_FAIL' is assigned a value but never used.","'useEffect' is defined but never used.","'Prompt' is defined but never used.","'useSelector' is defined but never used.","'MarkdownRenderingBlock' is defined but never used.","'uid' is defined but never used.","'CREATE_COMMENT_TRY' is assigned a value but never used.","'CREATE_COMMENT_SUCCESS' is assigned a value but never used.","'CREATE_COMMENT_FAIL' is assigned a value but never used.","'UPDATE_COMMENT_TRY' is assigned a value but never used.","'UPDATE_COMMENT_SUCCESS' is assigned a value but never used.","'UPDATE_COMMENT_FAIL' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\,.","TemplateElement","unnecessaryEscape",["381","382"],"Literal",["383","384"],"React Hook useEffect has a missing dependency: 'hashtagText'. Either include it or remove the dependency array. You can also do a functional update 'setHashtagText(h => ...)' if you only need 'hashtagText' in the 'setHashtagText' call.",["385"],"React Hook useCallback has a missing dependency: 'splitPoint'. Either include it or remove the dependency array.",["386"],"React Hook useCallback has missing dependencies: 'dispatch', 'questionID', 'userID', and 'userNickname'. Either include them or remove the dependency array.",["387"],"'containerRect' is assigned a value but never used.","'circleSelctedFill' is assigned a value but never used.","'colorSet1' is assigned a value but never used.","'matchColorForGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'CommentListBlock' is defined but never used.","Array.prototype.sort() expects a return value from arrow function.","React Hook useCallback has an unnecessary dependency: 'content'. Either exclude it or remove the dependency array.",["388"],"React Hook useCallback has missing dependencies: 'data.question._id', 'dispatch', 'userID', and 'userNickname'. Either include them or remove the dependency array.",["389"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["390"],["391"],"'Button' is defined but never used.","'deleteAnswer' is defined but never used.","'deleteComment' is defined but never used.","React Hook useCallback has a missing dependency: 'data.question._id'. Either include it or remove the dependency array.",["392"],["393","394"],["395"],["396"],"React Hook useCallback has missing dependencies: 'dispatch', 'userID', and 'userNickname'. Either include them or remove the dependency array.",["397"],"'userNickname' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","Unnecessary escape character: \\&.",["398","399"],"React Hook useCallback has a missing dependency: 'onChangeContentProps'. Either include it or remove the dependency array. If 'onChangeContentProps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'setPerPage' is assigned a value but never used.","'setBtnShowNum' is assigned a value but never used.","'setPageBtns' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"messageId":"409","fix":"410","desc":"411"},{"messageId":"412","fix":"413","desc":"414"},{"messageId":"409","fix":"415","desc":"411"},{"messageId":"412","fix":"416","desc":"414"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"messageId":"409","fix":"433","desc":"411"},{"messageId":"412","fix":"434","desc":"414"},{"desc":"417","fix":"435"},{"desc":"419","fix":"436"},{"desc":"437","fix":"438"},{"messageId":"409","fix":"439","desc":"411"},{"messageId":"412","fix":"440","desc":"414"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [data, dispatch, getQuestionListAsync]",{"range":"443","text":"444"},"Update the dependencies array to be: [dispatch, questionID]",{"range":"445","text":"446"},"Update the dependencies array to be: [dispatch, getQuestionAsync]",{"range":"447","text":"448"},"Update the dependencies array to be: [data.question.questionBody.authorID, history, userID]",{"range":"449","text":"450"},"removeEscape",{"range":"451","text":"452"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"453","text":"454"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"455","text":"452"},{"range":"456","text":"454"},"Update the dependencies array to be: [hashtagList, hashtagText]",{"range":"457","text":"458"},"Update the dependencies array to be: [splitPoint]",{"range":"459","text":"460"},"Update the dependencies array to be: [title, content, questionID, userID, userNickname, hashtagList, dispatch]",{"range":"461","text":"462"},"Update the dependencies array to be: []",{"range":"463","text":"464"},"Update the dependencies array to be: [content, data.question._id, userID, userNickname, dispatch, answers]",{"range":"465","text":"466"},"Update the dependencies array to be: [editedAnswerContent, dispatch, answers]",{"range":"467","text":"468"},"Update the dependencies array to be: [answers, dispatch]",{"range":"469","text":"470"},"Update the dependencies array to be: [data.question._id, dispatch]",{"range":"471","text":"472"},{"range":"473","text":"452"},{"range":"474","text":"454"},{"range":"475","text":"458"},{"range":"476","text":"460"},"Update the dependencies array to be: [title, content, userID, userNickname, hashtagList, dispatch]",{"range":"477","text":"478"},{"range":"479","text":"452"},{"range":"480","text":"454"},"Update the dependencies array to be: [onChangeContentProps]",{"range":"481","text":"482"},[1091,1101],"[data, dispatch, getQuestionListAsync]",[861,871],"[dispatch, questionID]",[926,936],"[dispatch, getQuestionAsync]",[903,912],"[data.question.questionBody.authorID, history, userID]",[750,751],"",[750,750],"\\",[945,946],[945,945],[1690,1703],"[hashtagList, hashtagText]",[2102,2115],"[splitPoint]",[2595,2624],"[title, content, questionID, userID, userNickname, hashtagList, dispatch]",[1755,1764],"[]",[2669,2687],"[content, data.question._id, userID, userNickname, dispatch, answers]",[3459,3489],"[editedAnswerContent, dispatch, answers]",[3681,3690],"[answers, dispatch]",[982,992],"[data.question._id, dispatch]",[737,738],[737,737],[1218,1231],[1630,1643],[2147,2176],"[title, content, userID, userNickname, hashtagList, dispatch]",[1768,1769],[1768,1768],[345,347],"[onChangeContentProps]"]