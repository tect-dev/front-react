[{"/Users/zowan/Documents/web/tect-react/src/index.js":"1","/Users/zowan/Documents/web/tect-react/src/reportWebVitals.js":"2","/Users/zowan/Documents/web/tect-react/src/App.js":"3","/Users/zowan/Documents/web/tect-react/src/redux/index.js":"4","/Users/zowan/Documents/web/tect-react/src/pages/HomePage.js":"5","/Users/zowan/Documents/web/tect-react/src/pages/AboutPage.js":"6","/Users/zowan/Documents/web/tect-react/src/redux/auth.js":"7","/Users/zowan/Documents/web/tect-react/src/pages/LoginPage.js":"8","/Users/zowan/Documents/web/tect-react/src/pages/user/ProfilePage.js":"9","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionListPage.js":"10","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionDetailPage.js":"11","/Users/zowan/Documents/web/tect-react/src/pages/NotFoundPage.js":"12","/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionWritePage.js":"13","/Users/zowan/Documents/web/tect-react/src/components/home/ForceGraph.js":"14","/Users/zowan/Documents/web/tect-react/src/components/MainLayout.js":"15","/Users/zowan/Documents/web/tect-react/src/lib/dummyTechtree.js":"16","/Users/zowan/Documents/web/tect-react/src/components/Navbar.js":"17","/Users/zowan/Documents/web/tect-react/src/components/Button.js":"18","/Users/zowan/Documents/web/tect-react/src/redux/post.js":"19","/Users/zowan/Documents/web/tect-react/src/lib/dummyAPI.js":"20","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionBlock.js":"21","/Users/zowan/Documents/web/tect-react/src/components/Footer.js":"22","/Users/zowan/Documents/web/tect-react/src/components/home/SubjectBlock.js":"23","/Users/zowan/Documents/web/tect-react/src/hooks/hooks.js":"24","/Users/zowan/Documents/web/tect-react/src/redux/readPost.js":"25","/Users/zowan/Documents/web/tect-react/src/redux/createPost.js":"26","/Users/zowan/Documents/web/tect-react/src/redux/updatePost.js":"27","/Users/zowan/Documents/web/tect-react/src/redux/deletePost.js":"28","/Users/zowan/Documents/web/tect-react/src/components/question/AnswerWriteBlock.js":"29","/Users/zowan/Documents/web/tect-react/src/components/question/QuestionWriteBlock.js":"30"},{"size":1003,"mtime":1609410316215,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1609067299109,"results":"33","hashOfConfig":"32"},{"size":1429,"mtime":1609249874876,"results":"34","hashOfConfig":"32"},{"size":510,"mtime":1609486396848,"results":"35","hashOfConfig":"32"},{"size":2788,"mtime":1609410316215,"results":"36","hashOfConfig":"32"},{"size":187,"mtime":1609128830553,"results":"37","hashOfConfig":"32"},{"size":1192,"mtime":1609410316216,"results":"38","hashOfConfig":"32"},{"size":192,"mtime":1609129954217,"results":"39","hashOfConfig":"32"},{"size":275,"mtime":1609249874878,"results":"40","hashOfConfig":"32"},{"size":1743,"mtime":1609512115585,"results":"41","hashOfConfig":"32"},{"size":1336,"mtime":1609512385353,"results":"42","hashOfConfig":"32"},{"size":192,"mtime":1609248456580,"results":"43","hashOfConfig":"32"},{"size":660,"mtime":1609512472055,"results":"44","hashOfConfig":"32"},{"size":9939,"mtime":1609410316214,"results":"45","hashOfConfig":"32"},{"size":304,"mtime":1609410316213,"results":"46","hashOfConfig":"32"},{"size":10992,"mtime":1609077007084,"results":"47","hashOfConfig":"32"},{"size":3296,"mtime":1609410316214,"results":"48","hashOfConfig":"32"},{"size":606,"mtime":1609249884112,"results":"49","hashOfConfig":"32"},{"size":2829,"mtime":1609410316216,"results":"50","hashOfConfig":"32"},{"size":1180,"mtime":1609410316215,"results":"51","hashOfConfig":"32"},{"size":211,"mtime":1609485988875,"results":"52","hashOfConfig":"32"},{"size":308,"mtime":1609410316213,"results":"53","hashOfConfig":"32"},{"size":308,"mtime":1609410316214,"results":"54","hashOfConfig":"32"},{"size":250,"mtime":1609249874876,"results":"55","hashOfConfig":"32"},{"size":6164,"mtime":1609512771959,"results":"56","hashOfConfig":"32"},{"size":3472,"mtime":1609508329725,"results":"57","hashOfConfig":"32"},{"size":157,"mtime":1609486369799,"results":"58","hashOfConfig":"32"},{"size":157,"mtime":1609486381328,"results":"59","hashOfConfig":"32"},{"size":1640,"mtime":1609511207484,"results":"60","hashOfConfig":"32"},{"size":1901,"mtime":1609511545288,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"xgtey9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zowan/Documents/web/tect-react/src/index.js",[],["129","130"],"/Users/zowan/Documents/web/tect-react/src/reportWebVitals.js",[],"/Users/zowan/Documents/web/tect-react/src/App.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/index.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/HomePage.js",["131","132","133","134","135","136"],"import React from 'react';\nimport MainLayout from '../components/MainLayout';\n//import '../styles/Home.module.css';\n\nimport ForceGraph from '../components/home/ForceGraph';\nimport SubjectBlock from '../components/home/SubjectBlock';\nimport { dummyTechtree } from '../lib/dummyTechtree';\n\nexport default function HomePage() {\n  return (\n    <>\n      <MainLayout>\n        <div className=\"container\">\n          <main>\n            <ForceGraph techtreeData={dummyTechtree.cs} category={'cs'} />\n          </main>\n          <aside className=\"sidebar\">\n            <div\n              onClick={() => {\n                console.log('physics clicked');\n              }}\n              className=\"block\"\n            >\n              <SubjectBlock\n                iconSize=\"70\"\n                url=\"physics\"\n                displayedName=\"physics\"\n              />\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img\n                src=\"/icons/math.svg\"\n                alt=\"mathematicsIcon\"\n                height=\"70\"\n                width=\"70\"\n              />\n              <br />\n              Mathematics\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img\n                src=\"/icons/economics.svg\"\n                alt=\"economicsIcon\"\n                height=\"70\"\n                width=\"70\"\n              />\n              <br />\n              economics\n            </div>\n\n            <div\n              onClick={() => {\n                console.log('cs clicked');\n              }}\n              className=\"block\"\n            >\n              <img src=\"/icons/computer.svg\" height=\"50\" width=\"50\" />\n              <br />\n              Computer Science\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/chemistry.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Chemistry\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/biochemistry.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Biochemistry\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/russia.svg\" height=\"70\" width=\"70\" />\n              <br />\n              Russia\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/electricity.svg\" height=\"50\" width=\"50\" />\n              <br />\n              Electrical Engineering\n            </div>\n\n            <div onClick={() => {}} className=\"block\">\n              <img src=\"/icons/earth.svg\" height=\"50\" width=\"50\" />\n              <br />\n              Earth System\n            </div>\n          </aside>\n        </div>\n      </MainLayout>\n    </>\n  );\n}\n","/Users/zowan/Documents/web/tect-react/src/pages/AboutPage.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/auth.js",["137","138"],"// define ACTION type\n\nconst LOG_IN_TRY = 'auth/LOG_IN_TRY';\nconst LOG_IN_SUCCESS = 'auth/LOG_IN_SUCCESS';\nconst LOG_IN_FAIL = 'auth/LOG_IN_FAIL';\nconst CREATE_USER_SUCCESS = 'auth/CREATE_USER_SUCCESS';\n\nconst initialState = { loginState: false, userInfo: {} };\n\n// 액션타입을 redux 파일 안에 정의하고, 정의한 액션타입을 다른 파일에서 사용하기 위해\n// 액션 생성함수를 정의하고, 생성함수를 export 할 것이다.\nexport const loginSuccess = () => {\n  return { type: LOG_IN_SUCCESS };\n};\n\n// 1초 뒤에 loginSuccess() 를 디스패치 한다. 딜레이된 로그인석세스를 디스패치->다시한번 로그인석세스를 1초뒤 디스패치.\nexport const loginSuccessDelayed = () => (dispatch) => {\n  setTimeout(() => {\n    dispatch(loginSuccess());\n  }, 1000);\n};\n\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN_SUCCESS:\n      return {\n        userInfo: { userNickname: 'testname', userUID: 'qwerasdfzxcvnmvclkjh' },\n        loginState: true,\n      };\n    case LOG_IN_FAIL:\n      return {\n        ...state,\n        loginState: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/pages/LoginPage.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/user/ProfilePage.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionListPage.js",["139"],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionDetailPage.js",["140","141"],"/Users/zowan/Documents/web/tect-react/src/pages/NotFoundPage.js",[],"/Users/zowan/Documents/web/tect-react/src/pages/question/QuestionWritePage.js",["142","143","144"],"/Users/zowan/Documents/web/tect-react/src/components/home/ForceGraph.js",["145","146","147","148","149","150"],"import React from 'react';\nimport * as d3 from 'd3';\n\nexport default function ForceGraph({ techtreeData, category }) {\n  const containerRef = React.useRef(null);\n\n  const nodeHoverTooltip = (node) => {\n    return `<div>     \n      <p><b>${node.name}</b></p>\n      <p>최근 5년<br />마일리지 커트라인<br />${node.recentMileage}</p>\n    </div>`;\n  };\n\n  React.useEffect(() => {\n    let destroyFn;\n\n    if (containerRef.current) {\n      const { destroy } = runForceGraph(\n        containerRef.current,\n        techtreeData,\n        category,\n        nodeHoverTooltip\n      );\n      destroyFn = destroy;\n    }\n\n    return destroyFn;\n  }, []);\n\n  return <div ref={containerRef} />;\n}\n\nfunction runForceGraph(container, techtreeData, category, nodeHoverTooltip) {\n  // linksData 대신, 객체 전체를 받아야지 이게 어느 과목인지도 확인할 수 있음.\n  const links = techtreeData.links.map((d) => Object.assign({}, d));\n  const nodes = techtreeData.nodes.map((d) => Object.assign({}, d));\n\n  const containerRect = container.getBoundingClientRect();\n  const height = 1000; //containerRect.height;\n  const width = 900; //containerRect.width;\n\n  let xScale = d3.scaleLinear().domain([0, width]).range([0, width]);\n  let yScale = d3.scaleLinear().domain([0, height]).range([0, height]);\n\n  //const circleColor = () => { return \"#fff\"; };\n  //const circleFill = \"#fff\"\n  const circleSelctedFill = '#00bebe';\n  // 학년별로 색깔을 달리하면, 애초에 테크트리를 제시하는 의미가 없잖아.\n  // 내가 3학년인데 고체물리 들어도 되나? 이런걸 보고싶은건데.\n  function getRandom00BEBE() {\n    const colorSet1 = ['#66b7ce', '#6771dc', '#a367db', '#db67ce', '#00bebe'];\n    const colorSet2 = [\n      '#66b7ce',\n      '#00bebe',\n      'rgb(0, 170, 170)',\n      'rgb(0, 140, 190)',\n      'rgb(0, 190, 170)',\n    ];\n    const randomFactor = Math.floor(Math.random() * 5 - 0.001);\n    return colorSet2[randomFactor];\n    //return linear-gradient(135deg, orange 60%, cyan)\n    //return rgb(randomFactor, 165+randomFactor, 165+randomFactor)\n  }\n  const circleStrokeColor1 = getRandom00BEBE(); //\"#94D7FF\"\n  const circleStrokeColor2 = getRandom00BEBE(); //\"#5DE87C\"\n  const circleStrokeColor3 = getRandom00BEBE(); //\"#FFF872\"\n  const circleStrokeColor4 = getRandom00BEBE(); //\"#FF669A\"\n\n  const drag = (simulation) => {\n    const dragstarted = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    const dragged = (d) => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    const dragended = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };\n\n    return d3\n      .drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n  };\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\n      'link',\n      d3.forceLink(links).id((d) => d.id)\n    )\n    .force('charge', d3.forceManyBody().strength(-1050))\n    .force('link', d3.forceLink(links).distance(200))\n    .force('x', d3.forceX())\n    .force('y', d3.forceY());\n\n  var zoom = d3.zoom().scaleExtent([0.3, 8]).on('zoom', zoomed);\n\n  const svg = d3\n    .select(container)\n    .call(zoom)\n    .append('svg')\n    .attr('viewBox', [-width / 2, -height / 3, width, height * 0.75]);\n\n  var x2 = xScale.copy(); // reference.\n  var y2 = yScale.copy();\n\n  function zoomed() {\n    xScale = d3.event.transform.rescaleX(x2);\n    yScale = d3.event.transform.rescaleY(y2);\n    tick();\n  }\n\n  svg\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a coordinate system 10 wide and 10 high starting on (0,-5)\n    .attr('refX', 23) // x coordinate for the reference point of the marker. If circle is bigger, this need to be bigger.\n    .attr('refY', 0)\n    .attr('orient', 'auto')\n    .attr('markerWidth', 10)\n    .attr('markerHeight', 10)\n    .attr('xoverflow', 'visible')\n    .append('svg:path')\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n    .attr('fill', '#999')\n    .style('stroke', 'none')\n    .attr('stroke-width', 1)\n    .attr('id', 'vis');\n\n  const link = svg\n    .append('g')\n    .attr('stroke', '#999')\n    .attr('stroke-opacity', 0.6)\n    .selectAll('line')\n    .data(links)\n    .join('line')\n    .attr('class', (d) => {\n      return `link${d.index}`;\n    })\n    .attr('stroke-width', 2)\n    .attr('marker-end', 'url(#arrowhead)');\n\n  const node = svg\n    .append('g')\n    .attr('stroke-width', 2)\n    .selectAll('circle')\n    .data(nodes)\n    .join('circle')\n    //.attr('class',(d)=>{return `${d.name}`})\n    .attr('class', (d) => {\n      return `node${d.index}`;\n    })\n    .attr('r', 30)\n    .style('fill', function (d) {\n      return getRandom00BEBE();\n    })\n    .style('stroke', '#fff')\n    .call(drag(simulation));\n\n  function matchColorForGroup(d) {\n    switch (d.group) {\n      case 1:\n        return circleStrokeColor1;\n      case 2:\n        return circleStrokeColor2;\n      case 3:\n        return circleStrokeColor3;\n      case 4:\n        return circleStrokeColor4;\n      default:\n        return '#00bebe';\n    }\n  }\n\n  const label = svg\n    .append('g')\n    .attr('class', 'labels')\n    .selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'central')\n    .attr('class', (d) => {\n      return d.index;\n    })\n    //.attr(\"class\", )\n    .text((d) => {\n      return d.label;\n    })\n    .style('font-weight', 'bold')\n    .style('fill', '#fff')\n    .call(drag(simulation));\n\n  // Add the tooltip element to the graph\n  const tooltip = d3.select(container).append('div');\n\n  const addTooltip = (hoverTooltip, node, x, y) => {\n    //  tooltip // tooltip is just div. how add transition?\n    //  .transition()\n    //    .duration(200)\n    tooltip\n      .html(hoverTooltip(node))\n      .attr('class', 'tooltip')\n      .style('left', `${x + 40}px`)\n      .style('top', `${y - 120}px`)\n      .style('opacity', 0.99);\n  };\n\n  const removeTooltip = () => {\n    tooltip\n      //  .transition()\n      //  .duration(200)\n      .style('opacity', 0);\n  };\n\n  node\n    .on('mouseover', (d) => {\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n      fadeExceptSelected(d);\n      node.style('cursor', 'pointer');\n    })\n    .on('mouseout', (d) => {\n      removeTooltip();\n      node.style('opacity', '1');\n      link.style('opacity', '1');\n      //  container.querySelectorAll('circle').forEach((element)=>{\n      //  element.style.fill=matchColorForGroup(element)\n      //  })\n    })\n    .on('click', () => {\n      window.location.href = `/subjects/${category}`;\n    });\n\n  label\n    .on('mouseover', (d) => {\n      addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n      fadeExceptSelected(d);\n      label.style('cursor', 'pointer');\n    })\n    .on('mouseout', () => {\n      removeTooltip();\n      node.style('opacity', '1');\n      link.style('opacity', '1');\n    })\n    .on('click', () => {\n      window.location.href = `/subjects/${category}`;\n    });\n\n  function fadeExceptSelected(selectedNode) {\n    node.style('opacity', '0.2');\n    link.style('opacity', '0.1');\n    //const displayedNodes = []\n    //const displayedLinks = []\n\n    links.map((linkElement) => {\n      // linkElement 에 source, target은 node 객체 값이 들어가있음.\n      if (linkElement.source.id === selectedNode.id) {\n        //selectedNode.style(\"opacity\" ,\"0.1\")\n        container.querySelector(\n          `circle.node${linkElement.target.id}`\n        ).style.opacity = '1';\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1';\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\n          '1';\n        //displayedLinks.push(linkElement)\n        //displayedNodes.push(nodes[linkElement.target.id])\n        //console.log(\"to: \",nodes[linkElement.target.id])\n      } else if (linkElement.target.id === selectedNode.id) {\n        container.querySelector(\n          `circle.node${linkElement.source.id}`\n        ).style.opacity = '1';\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1';\n        container.querySelector(`line.link${linkElement.index}`).style.opacity =\n          '1';\n        //displayedLinks.push(linkElement)\n        //displayedNodes.push(nodes[linkElement.source.id])\n        //console.log(\"from: \",nodes[linkElement.source.id])\n      } else {\n        container.querySelector(`circle.node${selectedNode.id}`).style.opacity =\n          '1';\n      }\n      //console.log(displayedNodes)\n      //displayedNodes.map((element)=>{\n      //container.querySelector(`circle.${node.name}`).style.opacity=\"0.1\"\n      //node.select(element).style('opacity',\"1\")\n      //})\n\n      // 전부다 투명하게 만들고 나머지 투명도를 복귀하는건 안됨.\n      // 자신이 보여줄것 제외하고 그외 나머지를 투명하게 하는식으로 해야지\n      // dom 트리상의 문제가 없음.\n      //node.select(`circle.${selectedNode.name}`).style('opacity',1)\n    });\n  }\n\n  function tick() {\n    //update link positions\n    link\n      .attr('x1', function (d) {\n        return xScale(d.source.x);\n      })\n      .attr('y1', function (d) {\n        return yScale(d.source.y);\n      })\n      .attr('x2', function (d) {\n        return xScale(d.target.x);\n      })\n      .attr('y2', function (d) {\n        return yScale(d.target.y);\n      });\n\n    // update node positions\n    node.attr('cx', (d) => xScale(d.x)).attr('cy', (d) => yScale(d.y));\n\n    // update label positions\n    label.attr('x', (d) => xScale(d.x)).attr('y', (d) => yScale(d.y));\n  }\n\n  simulation.on('tick', tick);\n\n  return {\n    destroy: () => {\n      simulation.stop();\n    },\n    nodes: () => {\n      return svg.node();\n    },\n  };\n}\n","/Users/zowan/Documents/web/tect-react/src/components/MainLayout.js",[],"/Users/zowan/Documents/web/tect-react/src/lib/dummyTechtree.js",[],"/Users/zowan/Documents/web/tect-react/src/components/Navbar.js",["151","152"],"import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginSuccess, loginSuccessDelayed } from '../redux/auth';\nimport '../styles/Navbar.css';\nimport { FaTimes, FaBars } from 'react-icons/fa';\nimport { Button } from './Button';\n\nexport default function Navbar() {\n  // useSelector: 리덕스 스토어의 상태를 조회하는 hooks.\n  // state 의 값은 리덕스 스토에다가 getState() 를 호출했을때 나오는 값과 같음.\n  const { loginState, userInfo } = useSelector((state) => {\n    return { loginState: state.auth.loginState, userInfo: state.auth.user };\n  });\n\n  // useDispatch : 리덕스 스토어의 dispatch 를 함수에서 쓸 수 있게 해주는 hooks.\n  const dispatch = useDispatch();\n\n  // useCallback : 함수의 불필요한 리렌더링을 막기 위한 hooks.\n  // react 는 컴포넌트가 리렌더링되면 함수도 새로 생기는데, 반복적으로 사용하는 함수를 리렌더링 하지 않고 재사용하기 위함.\n  const onLogin = useCallback(() => {\n    dispatch(loginSuccessDelayed());\n  }, [dispatch]);\n\n  const [menuClick, setMenuClick] = useState(false);\n\n  const handleMenuClick = () => setMenuClick(!menuClick);\n  const closeMobileMenu = () => setMenuClick(false);\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link to=\"/\" className=\"navbar-logo\">\n            Tect.dev\n          </Link>\n          <div className=\"menu-icon\" onClick={handleMenuClick}>\n            {menuClick ? <FaTimes /> : <FaBars />}\n          </div>\n          <ul className={menuClick ? 'nav-menu active' : 'nav-menu'}>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/question\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                QnA\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/article\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                Article\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/freeboard\"\n                className=\"nav-links\"\n                onClick={closeMobileMenu}\n              >\n                Freeboard\n              </Link>\n            </li>\n            <li className=\"nav-item\" id=\"input-container\">\n              <div className=\"input-container\">\n                <input />\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              {loginState ? (\n                <Link\n                  to=\"/user/userID\"\n                  className=\"nav-links\"\n                  onClick={closeMobileMenu}\n                >\n                  MyPage\n                </Link>\n              ) : (\n                <div className=\"nav-btns\">\n                  <Button buttonStyle=\"btn--outline\">Login</Button>\n                </div>\n              )}\n            </li>\n            <li className=\"nav-item\">\n              <button onClick={onLogin}>임시 로그인 테스트용 버튼</button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n","/Users/zowan/Documents/web/tect-react/src/components/Button.js",["153"],"import React from 'react'\nimport '../styles/Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn--primary', 'btn--outline']\n\nconst SIZES = ['btn--medium', 'btn--large']\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonStyle : STYLES[0]\n\n  return(\n    <button\n    className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n    onClick={onClick}\n    type={type}\n    >\n    {children}\n    </button>\n  )\n}","/Users/zowan/Documents/web/tect-react/src/redux/post.js",["154"],"// postingAPI.함수이름 으로 사용하게 모든 함수를 임포트(import * as postingAPI)\nimport * as dummyAPI from '../lib/dummyAPI';\nimport axios from 'axios';\n\nconst initialState = {\n  posts: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  post: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n};\n\n// action types\nconst GET_POSTS_TRY = 'post/GET_POSTS_TRY';\nconst GET_POSTS_SUCCESS = 'post/GET_POSTS_SUCCESS';\nconst GET_POSTS_FAIL = 'post/GET_POSTS_FAIL';\n\nconst GET_POST_TRY = 'post/GET_POST_TRY';\nconst GET_POST_SUCCESS = 'post/GET_POST_SUCCESS';\nconst GET_POST_FAIL = 'post/GET_POST_FAIL';\n\n// thunk를 사용할때는 thunk 함수를 dispatch 하므로, 굳이 액션생성함수를 만들어서 export 해줄 필요가 없다.\nexport const getPosts = () => async (dispatch) => {\n  dispatch({ type: GET_POSTS_TRY }); // 요청이 시작됨\n  try {\n    const res = await axios.get('/posts'); //api 요청을 보내고, 성공하면 성공에 대한 타입을 dispatch. 에러가 발생하면 에러에 대한 dispatch\n    // 디버깅을 위해 setTimeout 을 설정해뒀다.\n    setTimeout(() => {\n      dispatch({ type: GET_POSTS_SUCCESS, posts: res.data });\n    }, 500);\n  } catch (e) {\n    dispatch({ type: GET_POSTS_FAIL, error: e });\n  }\n};\n\nexport const getPostById = (id) => async (dispatch) => {\n  dispatch({ type: GET_POST_TRY });\n  try {\n    const res = await axios.get(`/posts/${id}`);\n    console.log('res.data: ', res.data);\n    setTimeout(() => {\n      dispatch({ type: GET_POST_SUCCESS, post: res.data });\n    }, 500);\n  } catch (e) {\n    console.log('error: ', e);\n    dispatch({ type: GET_POST_FAIL, error: e });\n  }\n};\n\nexport default function post(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS_TRY:\n      return {\n        ...state,\n        posts: {\n          loading: true,\n          data: null,\n          error: null,\n        },\n      };\n    case GET_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: {\n          loading: false,\n          data: action.posts,\n          error: null,\n        },\n      };\n    case GET_POSTS_FAIL:\n      return {\n        ...state,\n        posts: {\n          loading: false,\n          data: null,\n          error: action.error,\n        },\n      };\n\n    case GET_POST_TRY:\n      return {\n        ...state,\n        post: {\n          loading: true,\n          data: null,\n          error: null,\n        },\n      };\n    case GET_POST_SUCCESS:\n      return {\n        ...state,\n        post: {\n          loading: false,\n          data: action.post,\n          error: null,\n        },\n      };\n    case GET_POST_FAIL:\n      return {\n        ...state,\n        post: {\n          loading: false,\n          data: null,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/Users/zowan/Documents/web/tect-react/src/lib/dummyAPI.js",[],"/Users/zowan/Documents/web/tect-react/src/components/question/QuestionBlock.js",[],"/Users/zowan/Documents/web/tect-react/src/components/Footer.js",[],"/Users/zowan/Documents/web/tect-react/src/components/home/SubjectBlock.js",[],"/Users/zowan/Documents/web/tect-react/src/hooks/hooks.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/readPost.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/createPost.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/updatePost.js",[],"/Users/zowan/Documents/web/tect-react/src/redux/deletePost.js",[],"/Users/zowan/Documents/web/tect-react/src/components/question/AnswerWriteBlock.js",["155","156","157"],"/Users/zowan/Documents/web/tect-react/src/components/question/QuestionWriteBlock.js",["158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":59,"column":15,"nodeType":"166","endLine":59,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":65,"column":15,"nodeType":"166","endLine":65,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":71,"column":15,"nodeType":"166","endLine":71,"endColumn":75},{"ruleId":"164","severity":1,"message":"165","line":77,"column":15,"nodeType":"166","endLine":77,"endColumn":69},{"ruleId":"164","severity":1,"message":"165","line":83,"column":15,"nodeType":"166","endLine":83,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":89,"column":15,"nodeType":"166","endLine":89,"endColumn":68},{"ruleId":"167","severity":1,"message":"168","line":3,"column":7,"nodeType":"169","messageId":"170","endLine":3,"endColumn":17},{"ruleId":"167","severity":1,"message":"171","line":6,"column":7,"nodeType":"169","messageId":"170","endLine":6,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":24,"column":6,"nodeType":"174","endLine":24,"endColumn":16,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":20,"column":6,"nodeType":"174","endLine":20,"endColumn":16,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":24,"column":6,"nodeType":"174","endLine":24,"endColumn":16,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"181","line":12,"column":11,"nodeType":"169","messageId":"170","endLine":12,"endColumn":21},{"ruleId":"167","severity":1,"message":"182","line":12,"column":23,"nodeType":"169","messageId":"170","endLine":12,"endColumn":31},{"ruleId":"172","severity":1,"message":"183","line":28,"column":6,"nodeType":"174","endLine":28,"endColumn":8,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"185","line":38,"column":9,"nodeType":"169","messageId":"170","endLine":38,"endColumn":22},{"ruleId":"167","severity":1,"message":"186","line":47,"column":9,"nodeType":"169","messageId":"170","endLine":47,"endColumn":26},{"ruleId":"167","severity":1,"message":"187","line":51,"column":11,"nodeType":"169","messageId":"170","endLine":51,"endColumn":20},{"ruleId":"167","severity":1,"message":"188","line":170,"column":12,"nodeType":"169","messageId":"170","endLine":170,"endColumn":30},{"ruleId":"189","severity":1,"message":"190","line":266,"column":29,"nodeType":"191","messageId":"192","endLine":266,"endColumn":31},{"ruleId":"167","severity":1,"message":"193","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":22},{"ruleId":"167","severity":1,"message":"182","line":12,"column":23,"nodeType":"169","messageId":"170","endLine":12,"endColumn":31},{"ruleId":"167","severity":1,"message":"194","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"195","line":2,"column":13,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"180","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"181","line":10,"column":11,"nodeType":"169","messageId":"170","endLine":10,"endColumn":21},{"ruleId":"172","severity":1,"message":"196","line":32,"column":6,"nodeType":"174","endLine":32,"endColumn":15,"suggestions":"197"},{"ruleId":"167","severity":1,"message":"181","line":12,"column":11,"nodeType":"169","messageId":"170","endLine":12,"endColumn":21},{"ruleId":"172","severity":1,"message":"198","line":34,"column":6,"nodeType":"174","endLine":34,"endColumn":22,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'LOG_IN_TRY' is assigned a value but never used.","Identifier","unusedVar","'CREATE_USER_SUCCESS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestionListAsync'. Either include it or remove the dependency array.","ArrayExpression",["202"],"React Hook useCallback has a missing dependency: 'questionUID'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'getQuestionAsync'. Either include it or remove the dependency array.",["204"],"'useEffect' is defined but never used.","'loginState' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'category' and 'techtreeData'. Either include them or remove the dependency array.",["205"],"'containerRect' is assigned a value but never used.","'circleSelctedFill' is assigned a value but never used.","'colorSet1' is assigned a value but never used.","'matchColorForGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loginSuccess' is defined but never used.","'Link' is defined but never used.","'dummyAPI' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'questionUID', and 'userInfo.userUID'. Either include them or remove the dependency array.",["206"],"React Hook useCallback has missing dependencies: 'dispatch' and 'userInfo.userUID'. Either include them or remove the dependency array.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [dispatch, getQuestionListAsync]",{"range":"220","text":"221"},"Update the dependencies array to be: [dispatch, questionUID]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch, getQuestionAsync]",{"range":"224","text":"225"},"Update the dependencies array to be: [category, techtreeData]",{"range":"226","text":"227"},"Update the dependencies array to be: [content, dispatch, questionUID, userInfo.userUID]",{"range":"228","text":"229"},"Update the dependencies array to be: [title, content, userInfo.userUID, dispatch]",{"range":"230","text":"231"},[828,838],"[dispatch, getQuestionListAsync]",[736,746],"[dispatch, questionUID]",[799,809],"[dispatch, getQuestionAsync]",[622,624],"[category, techtreeData]",[1077,1086],"[content, dispatch, questionUID, userInfo.userUID]",[1106,1122],"[title, content, userInfo.userUID, dispatch]"]